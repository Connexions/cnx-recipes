#!/bin/bash

if [ -f /.dockerenv ]; then
  ./script/setup
  if [ "${1:0:1}" == "/" ]; then
    exec "$@"
    exit
  fi
fi

cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

arg1=$1

# Check command line args

if [ -z "${arg1}" ]; then
  _say 'ERROR: Argument Missing. You must specify the name of the book as the 1st argument (or --all). For example: physics'
  _say "You can specify additional commandline arguments like -d to this script if you want more debugging"
  die "Stopping because no commandline args were passed in"
fi


# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

if [ ! "${arg1}" == "--all" ]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_config_name _ <<< "${book_config}"

    if [[ "${arg1}" = "${book_config_name}" ]]; then
      BOOK_CONFIGS=("${book_config}")
      found_config=1
      break
    fi
  done

  if [[ ! 1 -eq "${found_config}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for book_config in "${BOOK_CONFIGS[@]}"; do
      read -r book_name _ <<< "${book_config}"
      _say "${book_name}"
    done
    die "Could not find Book info for book named ${arg1}"
  fi
fi


for book_config in "${BOOK_CONFIGS[@]}"; do
  read -r book_name _ _ _ _ _ _ <<< "${book_config}"

  book_dir="./data/${book_name}/disassembled"
  out_dir="./data/${book_name}/jsonified"

  rm -rf "${out_dir}"
  mkdir "${out_dir}"

  [[ -d "${book_dir}" ]] || die "Could not find the disassemble-book files. Have you run disassemble-book yet?"

  do_progress_quiet "Jsonifying ${book_name} using files in ${book_dir} (~1sec)" \
    python ./script/jsonify-book.py "${book_dir}" "${out_dir}"

  _say "${c_green}Jsonify is done.${c_none} Files are available at ${out_dir}"

  if [ -f /.dockerenv ]; then
    chown -R "$(stat -c '%u:%g' ./data)" ./data
  fi
done
