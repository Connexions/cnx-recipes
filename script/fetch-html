#!/bin/bash
set -e

# This fetches the raw HTML for a book (or all books if using the --all argument) from ${hostName}

arg1=$1

cd "$(dirname "$0")/.."

source ./script/bootstrap || exit 1


# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1


# Check command line args

if [[ ! "${arg1}" ]]; then
  _say "Valid books are (from ./books.txt):"
  for bookConfig in "${BOOK_CONFIGS[@]}"; do
    read -r bookName recipeName uuid _ <<< "${bookConfig}"
    _say "${bookName}"
  done
  die 'Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
fi

if [[ ! "${arg1}" == "--all" ]]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for bookConfig in "${BOOK_CONFIGS[@]}"; do
    read -r bookConfigName recipeName uuid hostName _ <<< "${bookConfig}"

    if [[ "${arg1}" = "${bookConfigName}" ]]; then
      BOOK_CONFIGS=("${bookConfigName} ${recipeName} ${uuid} ${hostName} ${_}")
      hostName=${HOST:-${hostName}}

      foundConfig=1
      break
    fi
  done

  if [[ ! 1 -eq "${foundConfig}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for bookConfig in "${BOOK_CONFIGS[@]}"
    do
      read -r bookName recipeName uuid _ <<< "${bookConfig}"
      _say "${bookName}"
    done
    die "Could not find Book info for book named ${arg1}"
  fi
fi

for bookConfig in "${BOOK_CONFIGS[@]}"; do
  read -r bookName recipeName uuid hostName _ <<< "${bookConfig}"
  # Allow user to override the hostname
  hostName=${HOST:-${hostName}}

  rawFile="./data/${bookName}-raw.xhtml"

  tempEpubFile="~/temp.internal.epub"
  tempHtmlFile="~/temp.xhtml"

  rmTempEpubCmd="[ -e ${tempEpubFile} ] && rm ${tempEpubFile}"
  rmTempHtmlCmd="[ -e ${tempHtmlFile} ] && rm ${tempHtmlFile}"
  generateEpubCmd="/var/cnx/venvs/publishing/bin/cnx-archive-export_epub /etc/cnx/publishing/app.ini ${uuid} ${tempEpubFile}"
  generateHtmlCmd="/var/cnx/venvs/publishing/bin/cnx-epub-single_html --exercise_host exercises.openstax.org --mathmlcloud_url http://mathmlcloud.cnx.org:1337/equation/ ${tempEpubFile} > ${tempHtmlFile}"

  commands="${rmTempEpubCmd}; ${rmTempHtmlCmd}; ${generateEpubCmd} && ${generateHtmlCmd}"

  do_progress_quiet "Fetching ${bookName} from ${hostName} (~20 minutes if it has exercises)" \
    ssh ${USER}@${hostName} ${commands}

  do_progress_quiet "Copying HTML file from server to local machine" \
    scp ${USER}@${hostName}:${tempHtmlFile} ${rawFile}

  _say "${c_green}Fetch is Done.${c_none} File is available at ${rawFile}"

done
