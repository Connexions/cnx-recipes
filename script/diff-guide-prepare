#!/bin/bash


arg1=$1
bakedOrPreparedSuffix=$2

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

# Check command line args

if [[ -z "${arg1}" ]]
then
  >&2 echo 'ERROR: Argument Missing. You must specify the name of the ruleset as the 1st argument'
  >&2 echo ' or --all for all rulesets.'
  >&2 echo 'This script prepares the guide to compare against.'
  >&2 echo 'Typically this step is done in the master branch'
  >&2 echo 'and then in another branch diff-guide is called to see how the HTML changed.'
  >&2 echo ''
  >&2 echo "Valid rulesets are (from ./books.txt):"
  for rulesetName in "${RULESET_NAMES[@]}"
  do
    >&2 echo "${rulesetName}"
  done
  exit 1
fi

if [[ -z "${bakedOrPreparedSuffix}" ]]
then
  bakedOrPreparedSuffix="prepared"
fi


if [[ ! "${arg1}" == "--all" ]]
then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for rulesetName in "${RULESET_NAMES[@]}"
  do

    if [[ "${arg1}" = "${rulesetName}" ]]
    then
      RULESET_NAMES=("${rulesetName}")
      foundConfig=1
      break
    fi
  done

  if [[ ! 1 -eq "${foundConfig}" ]]
  then
    >&2 echo "ERROR: Could not find Book info for ruleset named ${arg1}"
    >&2 echo "Valid books are (from ./books.txt):"
    for rulesetName in "${RULESET_NAMES[@]}"
    do
      >&2 echo "${rulesetName}"
    done
    exit 1
  fi
fi

for rulesetName in "${RULESET_NAMES[@]}"
do
  ./script/generate-guide "${rulesetName}" "${bakedOrPreparedSuffix}" || exit 1
done
