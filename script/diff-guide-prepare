#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

arg1=$1
bakedOrPreparedSuffix=$2

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

# Check command line args

if [[ -z "${arg1}" ]]; then
  _say 'This script prepares the guide to compare against.'
  _say 'Typically this step is done in the master branch'
  _say 'and then in another branch diff-guide is called to see how the HTML changed.'
  _say ''
  _say "Valid recipes are (from ./books.txt):"
  for recipeName in "${RECIPE_NAMES[@]}"; do
    _say "${recipeName}"
  done
  die 'Argument Missing. You must specify the name of the recipe as the 1st argument or --all for all recipes.'
fi

if [[ -z "${bakedOrPreparedSuffix}" ]]; then
  bakedOrPreparedSuffix="prepared"
fi


if [[ ! "${arg1}" == "--all" ]]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for recipeName in "${RECIPE_NAMES[@]}"; do

    if [[ "${arg1}" = "${recipeName}" ]]; then
      RECIPE_NAMES=("${recipeName}")
      foundConfig=1
      break
    fi
  done

  if [[ ! 1 -eq "${foundConfig}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for recipeName in "${RECIPE_NAMES[@]}"; do
      _say "${recipeName}"
    done
    die "Could not find Book info for recipe named ${arg1}"
  fi
fi

for recipeName in "${RECIPE_NAMES[@]}"; do
  do_progress_quiet "Generating guide for ${recipeName}" \
    ./script/generate-guide "${recipeName}" "${bakedOrPreparedSuffix}"
done
