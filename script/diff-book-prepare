#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

arg1=$1
debugFlag=$2

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

# Check command line args

if [[ -z "${arg1}" ]]; then
  _say 'This script prepares the book to compare against.'
  _say 'Typically this step is done in the master branch'
  _say 'and then in another branch diff-book is called to see how the HTML changed.'
  _say ''
  _say "Valid books are (from ./books.txt):"
  for bookConfig in "${BOOK_CONFIGS[@]}"; do
    read -r bookName recipeName uuid _ <<< "${bookConfig}"
    _say "${bookName}"
  done
  die 'Argument Missing. You must specify the name of the book as the 1st argument or --all for all books.'
fi


if [[ ! "${arg1}" == "--all" ]]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for bookConfig in "${BOOK_CONFIGS[@]}"; do
    read -r bookConfigName recipeName uuid _ <<< "${bookConfig}"

    if [[ "${arg1}" = "${bookConfigName}" ]]; then
      BOOK_CONFIGS=("${bookConfigName} ${recipeName} ${uuid}")
      foundConfig=1
      break
    fi
  done

  if [[ ! 1 -eq "${foundConfig}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for bookConfig in "${BOOK_CONFIGS[@]}"; do
      read -r bookName recipeName uuid _ <<< "${bookConfig}"
      _say "${bookName}"
    done
    die "Could not find Book info for book named ${arg1}"
  fi
fi

for bookConfig in "${BOOK_CONFIGS[@]}"; do
  read -r bookName recipeName uuid _ <<< "${bookConfig}"
  rawFile="./data/${bookName}-raw.xhtml"

  bakedFile="./data/${bookName}-baked.xhtml"
  preparedFile="./data/${bookName}-prepared.xhtml"

  do_progress_quiet "Baking book" \
    ./script/bake-book ${bookName} --use-repeatable-ids

  mv ${bakedFile} ${preparedFile}
done
