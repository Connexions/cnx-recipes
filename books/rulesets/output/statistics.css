:pass(0) div.preface > [data-type="document-title"] {
  container: h1;
  content: content();
}
:pass(0) body {
  counter-reset: chapter;
}
:pass(0) div[data-type=chapter] {
  counter-increment: chapter;
}
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Chapter";
  class: "label";
  move-to: bChapterLabel;
}
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: counter(chapter);
  class: "number";
  move-to: bChapterLabel;
}
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "|";
  class: "divider";
  move-to: bChapterLabel;
}
:pass(0) div[data-type="chapter"] > [data-type="document-title"] {
  container: h1;
  content: pending(bChapterLabel) content();
}
:pass(0) body {
  counter-reset: appendix;
}
:pass(0) div.appendix {
  counter-increment: appendix;
}
:pass(0) div.appendix::before {
  container: span;
  content: "Appendix";
  class: "label";
  move-to: bAppendixLabel;
}
:pass(0) div.appendix::before {
  container: span;
  content: counter(appendix,upper-alpha);
  class: "number";
  move-to: bAppendixLabel;
}
:pass(0) div.appendix::before {
  container: span;
  content: ":";
  class: "divider";
  move-to: bAppendixLabel;
}
:pass(0) div.appendix > [data-type="document-title"] {
  container: h1;
  content: pending(bAppendixLabel) content();
}
:pass(0) div[data-type=chapter] {
  counter-reset: section;
}
:pass(0) div[data-type=chapter] > div[data-type=page]:not(.introduction) {
  counter-increment: section;
}
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction)::before {
  container: span;
  content: counter(chapter) "." counter(section);
  class: "number";
  move-to: bSectionLabel;
}
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction)::before {
  container: span;
  content: "|";
  class: "divider";
  move-to: bSectionLabel;
}
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"] {
  container: h2;
  content: pending(bSectionLabel) content();
}
:pass(0) div[data-type="chapter"] > div[data-type="page"].introduction > [data-type="document-title"] {
  container: h2;
}
:pass(0) div[data-type="page"] > [data-type="document-title"],
:pass(0) div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionTitleNode;
}
:pass(0) div[data-type="chapter"] section.glossary,
:pass(0) div[data-type="chapter"] div[data-type="glossary"] dl {
  move-to: glossary-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.glossary > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="glossary"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(glossary-TOCOMPOSITE);
  class: "eoc glossary-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.summary,
:pass(0) div[data-type="chapter"] div[data-type="summary"] dl {
  content: nodes(sectionTitleNode) content();
  move-to: summary-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.summary > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="summary"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(summary-TOCOMPOSITE);
  class: "eoc summary-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.formula-review,
:pass(0) div[data-type="chapter"] div[data-type="formula-review"] dl {
  content: nodes(sectionTitleNode) content();
  move-to: formula-review-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.formula-review > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="formula-review"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(formula-review-TOCOMPOSITE);
  class: "eoc formula-review-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.practice,
:pass(0) div[data-type="chapter"] div[data-type="practice"] dl {
  content: nodes(sectionTitleNode) content();
  move-to: practice-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.practice > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="practice"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(practice-TOCOMPOSITE);
  class: "eoc practice-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.bring-together-exercises,
:pass(0) div[data-type="chapter"] div[data-type="bring-together-exercises"] dl {
  move-to: bring-together-exercises-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.bring-together-exercises > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="bring-together-exercises"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(bring-together-exercises-TOCOMPOSITE);
  class: "eoc bring-together-exercises-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.free-response,
:pass(0) div[data-type="chapter"] div[data-type="free-response"] dl {
  content: nodes(sectionTitleNode) content();
  move-to: free-response-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.free-response > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="free-response"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(free-response-TOCOMPOSITE);
  class: "eoc free-response-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.bring-together-homework,
:pass(0) div[data-type="chapter"] div[data-type="bring-together-homework"] dl {
  move-to: bring-together-homework-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.bring-together-homework > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="bring-together-homework"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(bring-together-homework-TOCOMPOSITE);
  class: "eoc bring-together-homework-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.references,
:pass(0) div[data-type="chapter"] div[data-type="references"] dl {
  content: nodes(sectionTitleNode) content();
  move-to: references-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.references > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="references"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(references-TOCOMPOSITE);
  class: "eoc references-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type="chapter"] section.solutions,
:pass(0) div[data-type="chapter"] div[data-type="solutions"] dl {
  move-to: solutions-TOCOMPOSITE;
}
:pass(0) div[data-type="chapter"] section.solutions > h1[data-type="title"],
:pass(0) div[data-type="chapter"] div[data-type="solutions"] dl > h1[data-type="title"] {
  move-to: trash;
}
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: pending(solutions-TOCOMPOSITE);
  class: "eoc solutions-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}
:pass(0) div[data-type=chapter] {
  counter-reset: example;
}
:pass(0) div[data-type=chapter] .example {
  counter-increment: example;
}
:pass(0) .example::before {
  container: span;
  content: "Example";
  class: "label";
  move-to: bExampleLabel;
}
:pass(0) .example::before {
  container: span;
  content: counter(chapter) "." counter(example);
  class: "number";
  move-to: bExampleLabel;
}
:pass(0) .example > [data-type="title"] {
  move-to: trash;
}
:pass(0) .example > [data-type="title"]::before {
  container: span;
  content: content();
  class: "text";
  move-to: bExampleLabel;
}
:pass(0) .example::after {
  container: h3;
  content: pending(bExampleLabel);
  class: "example-title";
  move-to: bExampleHeader;
}
:pass(0) .example:deferred {
  content: pending(bExampleHeader) content();
}
:pass(0) .example [data-type="solution"]::before {
  container: span;
  content: "Solution";
  class: "label";
  move-to: bSolutionLabel;
}
:pass(0) .example [data-type="solution"]::before {
  container: span;
  content: counter(chapter) "." counter(example);
  class: "number";
  move-to: bSolutionLabel;
}
:pass(0) .example [data-type="solution"]::before {
  container: h4;
  class: "example-solution-title";
  content: pending(bSolutionLabel);
}

:pass(1) div[data-type=chapter] {
  counter-reset: exercise;
}
:pass(1) .eoc [data-type=exercise] {
  counter-increment: exercise;
}
:pass(1) .eoc [data-type="exercise"] [data-type="problem"]::before {
  container: span;
  content: counter(exercise);
  class: "number";
}
:pass(1) .eoc [data-type="exercise"] [data-type="solution"]::before {
  container: span;
  content: counter(exercise);
  class: "number";
}

:pass(2) div[data-type=chapter] {
  counter-reset: exercise;
}
:pass(2) .eoc [data-type=exercise] {
  counter-increment: exercise;
}
:pass(2) .eoc [data-type=problem] .number {
  attr-id: "problem-" counter(exercise);
  string-set: problem-ID "problem-" counter(exercise);
}
:pass(2) .eoc [data-type=solution] .number::outside {
  container: a;
  attr-href: "#" string(problem-ID);
}

:pass(3) [data-type="chapter"] .eoc.practice-container [data-type="solution"] {
  move-to: bSolutions;
}
:pass(3) [data-type="chapter"] .eoc.bring-together-exercises-container [data-type="solution"] {
  move-to: bSolutions;
}
:pass(3) [data-type="chapter"] .eoc.free-response-container [data-type="solution"] {
  move-to: bSolutions;
}
:pass(3) [data-type="chapter"] .eoc.bring-together-homework-container [data-type="solution"] {
  move-to: bSolutions;
}
:pass(3) [data-type="chapter"]::after {
  container: div;
  content: pending(bSolutions);
  class: "eoc solutions-container";
  data-type: composite-page;
  sort-by: dl > dt, nocase;
}

:pass(100) body::after {
  content: clear(trash);
}

/*# sourceMappingURL=statistics.css.map */
