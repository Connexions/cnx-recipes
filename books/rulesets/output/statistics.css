:pass(0) div.preface > [data-type="document-title"] {
  container: h1;
  content: content(); }
:pass(0) body {
  counter-reset: chapter; }
:pass(0) div[data-type="chapter"] {
  counter-increment: chapter; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Chapter";
  class: label;
  move-to: bChapterLabel; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: counter(chapter);
  class: number;
  move-to: bChapterLabel; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "|";
  class: divider;
  move-to: bChapterLabel; }
:pass(0) div[data-type="chapter"] > [data-type="document-title"] {
  container: h1;
  content: pending(bChapterLabel) content(); }
:pass(0) body {
  counter-reset: appendix; }
:pass(0) div.appendix {
  counter-increment: appendix; }
:pass(0) div.appendix::before {
  container: span;
  content: "Appendix";
  class: label;
  move-to: bAppendixLabel; }
:pass(0) div.appendix::before {
  container: span;
  content: counter(appendix,upper-alpha);
  class: number;
  move-to: bAppendixLabel; }
:pass(0) div.appendix::before {
  container: span;
  content: ":";
  class: divider;
  move-to: bAppendixLabel; }
:pass(0) div.appendix > [data-type="document-title"] {
  container: h1;
  content: pending(bAppendixLabel) content(); }
:pass(0) div[data-type="chapter"] {
  counter-reset: section; }
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction) {
  counter-increment: section; }
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction)::before {
  container: span;
  content: counter(chapter) "." counter(section);
  class: number;
  move-to: bSectionLabel; }
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction)::before {
  container: span;
  content: "|";
  class: divider;
  move-to: bSectionLabel; }
:pass(0) div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"] {
  container: h2;
  content: pending(bSectionLabel) content(); }
:pass(0) div[data-type="chapter"] > div[data-type="page"].introduction > [data-type="document-title"] {
  container: h2; }
:pass(0) div[data-type="chapter"] {
  counter-reset: example; }
:pass(0) div[data-type="chapter"] .example {
  counter-increment: example; }
:pass(0) .example::before {
  container: span;
  content: "Example";
  class: label;
  move-to: bExampleLabel; }
:pass(0) .example::before {
  container: span;
  content: "Table" counter(chapter) "." counter(example);
  class: number;
  move-to: bExampleLabel; }
:pass(0) .example > [data-type="title"] {
  move-to: trash; }
  :pass(0) .example > [data-type="title"]::before {
    container: span;
    content: content();
    class: text;
    move-to: bExampleLabel; }
:pass(0) .example::after {
  container: h3;
  content: pending(bExampleLabel);
  class: "example-title";
  move-to: bExampleHeader; }
:pass(0) .example:deferred {
  content: pending(bExampleHeader) content(); }
:pass(0) .example [data-type="solution"]::before {
  container: span;
  content: "Solution";
  class: label;
  move-to: bSolutionLabel-TITLECONTAINER; }
:pass(0) .example [data-type="solution"]::before {
  container: span;
  content: counter(chapter) "." counter(example);
  class: number;
  move-to: bSolutionLabel-TITLECONTAINER; }
:pass(0) .example [data-type="solution"]::before {
  container: h4;
  data-type: "example-solution-title";
  content: pending(bSolutionLabel-TITLECONTAINER);
  move-to: bSolutionLabel; }
:pass(0) div[data-type="page"] > [data-type="document-title"],
:pass(0) div[data-type="composite-page"] > [data-type="document-title"] {
  string-set: sectionHeaderString content(); }
:pass(0) body > [data-type="metadata"] {
  node-set: bookMetaNode; }
:pass(0) div[data-type="chapter"] div[data-type="glossary"] dl {
  move-to: glossary-TOCOMPOSITE; }
  :pass(0) div[data-type="chapter"] div[data-type="glossary"] dl > h1[data-type="title"] {
    move-to: trash; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Key Terms";
  class: text;
  move-to: glossary-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(glossary-composite-title-TITLECONTAINER);
  move-to: glossary-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(glossary-composite-title) pending(glossary-TOCOMPOSITE);
  class: "eoc glossary-container";
  data-type: "composite-page";
  sort-by: dl > dt, nocase; }
:pass(0) div[data-type="chapter"] section.summary {
  move-to: summary-GETSECTION; }
  :pass(0) div[data-type="chapter"] section.summary > h1[data-type="title"] {
    move-to: trash; }
  :pass(0) div[data-type="chapter"] section.summary::before {
    container: span;
    content: string(sectionHeaderString);
    class: text;
    move-to: summary-SECTIONHEADER-TITLECONTAINER; }
  :pass(0) div[data-type="chapter"] section.summary::before {
    container: h3;
    data-type: "section-area-title";
    content: pending(summary-SECTIONHEADER-TITLECONTAINER);
    move-to: summary-SECTIONHEADER; }
  :pass(0) div[data-type="chapter"] section.summary::after {
    content: pending(summary-SECTIONHEADER) pending(summary-GETSECTION);
    class: "section-area";
    move-to: summary-TOCOMPOSITE; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Chapter Review";
  class: text;
  move-to: summary-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(summary-composite-title-TITLECONTAINER);
  move-to: summary-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(summary-composite-title) pending(summary-TOCOMPOSITE);
  class: "eoc summary-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.formula-review {
  move-to: formula-review-GETSECTION; }
  :pass(0) div[data-type="chapter"] section.formula-review > h1[data-type="title"] {
    move-to: trash; }
  :pass(0) div[data-type="chapter"] section.formula-review::before {
    container: span;
    content: string(sectionHeaderString);
    class: text;
    move-to: formula-review-SECTIONHEADER-TITLECONTAINER; }
  :pass(0) div[data-type="chapter"] section.formula-review::before {
    container: h3;
    data-type: "section-area-title";
    content: pending(formula-review-SECTIONHEADER-TITLECONTAINER);
    move-to: formula-review-SECTIONHEADER; }
  :pass(0) div[data-type="chapter"] section.formula-review::after {
    content: pending(formula-review-SECTIONHEADER) pending(formula-review-GETSECTION);
    class: "section-area";
    move-to: formula-review-TOCOMPOSITE; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Formula Review";
  class: text;
  move-to: formula-review-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(formula-review-composite-title-TITLECONTAINER);
  move-to: formula-review-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(formula-review-composite-title) pending(formula-review-TOCOMPOSITE);
  class: "eoc formula-review-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.practice {
  move-to: practice-GETSECTION; }
  :pass(0) div[data-type="chapter"] section.practice > h1[data-type="title"] {
    move-to: trash; }
  :pass(0) div[data-type="chapter"] section.practice::before {
    container: span;
    content: string(sectionHeaderString);
    class: text;
    move-to: practice-SECTIONHEADER-TITLECONTAINER; }
  :pass(0) div[data-type="chapter"] section.practice::before {
    container: h3;
    data-type: "section-area-title";
    content: pending(practice-SECTIONHEADER-TITLECONTAINER);
    move-to: practice-SECTIONHEADER; }
  :pass(0) div[data-type="chapter"] section.practice::after {
    content: pending(practice-SECTIONHEADER) pending(practice-GETSECTION);
    class: "section-area";
    move-to: practice-TOCOMPOSITE; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Practice";
  class: text;
  move-to: practice-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(practice-composite-title-TITLECONTAINER);
  move-to: practice-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(practice-composite-title) pending(practice-TOCOMPOSITE);
  class: "eoc practice-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.bring-together-exercises {
  move-to: bring-together-exercises-TOCOMPOSITE; }
  :pass(0) div[data-type="chapter"] section.bring-together-exercises > h1[data-type="title"] {
    move-to: trash; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Bringing It Together: Exercises";
  class: text;
  move-to: bring-together-exercises-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(bring-together-exercises-composite-title-TITLECONTAINER);
  move-to: bring-together-exercises-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(bring-together-exercises-composite-title) pending(bring-together-exercises-TOCOMPOSITE);
  class: "eoc bring-together-exercises-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.free-response {
  move-to: free-response-GETSECTION; }
  :pass(0) div[data-type="chapter"] section.free-response > h1[data-type="title"] {
    move-to: trash; }
  :pass(0) div[data-type="chapter"] section.free-response::before {
    container: span;
    content: string(sectionHeaderString);
    class: text;
    move-to: free-response-SECTIONHEADER-TITLECONTAINER; }
  :pass(0) div[data-type="chapter"] section.free-response::before {
    container: h3;
    data-type: "section-area-title";
    content: pending(free-response-SECTIONHEADER-TITLECONTAINER);
    move-to: free-response-SECTIONHEADER; }
  :pass(0) div[data-type="chapter"] section.free-response::after {
    content: pending(free-response-SECTIONHEADER) pending(free-response-GETSECTION);
    class: "section-area";
    move-to: free-response-TOCOMPOSITE; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Homework";
  class: text;
  move-to: free-response-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(free-response-composite-title-TITLECONTAINER);
  move-to: free-response-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(free-response-composite-title) pending(free-response-TOCOMPOSITE);
  class: "eoc free-response-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.bring-together-homework {
  move-to: bring-together-homework-TOCOMPOSITE; }
  :pass(0) div[data-type="chapter"] section.bring-together-homework > h1[data-type="title"] {
    move-to: trash; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Bringing It Together: Homework";
  class: text;
  move-to: bring-together-homework-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(bring-together-homework-composite-title-TITLECONTAINER);
  move-to: bring-together-homework-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(bring-together-homework-composite-title) pending(bring-together-homework-TOCOMPOSITE);
  class: "eoc bring-together-homework-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"] section.references {
  move-to: references-GETSECTION; }
  :pass(0) div[data-type="chapter"] section.references > h1[data-type="title"] {
    move-to: trash; }
  :pass(0) div[data-type="chapter"] section.references::before {
    container: span;
    content: string(sectionHeaderString);
    class: text;
    move-to: references-SECTIONHEADER-TITLECONTAINER; }
  :pass(0) div[data-type="chapter"] section.references::before {
    container: h3;
    data-type: "section-area-title";
    content: pending(references-SECTIONHEADER-TITLECONTAINER);
    move-to: references-SECTIONHEADER; }
  :pass(0) div[data-type="chapter"] section.references::after {
    content: pending(references-SECTIONHEADER) pending(references-GETSECTION);
    class: "section-area";
    move-to: references-TOCOMPOSITE; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "References";
  class: text;
  move-to: references-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(references-composite-title-TITLECONTAINER);
  move-to: references-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(references-composite-title) pending(references-TOCOMPOSITE);
  class: "eoc references-container";
  data-type: "composite-page"; }
:pass(0) div[data-type="chapter"]::before {
  container: span;
  content: "Solutions";
  class: text;
  move-to: solutions-composite-title-TITLECONTAINER; }
:pass(0) div[data-type="chapter"]::before {
  container: h2;
  data-type: "document-title";
  content: pending(solutions-composite-title-TITLECONTAINER);
  move-to: solutions-composite-title; }
:pass(0) div[data-type="chapter"]::after {
  container: div;
  content: nodes(bookMetaNode) pending(solutions-composite-title);
  class: "eoc solutions-container";
  data-type: "composite-page"; }
:pass(0) body {
  counter-reset: term; }
:pass(0) div[data-type="page"] span[data-type="term"], :pass(0) div[data-type="composite-page"] span[data-type="term"] {
  counter-increment: term; }
:pass(0) div[data-type="page"],
:pass(0) div[data-type="composite-page"] {
  string-set: pageID attr(id); }
:pass(0) div[data-type="page"] span[data-type="term"],
:pass(0) div[data-type="composite-page"] span[data-type="term"] {
  attr-id: "auto_" string(pageID) "_term" counter(term); }
  :pass(0) div[data-type="page"] span[data-type="term"]:match("^[a-zA-Z]"),
  :pass(0) div[data-type="composite-page"] span[data-type="term"]:match("^[a-zA-Z]") {
    attr-group-by: first-letter(content()); }
  :pass(0) div[data-type="page"] span[data-type="term"]:match("^[^a-zA-Z]"),
  :pass(0) div[data-type="composite-page"] span[data-type="term"]:match("^[^a-zA-Z]") {
    attr-group-by: ""; }

:pass(1) [data-type="composite-page"].glossary-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Key Terms"; }
:pass(1) [data-type="composite-page"].summary-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Chapter Review"; }
:pass(1) [data-type="composite-page"].formula-review-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Formula Review"; }
:pass(1) [data-type="composite-page"].practice-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Practice"; }
:pass(1) [data-type="composite-page"].bring-together-exercises-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Bringing It Together: Exercises"; }
:pass(1) [data-type="composite-page"].free-response-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Homework"; }
:pass(1) [data-type="composite-page"].bring-together-homework-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Bringing It Together: Homework"; }
:pass(1) [data-type="composite-page"].references-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "References"; }
:pass(1) [data-type="composite-page"].solutions-container > [data-type="metadata"] > [data-type="document-title"] {
  content: "Solutions"; }
:pass(1) div[data-type="page"] > [data-type="document-title"],
:pass(1) div[data-type="composite-page"] > [data-type="document-title"] {
  string-set: sectionHeaderString content(); }
:pass(1) div[data-type="chapter"] {
  string-set: chapterHeaderString content(); }
:pass(1) body div[data-type="page"] span[data-type="term"]::after, :pass(1) body div[data-type="composite-page"] span[data-type="term"]::after {
  content: content();
  attr-group-by: attr(group-by);
  container: span;
  class: term;
  move-to: index-term; }
:pass(1) body div[data-type="page"] span[data-type="term"]::after, :pass(1) body div[data-type="composite-page"] span[data-type="term"]::after {
  content: string(sectionHeaderString);
  container: span;
  class: term-section;
  move-to: index-section; }
:pass(1) body div[data-type="page"] span[data-type="term"]::after, :pass(1) body div[data-type="composite-page"] span[data-type="term"]::after {
  content: pending(index-term) pending(index-section);
  class: index-item;
  move-to: index-TOCOMPOSITE; }
:pass(1) body::before {
  container: span;
  content: "Index";
  class: text;
  move-to: index-composite-title-TITLECONTAINER; }
:pass(1) body::before {
  container: h1;
  data-type: "document-title";
  content: pending(index-composite-title-TITLECONTAINER);
  move-to: index-composite-title; }
:pass(1) body::after {
  container: div;
  content: nodes(bookMetaNode) pending(index-composite-title) pending(index-TOCOMPOSITE);
  class: "eob index-container";
  data-type: "composite-page";
  group-by: span, "span::attr(group-by)", nocase; }
:pass(1) div[data-type="chapter"] {
  counter-reset: exercise; }
:pass(1) .eoc [data-type="exercise"] {
  counter-increment: exercise; }
:pass(1) .eoc [data-type="exercise"] [data-type="problem"]::before {
  container: span;
  content: counter(exercise);
  class: number; }
:pass(1) .eoc [data-type="exercise"] [data-type="solution"]::before {
  container: span;
  content: counter(exercise);
  class: number; }

:pass(2) div[data-type="chapter"] {
  counter-reset: exercise; }
:pass(2) .eoc [data-type="exercise"] {
  counter-increment: exercise; }
:pass(2) .eoc [data-type=problem] .number {
  attr-id: "problem-" counter(exercise);
  string-set: problem-ID "problem-" counter(exercise); }
:pass(2) .eoc [data-type=solution] .number::outside {
  container: a;
  attr-href: "#" string(problem-ID); }

:pass(3) [data-type="chapter"] .eoc.practice-container [data-type="solution"] {
  move-to: bSolutions; }
:pass(3) [data-type="chapter"] .eoc.bring-together-exercises-container [data-type="solution"] {
  move-to: bSolutions; }
:pass(3) [data-type="chapter"] .eoc.free-response-container [data-type="solution"] {
  move-to: bSolutions; }
:pass(3) [data-type="chapter"] .eoc.bring-together-homework-container [data-type="solution"] {
  move-to: bSolutions; }
:pass(3) .eoc.solutions-container {
  content: content() pending(bSolutions); }

:pass(4) div[data-type="chapter"], :pass(4) div.appendix {
  counter-reset: table; }
:pass(4) div[data-type="chapter"], :pass(4) div[class="appendix"] :not(table) > table {
  counter-increment: table; }
:pass(4) body :not(table) > table::before {
  container: span;
  content: counter(chapter) "." counter(table);
  class: number;
  move-to: bNumber; }
:pass(4) body :not(table) > table caption [data-type="title"] {
  container: span;
  class: "caption-title";
  move-to: bCaptionTitle; }
:pass(4) body :not(table) > table::after {
  container: div;
  class: "captionContainer";
  content: pending(bNumber) pending(bCaptionTitle) pending(bImageCaption);
  move-to: bCaptionContainer; }
:pass(4) body :not(table) > table::outside {
  class: table;
  container: div;
  content: content() pending(bCaptionContainer); }

:pass(100) body::after {
  content: clear(trash); }

/*# sourceMappingURL=statistics.css.map */
