@import "./utils";


//TODO: call arguments explicity? Is this possible? Ex:
// @mixin count_countChapter($name) {
//   @include utils_count(
//     $name: $name,
//     $selector: 'div[data-type="chapter"]',
//     $resetSelector: 'body'
//   );
// }

/// A basic mixin for counting chapters using css counters
/// @arg {Text} $name - Name of the css counter that will control chapter numbering
@mixin count_countChapters($name) {
  @include utils_count(
    $name,
    'div[data-type="chapter"]',
    'body'
  );
}

/// A basic mixin for counting appendices using css counters
/// @arg {Text} $name - Name of the css counter that will control appendix numbering
@mixin count_countAppendices($name) {
  @include utils_count(
    $name,
    'div.appendix',
    'body'
  );
}

/// A basic mixin for counting sections within a chapter using css counters.
/// Does not count the introduction module.
/// @arg {Text} $name - Name of the css counter that will control section numbering
@mixin count_countSections($name) {
  @include utils_count(
    $name,
    'div[data-type="chapter"] > div[data-type="page"]:not(.introduction)',
    '[data-type="chapter"], .appendix'
  );
}

/// A basic mixin for counting end of chapter(EOC) exercises using css counters.
/// Resets at the chapter level.
/// @arg {Text} $name - Name of the css counter that will control exercise numbering
@mixin count_countEOCExercises($name) {
  @include utils_count(
    $name,
    '.os-eoc [data-type="exercise"]',
    '[data-type="chapter"], .appendix'
  );
}

/// A basic mixin for counting all exercises within `.os-eoc` using css counters.
/// Resets at the body.
/// @arg {Text} $name - Name of the css counter that will control all exercise numbering
@mixin count_countExercises($name) {
  @include utils_count(
    $name,
    '.os-eoc [data-type="exercise"]',
    'body'
  );
}

/// A basic mixin for counting examples within a chapter using css counters
/// @arg {Text} $name - Name of the css counter that will control example numbering
@mixin count_countExamples($name) {
  @include utils_count(
    $name,
    'div[data-type="chapter"] [data-type="example"]',
    '[data-type="chapter"], .appendix'
  );
}

/// A basic mixin for counting `span[data-type="term"]` using css counters
/// @arg {Text} $name - Name of the css counter that will control term numbering
@mixin count_countTerms($name) {
  @include utils_count(
    $name,
    'div[data-type="page"] span[data-type="term"], div[data-type="composite-page"] span[data-type="term"]',
    'body'
  );
}

/// A basic mixin for counting tables using css counters
/// @arg {Text} $name - Name of the css counter that will control table numbering
@mixin count_countTables($name) {
  @include utils_count(
    $name,
    ':not(table) > table',
    '[data-type="chapter"], .appendix'
  );
}

/// A basic mixin for counting figures using css counters
/// @arg {Text} $name - Name of the css counter that will control figure numbering
@mixin count_countFigures($name) {
  @include utils_count(
    $name,
    ':not(figure) > figure',
    '[data-type="chapter"], .appendix'
  );
}

/// A basic mixin for counting notes using css counters
/// @arg {Text} $name - Name of the css counter that will control note numbering
/// @arg {String} $type - A string of the selector of the note type you want to count
@mixin count_countNote($name, $type) {
  @include utils_count(
    $name,
    '[data-type="note"].#{$type}',
    '[data-type="chapter"], .appendix'
  );
}
