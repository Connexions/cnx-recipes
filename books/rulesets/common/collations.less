//eoc

div[data-type='chapter'] {
  h1[data-type="document-title"] {
    node-set: chapterTitle;
  }
  div[data-type="page"], div[data-type="composite-page"]  {
    > div[data-type="document-title"] {
      pass: default, @pass-50-index;
      string-set: section-title content();
      node-set: sectionTitle;
    }
    span[data-type="term"] {
    &:match(^[a-zA-Z]) {
        attr-group-by: first-letter(content());
    }
    &:match(^[^a-zA-Z]) {
      attr-group-by: "";
    }
     &::after {
        pass: @pass-50-index;
        content: content();
        attr-group-by: attr(group-by);
        container: span;
        class: glossary-term;
        move-to: index-term;
      }
      &::after {
        pass: @pass-50-index;
        content: string(section-title);
        container: a;
        attr-href: "#" attr(id);
        move-to: link;
      }
      &::after {
        pass: @pass-50-index;
        content: pending(index-term) pending(link);
        class: index-item;
        move-to: eob-index;
      }
    }
  }
  // div[data-type="solution"] {
  //   move-to: chapterSolutions;
  // }
  // &::after {
  //   class: solutions;
  //   content: nodes(chapterTitle) pending(chapterSolutions);
  //   move-to: eob-solutions;
  //  }
}
body {
 > [data-type="metadata"] {
    node-set: bookMetadata;
  }
  div.eoc, div.eob  {
   [data-type="cnx-archive-uri"] {
      pass: @pass-77-meta-uri;
      move-to: trash;
    }
  }
  &::before {
    container: h1;
    content: "Answer Key";
    data-type: document-title;
    move-to: answerTitle;
  }
  .eoc {
    &.glossary {
   .metadata("Glossary");
    }
    &.summary {
      .metadata("Chapter Review");
    }
  }
.eob {
  &.index {
    .metadata("Index");
    &::before {
      pass: @pass-52-index-title;
      container: span;
      content: "Index";
      move-to: titleSpan;
    }
    &::before {
      pass: @pass-52-index-title;
      container: div;
      data-type: document-title;
      content: pending(titleSpan);
    }
  }
}

  &::after {
    pass: @pass-50-index;
    class: "eob index" ;
    data-type: composite-page;
    content: pending(eob-index);
    group-by: span, "span::attr(group-by)", nocase;
  }
  .eob.index > div.group-by:first-of-type > span.group-label {
    pass: @pass-51-index-symbol;
    content: "Symbol";
  }
//nodes(bookMetadata) pending(indexTitle)
  // &::after {
  //   content: pending(eob-all);
  //   class: end-of-book;
  //   data-type: composite-page;
  //   container: div;
  // }
    &::after {
      pass:100;
      content: clear(trash);
  }
}

//mixins
//.summary(summary, ~'.', h1, "Chapter Review");
//include within div[data-type='chapter']
.summary(@selectorName, @pre, @titleContainer,  @titleContent) {
  section@{pre}@{selectorName}{
    move-to: summary;
    > h1[data-type="title"] {
      move-to: trash;
    }
    &::after {
      class: summary;
      content: nodes(sectionTitle) pending(summary);
      move-to: eoc-summaries;
    }
  }
  &::before {
    container: span;
    content: @titleContent;
    move-to: titleSpan;
  }
  &::before {
    container: @titleContainer;
    class: summary-title;
    data-type: document-title;
    content: pending(titleSpan);
    move-to: summaryTitle;
  }
  &::after {
    class: "eoc summary";
    data-type: composite-page;
    content: pending(summaryTitle) pending(eoc-summaries);

  }
}

//glossary
//include within div[data-type='chapter']
.glossary(@title) {
  div[data-type="glossary"] {
    move-to: trash;
    dl.definition {
      move-to: eoc-key-terms;
     }
  }
  &::before {
    container: span;
    content: @title;
    move-to: titleSpan;
  }
  &::before {
    container: div;
    class: sectionGlossary;
    data-type: document-title;
    content: pending(titleSpan);
    move-to: sectionGlossary;
  }
  &::after {
    class: "eoc glossary";
    data-type: composite-page;
    content: pending(sectionGlossary) pending(eoc-key-terms);
    sort-by:  dl> dt;
   }
}

//metadata
.metadata(@title) {
  pass: @pass-75-metadata;
  content: nodes(bookMetadata) content();
  [data-type="metadata"] {
    [data-type="document-title"] {
      pass: @pass-76-meta-title;
      content: @title;
    }
  }
}

.doc-title (@title) {
  &::before {
    container: span;
    pass: @pass-30-title;
    content: @title;
    move-to: titleSpan;
  }
  &::before {
    pass: @pass-30-title;
    container: div;
    data-type: document-title;
    content: pending(titleSpan);
  }
}

//Wrap all non-generated title content within a span before numbering
:not([data-type="metadata"]) > [data-type="document-title"] {
  content: none;
  &::after {
    content: content();
    container: span;
  }
}

//todo
// .feature(@name, @title, @nameTitle(@title,  @suffix) ) {
//     section.references {
//     move-to: @name;
//     > [data-type="title"] {
//       move-to: trash;
//     }
//    }
//    &::before {
//     container: h1;
//     data-type: document-title;
//     content: @title;
//     move-to: @nameTitle(@title, "Title");
//    }
//    &::after {
//     container: div;
//     class: "eoc @name";
//     data-type: composite-page;
//     content: pending(@nameTitle) pending(@name);
//   }
// }
