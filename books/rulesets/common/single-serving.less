/* This file includes parts that are used only once per book */
body{
  counter-reset: term-count;
}

//Open a new tab for simulations
a[href*="archive.cnx.org/specials/"] {
  attr-target: "_blank";
}

div[data-type='chapter'] {
  > [data-type="document-title"] {
    node-set: chapterTitle;
    .number:pass(25) {
      node-set: nodeChapterNumber;
      //Pass 25: econ answer key
    }
    .toc-label:pass(25) {
      //Unused node-set?
      node-set: nodeChapterLabel;
    }
    .text:pass(35) {
      //pass 35: econ references
      node-set: nodeChapterText;
    }
  }
  div[data-type="page"], div[data-type="composite-page"] {
    //build links from index to content
    string-set: page-id attr(id);
    > h2[data-type="document-title"] {
      string-set: section-title content();
      node-set: sectionTitle;
    }
    span[data-type="term"] {
      counter-increment: term-count;
      attr-id: "auto_" string(page-id) "_term" counter(term-count);
      &:match(^[a-zA-Z]) {
        attr-group-by: first-letter(content());
      }
      &:match(^[^a-zA-Z]) {
        attr-group-by: "";
      }
    }
  }
  div[data-type="page"]:pass(50), div[data-type="composite-page"]:pass(50) {
    //build links from index to content
    string-set: page-id attr(id);
    > h2[data-type="document-title"] {
      string-set: section-title content();
      node-set: sectionTitle;
    }
    span[data-type="term"] {
      &::after {
        content: content();
        attr-group-by: attr(group-by);
        container: span;
        class: glossary-term;
        move-to: index-term;
      }
      &::after {
        content: string(section-title);
        container: a;
        attr-href: "#" attr(id);
        move-to: link;
      }
      &::after {
        content: pending(index-term) pending(link);
        class: index-item;
        move-to: eob-index;
      }
    }
  }
}

body {
  //copy the book's metadata
  >[data-type="metadata"] {
    node-set: bookMetadata;
  }
  //suppress the uri
  div.eoc:pass(77), div.eob:pass(77)  {
    [data-type="cnx-archive-uri"] {
      move-to: trash;
    }
  }

  //create the eob titles
  &::before {
    container: div;
    content: "Answer Key";
    data-type: document-title;
    move-to: answerTitle;
  }

  //create the index after container has been created
  .eob {
    &.index {
      .metadata("Index");
      &:pass(52)::before {
        container: span;
        content: "Index";
        move-to: titleSpan;
      }
      &:pass(52)::before {
        container: h1;
        data-type: document-title;
        content: pending(titleSpan);
      }
    }
  }
  &:pass(50)::after {
    class: "eob index" ;
    data-type: composite-page;
    content: pending(eob-index);
    group-by: span, "span::attr(group-by)", nocase;
  }
  .eob.index > div.group-by:first-of-type > span.group-label:pass(51) {
    content: "Symbols";
  }

  //Add IDs to composite pages; this method will change
  div[data-type="composite-page"]:pass(55) {
    attr-id: uuid() "@1";
  }
  //Add IDs to each chapter title; this method will change
  > div[data-type='chapter'] {
    > h1[data-type='document-title']:pass(55) {
      counter-increment: chapTitleNum;
      attr-id: "chapTitle" counter(chapTitleNum);
    }
  }

  //Wrap all non-generated title content within a span before numbering
  :not([data-type="metadata"]) > [data-type="document-title"] {
    content: none;
    &::after {
      content: content();
      container: span;
      class: "text";
    }
  }

  //clear trash
  &:pass(100)::after {
    content: clear(trash);
  }
}

//todo
// .feature(@name, @title, @nameTitle(@title,  @suffix) ) {
//     section.references {
//     move-to: @name;
//     > [data-type="title"] {
//       move-to: trash;
//     }
//    }
//    &::before {
//     container: h1;
//     data-type: document-title;
//     content: @title;
//     move-to: @nameTitle(@title, "Title");
//    }
//    &::after {
//     container: div;
//     class: "eoc @name";
//     data-type: composite-page;
//     content: pending(@nameTitle) pending(@name);
//   }
// }
