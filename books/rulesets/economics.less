
// <cnx-pi data-type="cnx.eoc">class="." title="Chapter Review"</cnx-pi>
// <cnx-pi data-type="cnx.eoc">class="self-check-questions" title="Self-Check Questions"</cnx-pi>
// <cnx-pi data-type="cnx.eoc">class="review-questions" title="Review Questions"</cnx-pi>
// <cnx-pi data-type="cnx.eoc">class="critical-thinking" title="Critical Thinking Questions"</cnx-pi>
// <cnx-pi data-type="cnx.eoc">class="problems" title="Problems"</cnx-pi>
// <cnx-pi data-type="cnx.eoc">class="references" title="References"</cnx-pi>
//glossary

@import 'common/var-mixins';
@import 'common/numbering';
@import 'common/single-serving';
@import 'common/toc';

//numbering
// div[data-type='chapter'] {
//   .self-check-questions, .review-questions, .critical-thinking, .problems, .references {
//     //.x-numb ();
//   }
// }


//eoc
div[data-type='chapter'] {

  .glossary('Key Terms');
  .summary(summary, ~'.', h2, "Key Concepts and Summary");

  section.self-check-questions {
    .composite-origin (self-check-questions);
    div[data-type="solution"] {
      .solutions-origin (self-check-solutions);
    }
  }
  &::after {
    .composite-destination(self-check-questions);
  }

  section.review-questions {
    .composite-origin (review-questions);
  }
  &::after {
    .composite-destination(review-questions);
  }

  section.critical-thinking {
    .composite-origin (critical-thinking);
    div[data-type="solution"] {
      .solutions-origin (critical-thinking-solutions);
    }
  }
  &::after {
    .composite-destination(critical-thinking);
  }

  section.problems {
    .composite-origin (problems);
    div[data-type="solution"] {
      .solutions-origin (problems-solutions);
    }
  }
  &::after {
    .composite-destination(problems);
  }

  section.references {
    pass: 35;
    .composite-origin (references);
  }


// chapters

  //Answer Key
  &::after {
    container: h1;
    class: "chapter-area-title";
    content: "Chapter " nodes(nodeChapterNumber);
    move-to: chapterAreaTitle;
    pass: @pass-25-solutions;
  }
  &::after {
    container: div;
    class: "self-check-solutions";
    content: pending(chapterAreaTitle) pending(self-check-solutions);
    pass: @pass-25-solutions;
    move-to: chapterArea;
  }
  &::after {
    class: "chapter-area";
    content: pending(chapterArea);
    move-to: eob-all;
    pass: @pass-25-solutions;
  }

  //References
  &::after {
    container: h1;
    class: "chapter-area-text";
    content: nodes(nodeChapterText);
    move-to: chapterAreaText;
    pass: 35;
  }
  &::after {
    container: div;
    class: "references";
    content: pending(references);
    pass: 35;
    move-to: refArea;
  }
  &::after {
    class: "chapter-area";
    content: pending(chapterAreaText) pending(refArea);
    move-to: eob-references;
    pass: 35;
  }

  //feature titles
  .clearup {
    .doc-title("Clear It Up");
  }
  .linkup {
    .doc-title("Link It Up");
  }
  .bringhome {
    .doc-title("Bring It Home");
  }
  .workout {
    .doc-title("Work It Out");
  }
  .eoc {
    &.self-check-questions-container {
      .metadata("Self-Check Questions");
      .doc-title("Self-Check Questions");
    }
    &.review-questions-container {
      .metadata("Review Questions");
      .doc-title("Review Questions");
    }
    &.critical-thinking-container {
      .metadata("Critical Thinking Questions");
      .doc-title("Critical Thinking Questions");
    }
    &.problems-container {
      .metadata("Problems");
      .doc-title("Problems");
    }
    //TODO: Refactor metadata into summary, glossary mixins??
    &.glossary {
      .metadata("Key Terms");
    }
     &.summary {
      .metadata("Key Concepts and Summary");
    }
  }
}
body {
  //TODO: Be able to use .composite origin/destination for this
  &::after {
    class: "eob answer-key";
    data-type: "composite-page";
    content: pending(eob-all);
    pass: 35;
  }
  &::after {
    class: "eob references";
    data-type: "composite-page";
    content: pending(eob-references);
    pass: 36;
  }
  .eob {
    &.references {
      .metadata("References");
      //.doc-title("Answer Key");
      //TODO: Refactor, having to not use doc-title mixin in order to change the pass
      &::before {
        container: span;
        class: "text";
        pass: 37;
        content: "References";
        move-to: titleSpan;
      }
      &::before {
        pass: 37;
        container: h1;
        data-type: document-title;
        content: pending(titleSpan);
      }
    }
    &.answer-key {
      .metadata("Answer Key");
      //.doc-title("Answer Key");
      //TODO: Refactor, having to not use doc-title mixin in order to change the pass
      &::before {
        container: span;
        class: "text";
        pass: 36;
        content: "Answer Key";
        move-to: titleSpan;
      }
      &::before {
        pass: 36;
        container: h1;
        data-type: document-title;
        content: pending(titleSpan);
      }
    }
  }
}

