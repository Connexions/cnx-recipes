@mixin clearTrash() {
  body {
    &::after {
      content: clear(trash);
    }
  }
}

@mixin title($content, $bucket, $container: null, $containerClass: null, $containerDestination: null) {
  @each $itemContent, $itemClass in $content {
    &::before {
      container: span;
      content: $itemContent;
      class: "title-#{$itemClass}";
      move-to: $bucket;
    }
  }
  @if ($container != null and $containerType != null) {
    &::before {
      container: $container;
      class: $containerClass;
      content: pending($bucket);
      @if ($destination != null) {
        move-to: $containerDestination;
      }
    }
  }
}

@mixin count($name, $selector, $resetSelector) {
  //Improvement: Resetting isn't dry, recreates selector if more than one counter resets on one element
  #{$resetSelector} {
    counter-reset: $name;
  }
  #{$selector} {
    counter-increment: $name;
  }
}

@mixin countChapters($name) {
  @include count(chapter, "div[data-type="chapter"]", "body")
}
@mixin countAppendices($name) {
  @include count(appendix, "div.appendix", "body")
}
@mixin countSections($name) {
  @include count(section, "div[data-type="chapter"] > div[data-type="page"]:not(.introduction)", "div[data-type="chapter"]");
}

@mixin titlePreface() {
  div.preface {
    > [data-type="document-title"] {
      container: h1;
      content: content();
    }
  }
}

@mixin numberChapters($chapterCounter) {
  div[data-type="chapter"] {
    $chapterTitleContent: (
      ("Chapter", "label"),
      (counter($chapterCounter), "number"),
      ("|", "divider")
    );
    @include title($chapterTitleContent, bChapterLabel);
    > [data-type="document-title"] {
      container: h1;
      content: pending(bChapterLabel) content();
    }
  }
}

@mixin numberAppendices($appendixCounter) {
  div.appendix {
    $appendixTitleContent: (
      ("Appendix", "label"),
      (counter($appendixCounter, upper-alpha), "number"),
      (":", "divider")
      );
    @include title($appendixTitleContent, bAppendixLabel);
    > [data-type="document-title"] {
      container: h1;
      content: pending(bAppendixLabel) content();
    }
  }
}

@mixin numberSections($chapterCounter, $sectionCounter) {
  div[data-type="chapter"] > div[data-type="page"] {
    &:not(.introduction) {
      $sectionTitleContent: (
        (counter($chapterCounter)"."counter($sectionCounter), "number"),
        ("|", "divider")
      );
      @include title($sectionTitleContent, bSectionLabel);
    }
    > [data-type="document-title"] {
      container: h2;
      content: pending(bSectionLabel) content();
    }
  }
}
