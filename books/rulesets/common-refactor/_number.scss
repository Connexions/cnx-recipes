@import "./utils";

@mixin numberChapters($chapterTitleContent) {
  div[data-type="chapter"] {
    @include title($chapterTitleContent, bChapterLabel);
    //use the title mixin for this? and that way content() can be wrapped
    > [data-type="document-title"] {
      container: h1;
      content: pending(bChapterLabel) content();
    }
  }
}

@mixin numberAppendices($appendixTitleContent) {
  div.appendix {
    @include title($appendixTitleContent, bAppendixLabel);
    //use the title mixin for this? and that way content() can be wrapped
    > [data-type="document-title"] {
      container: h1;
      content: pending(bAppendixLabel) content();
    }
  }
}

@mixin numberSections($sectionTitleContent) {
  div[data-type="chapter"] > div[data-type="page"] {
    &:not(.introduction) {
      @include title($sectionTitleContent, bSectionLabel);
      //use the title mixin for this? and that way content() can be wrapped
      > [data-type="document-title"] {
        container: h2;
        content: pending(bSectionLabel) content();
      }
    }
    &.introduction {
      > [data-type="document-title"] {
        container: h2;
      }
    }
  }
}

//EOC composite pages must be created before this runs
@mixin numberEOCExercises($exerciseTitleContent, $solutionTitleContent) {
  .eoc [data-type="exercise"] {
    [data-type="problem"] {
      @include title($exerciseTitleContent);
    }
    [data-type="solution"] {
      @include title($exerciseTitleContent);
    }
  }
}

@mixin numberExamples($exampleTitleContent, $solutionTitleContent) {
  .example {
    @include title($exampleTitleContent, bExampleLabel);
    > [data-type="title"] {
      //BAD: there should not be titling content creation outside the book level. This should get moved
      $exampleTitle: (
        text: content()
      );
      @include title($exampleTitle, bExampleLabel);
      move-to: trash;
    }
    &::after {
      container: h3;
      content: pending(bExampleLabel);
      class: "example-title";
      move-to: bExampleHeader;
    }
    &:deferred {
      content: pending(bExampleHeader) content();
    }
    [data-type="solution"] {
      @include title($solutionTitleContent, bSolutionLabel, h4, "example-solution-title");
    }
  }
}

@mixin numberCaptions ($captionNumber, $type, $rawContainer, $hasCaption, $hasTitle) {
    body {
      :not(#{$type}) > #{$type} {
        @include title($captionNumber, bNumber);
        @if  ($hasCaption) {
          #{$rawContainer} {
            container: span;
            class: "caption";
            move-to: bImageCaption;
          }
       }
      @if  ($hasTitle)  {
        #{$rawContainer} [data-type="title"] {
          container: span;
          class: "caption-title";
          move-to: bCaptionTitle;
        }
       }
      &::after {
        container: div;
        class: "captionContainer";
        content: pending(bNumber) pending(bCaptionTitle) pending(bImageCaption);
        move-to: bCaptionContainer;
        }
      &::outside {
        class: #{$type};
        container: div;
        content: content() pending(bCaptionContainer);
      }
    }
  }
}
