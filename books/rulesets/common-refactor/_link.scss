<<<<<<< HEAD
<<<<<<< HEAD
@import "./utils";

//EOC composite pages must be created before this runs
@mixin link_linkToProblemsFromSolutionsEOC($toElement, $fromElement, $problemCounter) {
<<<<<<< HEAD
  @include utils_linkToFromForward(
=======
=======
@import "./utils";

>>>>>>> Rewrite composition mixins to handle pages with mapped properties
//EOC composite pages must be created before this runs
@mixin linkToProblemsFromSolutionsEOC($toElement, $fromElement, $problemCounter) {
  @include linkToFrom(
>>>>>>> Separate mixins into their respective files, do some work on solutions
=======
  @include utils_linkToFrom(
>>>>>>> Separate book files into base file and config file, namespace mixins
    ".eoc [data-type="problem"] .#{$toElement}",
    ".eoc [data-type="solution"] .#{$fromElement}",
    problem,
    $problemCounter
  );
}
<<<<<<< HEAD


@mixin link_setTargetLabels($targetLabels) {
  @each $target in $targetLabels {
    $selector: map-get($target, selector);
    $label: map-get($target, label);
    #{$selector} {
      string-set: target-label $label;
    }
  }
}

@mixin link_setLinkLabels() {
  a.autogenerated-content {
    content: target-string(attr(href), target-label);
  }
}
=======
>>>>>>> Separate mixins into their respective files, do some work on solutions
