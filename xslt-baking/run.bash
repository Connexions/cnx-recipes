#!/bin/bash

COVERAGE_CLASS=com.jenitennison.xslt.tests.XSLTCoverageTraceListener
COVERAGE_IGNORE="./some-unknown-dir/"
coverage_reporter=./coverage-reporter/coverage-report.xsl

die() {
    echo
    echo "*** $@" >&2
    exit 1
}


xslt() {
  # Replace -T:${COVERAGE_CLASS} with the following to get performance numbers:
  # (both cannot run at the same time)
  # "-TP:${xsl_file}.profile.xhtml" \

  coverage_xml=$1
  xsl_file=$2
  java \
      -Dxspec.coverage.ignore="${COVERAGE_IGNORE}" \
      -Dxspec.coverage.xml="${coverage_xml}" \
      -Dxspec.xspecfile="${xsl_file}" \
      -cp "${SAXON_HOME}"/saxon9he.jar:"${XSPEC_HOME}"/java/ \
      net.sf.saxon.Transform \
      "-T:$COVERAGE_CLASS" \
      "-xsl:${xsl_file}" ${@:3}
}

coverage_html() {
    coverage_xml=$1
    xslt_file=$2
    html_report=$3

    java \
      -cp "${SAXON_HOME}"/saxon9he.jar:"${XSPEC_HOME}"/java/ \
      net.sf.saxon.Transform \
      -config:${XSPEC_HOME}/src/reporter/coverage-report-config.xml \
      -s:${coverage_xml} \
      -o:${html_report} \
      -xsl:${coverage_reporter} \
      inline-css=true
}

xslt_coverage() {
  temp_coverage="./coverage-temp.xml"
  xslt_file=$1
  coverage_report="${xslt_file}.coverage.xhtml"

  [[ -f "${temp_coverage}" ]] && rm "${temp_coverage}"

  echo "Transforming using ${xslt_file}"
  xslt ${temp_coverage} $@
  echo "Generating coverage report for ${xslt_file}"
  coverage_html ${temp_coverage} ${xslt_file} ${coverage_report}
}


# Check that SAXON_HOME and XSPEC_HOME are set
[[ -f ${SAXON_HOME}/saxon9he.jar ]] || die "Set SAXON_HOME to be a directory which contains saxon9he.jar"
[[ -f ${XSPEC_HOME}/java/com/jenitennison/xslt/tests/XSLTCoverageTraceListener.class ]] || die "Clone https://github.com/xspec/xspec and set XSPEC_HOME to be that directory"



[[ -f ./chemistry.config.json.xml ]] || node ./chemistry.config.js

[[ -f ./collection.assembled.xml ]] || xmllint --pretty 1 ../data/chemistry-2e/collection.assembled.xhtml > ./collection.assembled.xml

xslt_coverage ident.xsl -s:./chemistry.config.json.xml -o:./chemistry.config.xml || die "something"
xslt_coverage compile-xslt.xsl -s:./chemistry.config.xml -o:./autogenerated.xsl || die "something"
xslt_coverage transform.xsl -s:./collection.assembled.xml -o:./output-transform.xml || die "something"
xslt_coverage autogenerated.xsl -s:./collection.assembled.xml -o:./output-autogenerated.xml || die "something"


echo
echo "Done. Check output-autogenerated.xml to see the result."
echo "Check *.xsl.coverage.xhtml to see an HTML code coverage report for each XSLT file"