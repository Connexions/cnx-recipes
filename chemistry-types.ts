
//
// This file is AUTOGENERATED.
//

enum LENGTH {
    PERCENT = '%',
    REM = 'rem',
    PX = 'px',
}

enum SLICE_ENUM {
    SLICE,
    AUTO,
    DEFAULT
}


class Component {
    private readonly properties: any
    constructor(defaults: any, config: any) {
        this.properties = {...defaults, ...config}
    }
}

class Shape {
    private readonly groups: any
    private readonly components: Component[]
    constructor(defaults: any, config: any, components: Component[]) {
        this.groups = {...defaults, ...config}
        this.components = [...components]
    }
}



    // START: carnival___Link
    
            class carnival___Link_RegularLink extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___Link extends Shape {
        constructor(config: {
            
        }, c0: carnival___Link_RegularLink) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: carnival___Link
    

    // START: carnival___Figure
    
            class carnival___Figure_FigureContainer extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [0.83333,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_CaptionWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */, 'margin-left'?: any /* auto */, 'margin-right'?: any /* auto */
                }) {
                    const defaults = {'display': "table", 'margin-left': "auto", 'margin-right': "auto"}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_FigureLabel extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_FigureNum extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* inline-block */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'display': "inline-block", 'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_FigureTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_Caption extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_FigureCaptionDivider extends Component {
                constructor(config: {
                    'margin'?: number
                }) {
                    const defaults = {'margin': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___Figure_PicCaption extends Component {
                constructor(config: {
                    'display'?: any /* table */, 'margin-left'?: any /* auto */, 'margin-right'?: any /* auto */
                }) {
                    const defaults = {'display': "table", 'margin-left': "auto", 'margin-right': "auto"}
                    super(defaults, config)
                }
            }
            
    class carnival___Figure extends Shape {
        constructor(config: {
            
        }, c0: carnival___Figure_FigureContainer, c1: carnival___Figure_CaptionWrapper, c2: carnival___Figure_FigureLabel, c3: carnival___Figure_FigureNum, c4: carnival___Figure_FigureTitle, c5: carnival___Figure_Caption, c6: carnival___Figure_FigureCaptionDivider, c7: carnival___Figure_PicCaption) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7])
        }
    }
    // END: carnival___Figure
    

    // START: common___BookRoot
    
            class common___BookRoot_BookRoot extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'prince-image-resolution': any /* ENUM__ValueSet:::REQUIRED */, 'prince-background-image-resolution': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class common___BookRoot extends Shape {
        constructor(config: {
            
        }, c0: common___BookRoot_BookRoot) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: common___BookRoot
    

    // START: common___Hidden
    
            class common___Hidden_Hidden extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            
    class common___Hidden extends Shape {
        constructor(config: {
            
        }, c0: common___Hidden_Hidden) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: common___Hidden
    

    // START: carnival___BoxedNoteShape
    
            class carnival___BoxedNoteShape_Container extends Component {
                constructor(config: {
                    'border'?: [SLICE_ENUM, [number, LENGTH]], 'border-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'box-decoration-break'?: SLICE_ENUM, 'padding-left'?: [number, LENGTH], 'padding-right'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'padding-top'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'position'?: any /* relative */
                }) {
                    const defaults = {'border': ["solid",[0.2,"rem"]], 'border-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'box-decoration-break': "slice", 'padding-left': [8,"px"], 'padding-right': [8,"px"], 'padding-bottom': [0.7,"rem"], 'padding-top': [0.7,"rem"], 'margin-bottom': [1.4,"rem"], 'position': "relative"}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxedNoteShape_Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-top'?: number, 'margin-bottom'?: [number, LENGTH], 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'margin-top': 0, 'margin-bottom': [0.7,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxedNoteShape_BodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxedNoteShape_Subtitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* IBM Plex Sans, sans-serif */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-family': "IBM Plex Sans, sans-serif"}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxedNoteShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___BoxedNoteShape extends Shape {
        constructor(config: {
            'group-border-style'?: SLICE_ENUM, 'group-border-width'?: [number, LENGTH], 'group-box-decoration-break'?: SLICE_ENUM, 'group-border-color': any /* ENUM__ValueSet:::REQUIRED */, 'group-title-font': any /* ENUM__ValueSet:::REQUIRED */, 'group-title-color': any /* ENUM__ValueSet:::REQUIRED */
        }, c0: carnival___BoxedNoteShape_Container, c1: carnival___BoxedNoteShape_Title, c2: carnival___BoxedNoteShape_BodyWrapper, c3: carnival___BoxedNoteShape_Subtitle, c4: carnival___BoxedNoteShape_List__MarginLeftBottom) {
            const defaults = {'group-border-style': "solid", 'group-border-width': [0.2,"rem"], 'group-box-decoration-break': "slice"}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___BoxedNoteShape
    

    // START: carnival___BoxCondensedEquationShape
    
            class carnival___BoxCondensedEquationShape_CondensedContainer extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'padding-top': [0.7,"rem"], 'padding-bottom': [0.7,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxCondensedEquationShape_CondensedEquationContainer extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'display'?: any /* flex */, 'flex-direction'?: any /* row */, 'align-items'?: any /* center */, 'justify-content'?: any /* center */, 'margin-bottom'?: number
                }) {
                    const defaults = {'position': "relative", 'display': "flex", 'flex-direction': "row", 'align-items': "center", 'justify-content': "center", 'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxCondensedEquationShape_BoxedCondensedNoteEquationNumber extends Component {
                constructor(config: {
                    'position'?: any /* absolute */, 'right'?: number, 'top'?: [number, LENGTH], 'transform'?: any /* translate(0, -50%) */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'position': "absolute", 'right': 0, 'top': [50,"%"], 'transform': "translate(0, -50%)", 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold", 'margin-right': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___BoxCondensedEquationShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___BoxCondensedEquationShape_CondensedContainer, c1: carnival___BoxCondensedEquationShape_CondensedEquationContainer, c2: carnival___BoxCondensedEquationShape_BoxedCondensedNoteEquationNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2])
        }
    }
    // END: carnival___BoxCondensedEquationShape
    

    // START: carnival___BoxCondensedNoteShape
    
            class carnival___BoxCondensedNoteShape_CondensedContainer extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'padding-top': [0.7,"rem"], 'padding-bottom': [0.7,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxCondensedNoteShape_Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform'?: any /* uppercase */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'text-transform': "uppercase", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxCondensedNoteShape_FirstParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___BoxCondensedNoteShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___BoxCondensedNoteShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___BoxCondensedNoteShape_CondensedContainer, c1: carnival___BoxCondensedNoteShape_Title, c2: carnival___BoxCondensedNoteShape_FirstParagraph, c3: carnival___BoxCondensedNoteShape_List__MarginLeftBottom) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___BoxCondensedNoteShape
    

    // START: carnival___IconNoteShape
    
            class carnival___IconNoteShape_Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: number, 'letter-spacing'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'border-bottom-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM, 'display'?: any /* flex */, 'flex-direction'?: any /* row */, 'align-items'?: any /* flex-end */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': 900, 'letter-spacing': [0.05,"rem"], 'text-transform': "uppercase", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'border-bottom-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'border-bottom-width': [0.2,"rem"], 'border-bottom-style': "solid", 'display': "flex", 'flex-direction': "row", 'align-items': "flex-end", 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_TitleIcon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'padding-right'?: [number, LENGTH], 'position'?: any /* relative */, 'bottom'?: [number, LENGTH], 'content'?: any /* '' */
                }) {
                    const defaults = {'background-size': "contain", 'height': [2.8,"rem"], 'width': [2.8,"rem"], 'display': "inline-block", 'padding-right': [0.4,"rem"], 'position': "relative", 'bottom': [-0.5,"rem"], 'content': "''"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_TitleNumber extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'word-wrap'?: any /* normal */, 'margin-bottom'?: [number, LENGTH], 'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'margin-bottom': [0.2,"rem"], 'margin-left': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_TitleLabel extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* normal */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'margin-bottom': [0.2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'border-bottom-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM, 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"], 'border-bottom-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'border-bottom-width': [0.2,"rem"], 'border-bottom-style': "solid", 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_BodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_Subtitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* IBM Plex Sans, sans-serif */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-family': "IBM Plex Sans, sans-serif"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_DivSubtitle extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_FirstParagraphTitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* bold */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_ParagraphSubtitle extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* bold */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_Equation extends Component {
                constructor(config: {
                    'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'line-height'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconNoteShape_AnswerTitle extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___IconNoteShape extends Shape {
        constructor(config: {
            'group-border-color': any /* ENUM__ValueSet:::REQUIRED */
        }, c0: carnival___IconNoteShape_Title, c1: carnival___IconNoteShape_TitleIcon, c2: carnival___IconNoteShape_TitleNumber, c3: carnival___IconNoteShape_TitleLabel, c4: carnival___IconNoteShape_TitleText, c5: carnival___IconNoteShape_Container, c6: carnival___IconNoteShape_List__MarginLeftBottom, c7: carnival___IconNoteShape_BodyWrapper, c8: carnival___IconNoteShape_Subtitle, c9: carnival___IconNoteShape_DivSubtitle, c10: carnival___IconNoteShape_FirstParagraphTitle, c11: carnival___IconNoteShape_ParagraphSubtitle, c12: carnival___IconNoteShape_Equation, c13: carnival___IconNoteShape_AnswerTitle) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13])
        }
    }
    // END: carnival___IconNoteShape
    

    // START: carnival___IconCondensedShape
    
            class carnival___IconCondensedShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_Body extends Component {
                constructor(config: {
                    'border-bottom-style'?: SLICE_ENUM, 'border-bottom-width'?: [number, LENGTH], 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'border-bottom-style': "solid", 'border-bottom-width': [0.2,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_Paragraph extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_Title extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'font-weight'?: number, 'letter-spacing'?: [number, LENGTH], 'display'?: any /* flex */, 'flex-direction'?: any /* row */, 'align-items'?: any /* flex-end */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"], 'font-weight': 900, 'letter-spacing': [0.05,"rem"], 'display': "flex", 'flex-direction': "row", 'align-items': "flex-end", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* normal */, 'text-transform'?: any /* uppercase */
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'text-transform': "uppercase"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_Icon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'position'?: any /* relative */, 'content'?: any /* '' */, 'padding-right'?: [number, LENGTH]
                }) {
                    const defaults = {'background-size': "contain", 'height': [1.4,"rem"], 'width': [1.4,"rem"], 'display': "inline-block", 'position': "relative", 'content': "''", 'padding-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedShape_NoteNumber extends Component {
                constructor(config: {
                    'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___IconCondensedShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___IconCondensedShape_Container, c1: carnival___IconCondensedShape_Body, c2: carnival___IconCondensedShape_Paragraph, c3: carnival___IconCondensedShape_List__MarginLeftBottom, c4: carnival___IconCondensedShape_Title, c5: carnival___IconCondensedShape_TitleText, c6: carnival___IconCondensedShape_Icon, c7: carnival___IconCondensedShape_NoteNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7])
        }
    }
    // END: carnival___IconCondensedShape
    

    // START: carnival___IconCondensedExerciseShape
    
            class carnival___IconCondensedExerciseShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_ProblemWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_ProblemContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_Paragraph extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_Solution extends Component {
                constructor(config: {
                    'border-bottom-style'?: SLICE_ENUM, 'border-bottom-width'?: [number, LENGTH], 'box-decoration-break'?: SLICE_ENUM, 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'border-bottom-style': "solid", 'border-bottom-width': [0.2,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_SolutionTitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_SolutionContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_Title extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'font-weight'?: number, 'letter-spacing'?: [number, LENGTH], 'display'?: any /* flex */, 'flex-direction'?: any /* row */, 'align-items'?: any /* flex-end */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"], 'font-weight': 900, 'letter-spacing': [0.05,"rem"], 'display': "flex", 'flex-direction': "row", 'align-items': "flex-end", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* normal */, 'text-transform'?: any /* uppercase */
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'text-transform': "uppercase"}
                    super(defaults, config)
                }
            }
            

            class carnival___IconCondensedExerciseShape_Icon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'position'?: any /* relative */, 'content'?: any /* '' */, 'padding-right'?: [number, LENGTH]
                }) {
                    const defaults = {'background-size': "contain", 'height': [1.4,"rem"], 'width': [1.4,"rem"], 'display': "inline-block", 'position': "relative", 'content': "''", 'padding-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___IconCondensedExerciseShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___IconCondensedExerciseShape_Container, c1: carnival___IconCondensedExerciseShape_ProblemWrapper, c2: carnival___IconCondensedExerciseShape_ProblemContainerWrapper, c3: carnival___IconCondensedExerciseShape_Paragraph, c4: carnival___IconCondensedExerciseShape_List__MarginLeftBottom, c5: carnival___IconCondensedExerciseShape_Solution, c6: carnival___IconCondensedExerciseShape_SolutionTitle, c7: carnival___IconCondensedExerciseShape_SolutionContainerWrapper, c8: carnival___IconCondensedExerciseShape_Title, c9: carnival___IconCondensedExerciseShape_TitleText, c10: carnival___IconCondensedExerciseShape_Icon) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10])
        }
    }
    // END: carnival___IconCondensedExerciseShape
    

    // START: carnival___LogoNoteBoxedShape
    
            class carnival___LogoNoteBoxedShape_Container extends Component {
                constructor(config: {
                    'border'?: [SLICE_ENUM, [number, LENGTH]], 'border-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'box-decoration-break'?: SLICE_ENUM, 'padding-left'?: [number, LENGTH], 'padding-right'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'padding-top'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'position'?: any /* relative */
                }) {
                    const defaults = {'border': ["solid",[0.2,"rem"]], 'border-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'box-decoration-break': "slice", 'padding-left': [8,"px"], 'padding-right': [8,"px"], 'padding-bottom': [0.7,"rem"], 'padding-top': [0.7,"rem"], 'margin-bottom': [1.4,"rem"], 'position': "relative"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteBoxedShape_Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-top'?: number, 'margin-bottom'?: [number, LENGTH], 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'margin-top': 0, 'margin-bottom': [0.7,"rem"], 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteBoxedShape_BodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteBoxedShape_Subtitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* IBM Plex Sans, sans-serif */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-family': "IBM Plex Sans, sans-serif"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteBoxedShape_LogoIcon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'position'?: any /* relative */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'content'?: any /* ' ' */
                }) {
                    const defaults = {'background-size': "contain", 'height': [1.4,"rem"], 'width': [100,"%"], 'display': "inline-block", 'position': "relative", 'content': "' '"}
                    super(defaults, config)
                }
            }
            
    class carnival___LogoNoteBoxedShape extends Shape {
        constructor(config: {
            'group-border-style'?: SLICE_ENUM, 'group-border-width'?: [number, LENGTH], 'group-box-decoration-break'?: SLICE_ENUM, 'group-border-color': any /* ENUM__ValueSet:::REQUIRED */, 'group-title-font': any /* ENUM__ValueSet:::REQUIRED */, 'group-title-color': any /* ENUM__ValueSet:::REQUIRED */
        }, c0: carnival___LogoNoteBoxedShape_Container, c1: carnival___LogoNoteBoxedShape_Title, c2: carnival___LogoNoteBoxedShape_BodyWrapper, c3: carnival___LogoNoteBoxedShape_Subtitle, c4: carnival___LogoNoteBoxedShape_LogoIcon) {
            const defaults = {'group-border-style': "solid", 'group-border-width': [0.2,"rem"], 'group-box-decoration-break': "slice"}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___LogoNoteBoxedShape
    

    // START: carnival___LogoNoteIconShape
    
            class carnival___LogoNoteIconShape_Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: number, 'letter-spacing'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'border-bottom-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM, 'display'?: any /* flex */, 'flex-direction'?: any /* row */, 'align-items'?: any /* flex-end */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': 900, 'letter-spacing': [0.05,"rem"], 'text-transform': "uppercase", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'border-bottom-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'border-bottom-width': [0.2,"rem"], 'border-bottom-style': "solid", 'display': "flex", 'flex-direction': "row", 'align-items': "flex-end", 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_TitleIcon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'padding-right'?: [number, LENGTH], 'position'?: any /* relative */, 'bottom'?: [number, LENGTH], 'content'?: any /* '' */
                }) {
                    const defaults = {'background-size': "contain", 'height': [2.8,"rem"], 'width': [2.8,"rem"], 'display': "inline-block", 'padding-right': [0.4,"rem"], 'position': "relative", 'bottom': [-0.5,"rem"], 'content': "''"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_TitleNumber extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'word-wrap'?: any /* normal */, 'margin-bottom'?: [number, LENGTH], 'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'margin-bottom': [0.2,"rem"], 'margin-left': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_TitleLabel extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* normal */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "inline-block", 'word-wrap': "normal", 'margin-bottom': [0.2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'word-wrap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_FirstParagraphTitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* bold */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'border-bottom-color'?: [any /* ENUM__ValueSet:::GROUPED */, any /* group-border-color */], 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM, 'box-decoration-break'?: SLICE_ENUM
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"], 'border-bottom-color': ["ENUM__ValueSet:::GROUPED","group-border-color"], 'border-bottom-width': [0.2,"rem"], 'border-bottom-style': "solid", 'box-decoration-break': "slice"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_BodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_Subtitle extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family'?: any /* IBM Plex Sans, sans-serif */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-family': "IBM Plex Sans, sans-serif"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_LogoIcon extends Component {
                constructor(config: {
                    'background': any /* ENUM__ValueSet:::REQUIRED */, 'background-size'?: any /* contain */, 'height'?: [number, LENGTH], 'width'?: [number, LENGTH], 'display'?: any /* inline-block */, 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'position'?: any /* relative */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'content'?: any /* ' ' */
                }) {
                    const defaults = {'background-size': "contain", 'height': [1.4,"rem"], 'width': [100,"%"], 'display': "inline-block", 'position': "relative", 'content': "' '"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_ParagraphSubtitle extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* bold */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_Equation extends Component {
                constructor(config: {
                    'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'line-height'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___LogoNoteIconShape_AnswerTitle extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___LogoNoteIconShape extends Shape {
        constructor(config: {
            'group-border-color': any /* ENUM__ValueSet:::REQUIRED */
        }, c0: carnival___LogoNoteIconShape_Title, c1: carnival___LogoNoteIconShape_TitleIcon, c2: carnival___LogoNoteIconShape_TitleNumber, c3: carnival___LogoNoteIconShape_TitleLabel, c4: carnival___LogoNoteIconShape_TitleText, c5: carnival___LogoNoteIconShape_FirstParagraphTitle, c6: carnival___LogoNoteIconShape_Container, c7: carnival___LogoNoteIconShape_BodyWrapper, c8: carnival___LogoNoteIconShape_Subtitle, c9: carnival___LogoNoteIconShape_LogoIcon, c10: carnival___LogoNoteIconShape_ParagraphSubtitle, c11: carnival___LogoNoteIconShape_Equation, c12: carnival___LogoNoteIconShape_AnswerTitle) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12])
        }
    }
    // END: carnival___LogoNoteIconShape
    

    // START: carnival___EocOneColumnClustered
    
            class carnival___EocOneColumnClustered_OneColumnContainer extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* v-grid(2) */
                }) {
                    const defaults = {'margin-bottom': "v-grid(2)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocOneColumnClustered_CompositeHeader extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* v-grid(1) */
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'margin-bottom': "v-grid(1)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocOneColumnClustered_CompoundCompositeHeader extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* v-grid(1) */
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'margin-bottom': "v-grid(1)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocOneColumnClustered_SectionLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocOneColumnClustered_FigureUnderSectionLink extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH], 'padding-top'?: any /* half-v-grid(1) */
                }) {
                    const defaults = {'max-width': [100,"%"], 'padding-top': "half-v-grid(1)"}
                    super(defaults, config)
                }
            }
            
    class carnival___EocOneColumnClustered extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocOneColumnClustered_OneColumnContainer, c1: carnival___EocOneColumnClustered_CompositeHeader, c2: carnival___EocOneColumnClustered_CompoundCompositeHeader, c3: carnival___EocOneColumnClustered_SectionLink, c4: carnival___EocOneColumnClustered_FigureUnderSectionLink) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___EocOneColumnClustered
    

    // START: carnival___EocOneColumnCompositeChapter
    
            class carnival___EocOneColumnCompositeChapter_OneColumnContainer extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* v-grid(2) */
                }) {
                    const defaults = {'margin-bottom': "v-grid(2)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocOneColumnCompositeChapter_CompositeHeader extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* v-grid(1) */
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'margin-bottom': "v-grid(1)"}
                    super(defaults, config)
                }
            }
            
    class carnival___EocOneColumnCompositeChapter extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocOneColumnCompositeChapter_OneColumnContainer, c1: carnival___EocOneColumnCompositeChapter_CompositeHeader) {
            const defaults = {}
            super(defaults, config, [c0, c1])
        }
    }
    // END: carnival___EocOneColumnCompositeChapter
    

    // START: carnival___EocTwoColumnsUnclustered
    
            class carnival___EocTwoColumnsUnclustered_TwoColumnsContainer extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* v-grid(2) */, 'column-count'?: number, 'column-gap'?: [number, LENGTH], 'column-width'?: any /* auto */
                }) {
                    const defaults = {'margin-bottom': "v-grid(2)", 'column-count': 2, 'column-gap': [2.4,"rem"], 'column-width': "auto"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsUnclustered_CompositeHeader extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* v-grid(1) */
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'margin-bottom': "v-grid(1)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsUnclustered_Table extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH], 'table-layout'?: any /* fixed */
                }) {
                    const defaults = {'max-width': [100,"%"], 'table-layout': "fixed"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsUnclustered_TableData extends Component {
                constructor(config: {
                    'text-align'?: any /* center */, 'padding-top'?: any /* table-v-grid(1) */, 'padding-bottom'?: any /* table-v-grid(1) */, 'padding-right'?: any /* h-grid(0.5) */, 'padding-left'?: any /* h-grid(0.5) */
                }) {
                    const defaults = {'text-align': "center", 'padding-top': "table-v-grid(1)", 'padding-bottom': "table-v-grid(1)", 'padding-right': "h-grid(0.5)", 'padding-left': "h-grid(0.5)"}
                    super(defaults, config)
                }
            }
            
    class carnival___EocTwoColumnsUnclustered extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocTwoColumnsUnclustered_TwoColumnsContainer, c1: carnival___EocTwoColumnsUnclustered_CompositeHeader, c2: carnival___EocTwoColumnsUnclustered_Table, c3: carnival___EocTwoColumnsUnclustered_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___EocTwoColumnsUnclustered
    

    // START: carnival___EocTwoColumnsClustered
    
            class carnival___EocTwoColumnsClustered_TwoColumnsContainer extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* v-grid(2) */, 'column-count'?: number, 'column-gap'?: [number, LENGTH], 'column-width'?: any /* auto */
                }) {
                    const defaults = {'margin-bottom': "v-grid(2)", 'column-count': 2, 'column-gap': [2.4,"rem"], 'column-width': "auto"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsClustered_CompositeHeader extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* v-grid(1) */
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'margin-bottom': "v-grid(1)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsClustered_SectionLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsClustered_FigureUnderSectionLink extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH], 'padding-top'?: any /* half-v-grid(1) */
                }) {
                    const defaults = {'max-width': [100,"%"], 'padding-top': "half-v-grid(1)"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsClustered_Table extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH], 'table-layout'?: any /* fixed */
                }) {
                    const defaults = {'max-width': [100,"%"], 'table-layout': "fixed"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocTwoColumnsClustered_TableData extends Component {
                constructor(config: {
                    'text-align'?: any /* center */, 'padding-top'?: any /* table-v-grid(1) */, 'padding-bottom'?: any /* table-v-grid(1) */, 'padding-right'?: any /* h-grid(0.5) */, 'padding-left'?: any /* h-grid(0.5) */
                }) {
                    const defaults = {'text-align': "center", 'padding-top': "table-v-grid(1)", 'padding-bottom': "table-v-grid(1)", 'padding-right': "h-grid(0.5)", 'padding-left': "h-grid(0.5)"}
                    super(defaults, config)
                }
            }
            
    class carnival___EocTwoColumnsClustered extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocTwoColumnsClustered_TwoColumnsContainer, c1: carnival___EocTwoColumnsClustered_CompositeHeader, c2: carnival___EocTwoColumnsClustered_SectionLink, c3: carnival___EocTwoColumnsClustered_FigureUnderSectionLink, c4: carnival___EocTwoColumnsClustered_Table, c5: carnival___EocTwoColumnsClustered_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5])
        }
    }
    // END: carnival___EocTwoColumnsClustered
    

    // START: carnival___LearningObjectiveAbstractShape
    
            class carnival___LearningObjectiveAbstractShape_AbstractTitle extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* italic */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-style': "italic"}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveAbstractShape_List extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'padding-left'?: number, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* normal */
                }) {
                    const defaults = {'margin-left': [16,"px"], 'padding-left': 0, 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-style': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveAbstractShape_ListItem extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveAbstractShape_ListDot extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___LearningObjectiveAbstractShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___LearningObjectiveAbstractShape_AbstractTitle, c1: carnival___LearningObjectiveAbstractShape_List, c2: carnival___LearningObjectiveAbstractShape_ListItem, c3: carnival___LearningObjectiveAbstractShape_ListDot) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___LearningObjectiveAbstractShape
    

    // START: carnival___LearningObjectiveShape
    
            class carnival___LearningObjectiveShape_Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveShape_List extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'padding-left'?: number, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* normal */
                }) {
                    const defaults = {'margin-left': [16,"px"], 'padding-left': 0, 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-style': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveShape_ListItem extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveShape_ListDot extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___LearningObjectiveShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___LearningObjectiveShape_Title, c1: carnival___LearningObjectiveShape_List, c2: carnival___LearningObjectiveShape_ListItem, c3: carnival___LearningObjectiveShape_ListDot) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___LearningObjectiveShape
    

    // START: carnival___LearningObjectiveParagraphShape
    
            class carnival___LearningObjectiveParagraphShape_LearningObjectiveParagraph extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* italic */, 'margin-bottom'?: number
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-style': "italic", 'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveParagraphShape_List extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'padding-left'?: number, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* normal */
                }) {
                    const defaults = {'margin-left': [16,"px"], 'padding-left': 0, 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-style': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveParagraphShape_ListItem extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveParagraphShape_ListDot extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___LearningObjectiveParagraphShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___LearningObjectiveParagraphShape_LearningObjectiveParagraph, c1: carnival___LearningObjectiveParagraphShape_List, c2: carnival___LearningObjectiveParagraphShape_ListItem, c3: carnival___LearningObjectiveParagraphShape_ListDot) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___LearningObjectiveParagraphShape
    

    // START: carnival___LearningObjectiveNoteShape
    
            class carnival___LearningObjectiveNoteShape_Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveNoteShape_NoteBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveNoteShape_LearningObjectiveParagraph extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* italic */, 'margin-bottom'?: number
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-style': "italic", 'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveNoteShape_List extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'padding-left'?: number, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* normal */
                }) {
                    const defaults = {'margin-left': [16,"px"], 'padding-left': 0, 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-style': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveNoteShape_ListItem extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___LearningObjectiveNoteShape_ListDot extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___LearningObjectiveNoteShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___LearningObjectiveNoteShape_Title, c1: carnival___LearningObjectiveNoteShape_NoteBodyWrapper, c2: carnival___LearningObjectiveNoteShape_LearningObjectiveParagraph, c3: carnival___LearningObjectiveNoteShape_List, c4: carnival___LearningObjectiveNoteShape_ListItem, c5: carnival___LearningObjectiveNoteShape_ListDot) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5])
        }
    }
    // END: carnival___LearningObjectiveNoteShape
    

    // START: carnival___AppendixShape
    
            class carnival___AppendixShape_H1Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform': any /* ENUM__ValueSet:::REQUIRED */, 'column-span'?: any /* all */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'column-span': "all", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'padding-bottom': [0.7,"rem"], 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_TitleDivider extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_TitleText extends Component {
                constructor(config: {
                    'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* normal */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_TitleNumber extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'padding-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM, 'font-weight'?: any /* bold */, 'text-transform'?: any /* uppercase */
                }) {
                    const defaults = {'display': "block", 'border-bottom-width': [0.1,"rem"], 'border-bottom-style': "solid", 'font-weight': "bold", 'text-transform': "uppercase"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_AppendixGlossary extends Component {
                constructor(config: {
                    'column-count'?: number, 'column-width'?: any /* auto */, 'font-size'?: [number, LENGTH]
                }) {
                    const defaults = {'column-count': 3, 'column-width': "auto", 'font-size': [0.83333,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_GlossarySection extends Component {
                constructor(config: {
                    'list-style-type'?: any /* none */
                }) {
                    const defaults = {'list-style-type': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___AppendixShape_List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___AppendixShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___AppendixShape_H1Title, c1: carnival___AppendixShape_TitleDivider, c2: carnival___AppendixShape_TitleText, c3: carnival___AppendixShape_TitleNumber, c4: carnival___AppendixShape_H2Title, c5: carnival___AppendixShape_H3Title, c6: carnival___AppendixShape_AppendixGlossary, c7: carnival___AppendixShape_GlossarySection, c8: carnival___AppendixShape_List__MarginLeft) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8])
        }
    }
    // END: carnival___AppendixShape
    

    // START: carnival___IndexShape
    
            class carnival___IndexShape_Container extends Component {
                constructor(config: {
                    'column-count'?: number, 'column-gap'?: [number, LENGTH]
                }) {
                    const defaults = {'column-count': 3, 'column-gap': [32,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_H1Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform': any /* ENUM__ValueSet:::REQUIRED */, 'column-span'?: any /* all */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'column-span': "all", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'padding-bottom': [0.7,"rem"], 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_Group extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* normal */, 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "normal", 'padding-bottom': [4.2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_GroupLabel extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_TermContainer extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_TermText extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-right'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'padding-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndexShape_PageNumber extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___IndexShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___IndexShape_Container, c1: carnival___IndexShape_H1Title, c2: carnival___IndexShape_Group, c3: carnival___IndexShape_GroupLabel, c4: carnival___IndexShape_TermContainer, c5: carnival___IndexShape_TermText, c6: carnival___IndexShape_PageNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6])
        }
    }
    // END: carnival___IndexShape
    

    // START: carnival___ReferencesShape
    
            class carnival___ReferencesShape_ContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ReferencesShape_H1Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform': any /* ENUM__ValueSet:::REQUIRED */, 'column-span'?: any /* all */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'column-span': "all", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'padding-bottom': [0.7,"rem"], 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ReferencesShape_Section extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ReferencesShape_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___ReferencesShape_Text extends Component {
                constructor(config: {
                    'text-indent'?: [number, LENGTH], 'padding-left'?: [number, LENGTH]
                }) {
                    const defaults = {'text-indent': [-24,"px"], 'padding-left': [24,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___ReferencesShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___ReferencesShape_ContainerWrapper, c1: carnival___ReferencesShape_H1Title, c2: carnival___ReferencesShape_Section, c3: carnival___ReferencesShape_H2Title, c4: carnival___ReferencesShape_Text) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___ReferencesShape
    

    // START: carnival___FootnotesShape
    
            class carnival___FootnotesShape_Container extends Component {
                constructor(config: {
                    'float'?: any /* footnote */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'text-align'?: any /* left */, 'font-weight'?: any /* normal */
                }) {
                    const defaults = {'float': "footnote", 'text-align': "left", 'font-weight': "normal"}
                    super(defaults, config)
                }
            }
            

            class carnival___FootnotesShape_FootnoteCall extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FootnotesShape_FootnoteMarker extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FootnotesShape_FootnoteNumber extends Component {
                constructor(config: {
                    'display'?: any /* inline-block */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "inline-block", 'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___FootnotesShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___FootnotesShape_Container, c1: carnival___FootnotesShape_FootnoteCall, c2: carnival___FootnotesShape_FootnoteMarker, c3: carnival___FootnotesShape_FootnoteNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___FootnotesShape
    

    // START: carnival___FootnotesCallShape
    
            class carnival___FootnotesCallShape_DefaultFootnoteCall extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: number, 'position'?: any /* relative */, 'vertical-align'?: any /* baseline */, 'top'?: [number, any /* em */]
                }) {
                    const defaults = {'font-size': [75,"%"], 'line-height': 0, 'position': "relative", 'vertical-align': "baseline", 'top': [-0.7,"em"]}
                    super(defaults, config)
                }
            }
            
    class carnival___FootnotesCallShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___FootnotesCallShape_DefaultFootnoteCall) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: carnival___FootnotesCallShape
    

    // START: carnival___Preface
    
            class carnival___Preface_PrefaceContainer extends Component {
                constructor(config: {
                    'column-count'?: number, 'column-gap'?: [number, LENGTH], 'column-width'?: any /* auto */
                }) {
                    const defaults = {'column-count': 2, 'column-gap': [2.4,"rem"], 'column-width': "auto"}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_H1Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform': any /* ENUM__ValueSet:::REQUIRED */, 'column-span'?: any /* all */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'column-span': "all", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'padding-bottom': [0.7,"rem"], 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_H4Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_H5Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___Preface_Nested__List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___Preface extends Shape {
        constructor(config: {
            
        }, c0: carnival___Preface_PrefaceContainer, c1: carnival___Preface_H1Title, c2: carnival___Preface_H2Title, c3: carnival___Preface_H3Title, c4: carnival___Preface_H4Title, c5: carnival___Preface_H5Title, c6: carnival___Preface_List__MarginLeft, c7: carnival___Preface_Nested__List__MarginLeft) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7])
        }
    }
    // END: carnival___Preface
    

    // START: carnival___MarginChapterIntroShape
    
            class carnival___MarginChapterIntroShape_SplashFigureWrapper extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashFigure extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'margin'?: number
                }) {
                    const defaults = {'position': "relative", 'margin': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashFigureBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashImgMedia extends Component {
                constructor(config: {
                    'line-height'?: number, 'height'?: [number, LENGTH], 'display'?: any /* flex */, 'width'?: [number, any /* in */], 'justify-content'?: any /* flex-end */
                }) {
                    const defaults = {'line-height': 0, 'height': [100,"%"], 'display': "flex", 'width': [7.65,"in"], 'justify-content': "flex-end"}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashImg extends Component {
                constructor(config: {
                    'width'?: [number, any /* in */]
                }) {
                    const defaults = {'width': [8.15,"in"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashCaption extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'position': "relative", 'padding-top': [1,"rem"], 'padding-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_SplashCaptionBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_FigureNum extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* inline-block */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'display': "inline-block", 'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_FigureLabel extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_FigureTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_Caption extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_IntroBody extends Component {
                constructor(config: {
                    'display'?: any /* flex */, 'flex-direction'?: any /* row-reverse */, 'justify-content'?: any /* space-between */, 'position'?: any /* relative */, 'right'?: [number, any /* in */], 'margin-left'?: [number, any /* in */]
                }) {
                    const defaults = {'display': "flex", 'flex-direction': "row-reverse", 'justify-content': "space-between", 'position': "relative", 'right': [-2,"in"], 'margin-left': [-2,"in"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_OutlineMargin extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'width': any /* ENUM__ValueSet:::REQUIRED */, 'background-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'box-decoration-break'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_OutlineTitle extends Component {
                constructor(config: {
                    'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'position'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'flex-direction'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_ChapterOutlineObjective extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [0.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_OutlineObjectiveLink extends Component {
                constructor(config: {
                    'display': any /* ENUM__ValueSet:::REQUIRED */, 'text-decoration'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_ChapterOutlineObjectiveText extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_IntroContentWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___MarginChapterIntroShape_IntroContentHeader extends Component {
                constructor(config: {
                    'float'?: any /* left */, 'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'float': "left"}
                    super(defaults, config)
                }
            }
            
    class carnival___MarginChapterIntroShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___MarginChapterIntroShape_SplashFigureWrapper, c1: carnival___MarginChapterIntroShape_SplashFigure, c2: carnival___MarginChapterIntroShape_SplashFigureBg, c3: carnival___MarginChapterIntroShape_SplashImgMedia, c4: carnival___MarginChapterIntroShape_SplashImg, c5: carnival___MarginChapterIntroShape_SplashCaption, c6: carnival___MarginChapterIntroShape_SplashCaptionBg, c7: carnival___MarginChapterIntroShape_FigureNum, c8: carnival___MarginChapterIntroShape_FigureLabel, c9: carnival___MarginChapterIntroShape_FigureTitle, c10: carnival___MarginChapterIntroShape_Caption, c11: carnival___MarginChapterIntroShape_IntroBody, c12: carnival___MarginChapterIntroShape_OutlineMargin, c13: carnival___MarginChapterIntroShape_OutlineTitle, c14: carnival___MarginChapterIntroShape_ChapterOutlineObjective, c15: carnival___MarginChapterIntroShape_OutlineObjectiveLink, c16: carnival___MarginChapterIntroShape_ChapterOutlineObjectiveText, c17: carnival___MarginChapterIntroShape_IntroContentWrapper, c18: carnival___MarginChapterIntroShape_IntroContentHeader) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18])
        }
    }
    // END: carnival___MarginChapterIntroShape
    

    // START: carnival___ChapterIntroWithObjectivesShape
    
            class carnival___ChapterIntroWithObjectivesShape_SplashFigureWrapper extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashFigure extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'margin'?: number
                }) {
                    const defaults = {'position': "relative", 'margin': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashFigureBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashImgMedia extends Component {
                constructor(config: {
                    'line-height'?: number, 'height'?: [number, LENGTH], 'display'?: any /* flex */, 'width'?: [number, any /* in */], 'justify-content'?: any /* flex-end */
                }) {
                    const defaults = {'line-height': 0, 'height': [100,"%"], 'display': "flex", 'width': [7.65,"in"], 'justify-content': "flex-end"}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashImg extends Component {
                constructor(config: {
                    'width'?: [number, any /* in */]
                }) {
                    const defaults = {'width': [8.15,"in"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashCaption extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'position': "relative", 'padding-top': [1,"rem"], 'padding-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_SplashCaptionBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_FigureNum extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* inline-block */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'display': "inline-block", 'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_FigureLabel extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_FigureTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_Caption extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_IntroBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform'?: any /* uppercase */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "bold", 'text-transform': "uppercase", 'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesPara extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-style'?: any /* italic */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'font-style': "italic"}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesList extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'margin-left'?: [number, LENGTH], 'padding-left'?: number, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"], 'margin-left': [16,"px"], 'padding-left': 0, 'font-size': [1,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesListItem extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_ObjectivesListDot extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_IntroContentWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ChapterIntroWithObjectivesShape_IntroContentHeader extends Component {
                constructor(config: {
                    'float'?: any /* left */, 'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'float': "left"}
                    super(defaults, config)
                }
            }
            
    class carnival___ChapterIntroWithObjectivesShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___ChapterIntroWithObjectivesShape_SplashFigureWrapper, c1: carnival___ChapterIntroWithObjectivesShape_SplashFigure, c2: carnival___ChapterIntroWithObjectivesShape_SplashFigureBg, c3: carnival___ChapterIntroWithObjectivesShape_SplashImgMedia, c4: carnival___ChapterIntroWithObjectivesShape_SplashImg, c5: carnival___ChapterIntroWithObjectivesShape_SplashCaption, c6: carnival___ChapterIntroWithObjectivesShape_SplashCaptionBg, c7: carnival___ChapterIntroWithObjectivesShape_FigureNum, c8: carnival___ChapterIntroWithObjectivesShape_FigureLabel, c9: carnival___ChapterIntroWithObjectivesShape_FigureTitle, c10: carnival___ChapterIntroWithObjectivesShape_Caption, c11: carnival___ChapterIntroWithObjectivesShape_IntroBodyWrapper, c12: carnival___ChapterIntroWithObjectivesShape_ObjectivesWrapper, c13: carnival___ChapterIntroWithObjectivesShape_ObjectivesTitle, c14: carnival___ChapterIntroWithObjectivesShape_ObjectivesPara, c15: carnival___ChapterIntroWithObjectivesShape_ObjectivesList, c16: carnival___ChapterIntroWithObjectivesShape_ObjectivesListItem, c17: carnival___ChapterIntroWithObjectivesShape_ObjectivesListDot, c18: carnival___ChapterIntroWithObjectivesShape_IntroContentWrapper, c19: carnival___ChapterIntroWithObjectivesShape_IntroContentHeader) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19])
        }
    }
    // END: carnival___ChapterIntroWithObjectivesShape
    

    // START: carnival___FullWidthChapterIntroShape
    
            class carnival___FullWidthChapterIntroShape_SplashFigureWrapper extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashFigure extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'margin'?: number
                }) {
                    const defaults = {'position': "relative", 'margin': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashFigureBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashImgMedia extends Component {
                constructor(config: {
                    'line-height'?: number, 'height'?: [number, LENGTH], 'display'?: any /* flex */, 'width'?: [number, any /* in */], 'justify-content'?: any /* flex-end */
                }) {
                    const defaults = {'line-height': 0, 'height': [100,"%"], 'display': "flex", 'width': [7.65,"in"], 'justify-content': "flex-end"}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashImg extends Component {
                constructor(config: {
                    'width'?: [number, any /* in */]
                }) {
                    const defaults = {'width': [8.15,"in"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashCaption extends Component {
                constructor(config: {
                    'position'?: any /* relative */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'position': "relative", 'padding-top': [1,"rem"], 'padding-bottom': [2,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_SplashCaptionBg extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'background-color': any /* ENUM__ValueSet:::REQUIRED */, 'position'?: any /* absolute */, 'height'?: [number, LENGTH], 'width': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'z-index'?: number, 'box-sizing'?: any /* border-box */, 'padding'?: any /* inherit */, 'top'?: number
                }) {
                    const defaults = {'content': "''", 'position': "absolute", 'height': [100,"%"], 'z-index': -1, 'box-sizing': "border-box", 'padding': "inherit", 'top': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_FigureNum extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* inline-block */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'display': "inline-block", 'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_FigureLabel extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_FigureTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_Caption extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_IntroBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineFullWidth extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'width': any /* ENUM__ValueSet:::REQUIRED */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'box-decoration-break'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineTitle extends Component {
                constructor(config: {
                    'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'position'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'flex-direction'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineTitleBottomBorder extends Component {
                constructor(config: {
                    'content'?: any /* '' */, 'width'?: [number, any /* in */], 'border-bottom-width'?: [number, LENGTH], 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'border-bottom-style'?: SLICE_ENUM, 'margin-left'?: [number, LENGTH], 'position'?: any /* absolute */, 'bottom'?: number, 'display'?: any /* inline-block */
                }) {
                    const defaults = {'content': "''", 'width': [5.20104,"in"], 'border-bottom-width': [0.2,"rem"], 'border-bottom-style': "solid", 'margin-left': [10.39167,"rem"], 'position': "absolute", 'bottom': 0, 'display': "inline-block"}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_ChapterOutlineObjective extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'padding-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [0.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineObjectiveLink extends Component {
                constructor(config: {
                    'display': any /* ENUM__ValueSet:::REQUIRED */, 'text-decoration'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_ChapterOutlineObjectiveText extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineObjectiveLearning extends Component {
                constructor(config: {
                    'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineAbstract extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-left': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_OutlineList extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_IntroContentWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FullWidthChapterIntroShape_IntroContentHeader extends Component {
                constructor(config: {
                    'float'?: any /* left */, 'font-size'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'float': "left"}
                    super(defaults, config)
                }
            }
            
    class carnival___FullWidthChapterIntroShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___FullWidthChapterIntroShape_SplashFigureWrapper, c1: carnival___FullWidthChapterIntroShape_SplashFigure, c2: carnival___FullWidthChapterIntroShape_SplashFigureBg, c3: carnival___FullWidthChapterIntroShape_SplashImgMedia, c4: carnival___FullWidthChapterIntroShape_SplashImg, c5: carnival___FullWidthChapterIntroShape_SplashCaption, c6: carnival___FullWidthChapterIntroShape_SplashCaptionBg, c7: carnival___FullWidthChapterIntroShape_FigureNum, c8: carnival___FullWidthChapterIntroShape_FigureLabel, c9: carnival___FullWidthChapterIntroShape_FigureTitle, c10: carnival___FullWidthChapterIntroShape_Caption, c11: carnival___FullWidthChapterIntroShape_IntroBodyWrapper, c12: carnival___FullWidthChapterIntroShape_OutlineFullWidth, c13: carnival___FullWidthChapterIntroShape_OutlineTitle, c14: carnival___FullWidthChapterIntroShape_OutlineTitleBottomBorder, c15: carnival___FullWidthChapterIntroShape_ChapterOutlineObjective, c16: carnival___FullWidthChapterIntroShape_OutlineObjectiveLink, c17: carnival___FullWidthChapterIntroShape_ChapterOutlineObjectiveText, c18: carnival___FullWidthChapterIntroShape_OutlineObjectiveLearning, c19: carnival___FullWidthChapterIntroShape_OutlineAbstract, c20: carnival___FullWidthChapterIntroShape_OutlineList, c21: carnival___FullWidthChapterIntroShape_IntroContentWrapper, c22: carnival___FullWidthChapterIntroShape_IntroContentHeader) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22])
        }
    }
    // END: carnival___FullWidthChapterIntroShape
    

    // START: carnival___Chapter
    
            class carnival___Chapter_Container extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___Chapter_Title extends Component {
                constructor(config: {
                    'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___Chapter_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* lighter */
                }) {
                    const defaults = {'display': "block", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'font-weight': "lighter"}
                    super(defaults, config)
                }
            }
            

            class carnival___Chapter_TitleNumber extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* block */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */, 'text-transform'?: any /* uppercase */, 'letter-spacing'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bolder", 'text-transform': "uppercase", 'letter-spacing': [0.1,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___Chapter extends Shape {
        constructor(config: {
            
        }, c0: carnival___Chapter_Container, c1: carnival___Chapter_Title, c2: carnival___Chapter_TitleText, c3: carnival___Chapter_TitleNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___Chapter
    

    // START: carnival___Page
    
            class carnival___Page_Container extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___Page_Title extends Component {
                constructor(config: {
                    'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___Page_TitleText extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* lighter */
                }) {
                    const defaults = {'display': "block", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'font-weight': "lighter"}
                    super(defaults, config)
                }
            }
            

            class carnival___Page_TitleNumber extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* block */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */, 'text-transform'?: any /* uppercase */, 'letter-spacing'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'font-size': [2.0736,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bolder", 'text-transform': "uppercase", 'letter-spacing': [0.1,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___Page extends Shape {
        constructor(config: {
            
        }, c0: carnival___Page_Container, c1: carnival___Page_Title, c2: carnival___Page_TitleText, c3: carnival___Page_TitleNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___Page
    

    // START: carnival___ModuleShape
    
            class carnival___ModuleShape_ContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_H4Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_ParagraphTitle extends Component {
                constructor(config: {
                    'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_Nested__List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ModuleShape_TitleOverFigure extends Component {
                constructor(config: {
                    'padding-top'?: [number, LENGTH]
                }) {
                    const defaults = {'padding-top': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___ModuleShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___ModuleShape_ContainerWrapper, c1: carnival___ModuleShape_H2Title, c2: carnival___ModuleShape_List__MarginLeft, c3: carnival___ModuleShape_H3Title, c4: carnival___ModuleShape_H4Title, c5: carnival___ModuleShape_ParagraphTitle, c6: carnival___ModuleShape_Nested__List__MarginLeft, c7: carnival___ModuleShape_TitleOverFigure) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7])
        }
    }
    // END: carnival___ModuleShape
    

    // START: carnival___IndentShape
    
            class carnival___IndentShape_ContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___IndentShape_Paragraph extends Component {
                constructor(config: {
                    'text-indent'?: [number, LENGTH], 'padding-left'?: [number, LENGTH]
                }) {
                    const defaults = {'text-indent': [16,"px"], 'padding-left': [-16,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___IndentShape_SectionWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___IndentShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___IndentShape_ContainerWrapper, c1: carnival___IndentShape_Paragraph, c2: carnival___IndentShape_SectionWrapper) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2])
        }
    }
    // END: carnival___IndentShape
    

    // START: carnival___SectionKeyTermsShape
    
            class carnival___SectionKeyTermsShape_Container extends Component {
                constructor(config: {
                    'margin-left'?: number, 'margin-bottom'?: number
                }) {
                    const defaults = {'margin-left': 0, 'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___SectionKeyTermsShape_Table extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___SectionKeyTermsShape_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___SectionKeyTermsShape_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___SectionKeyTermsShape_TableData extends Component {
                constructor(config: {
                    'padding-right': any /* ENUM__ValueSet:::REQUIRED */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'padding-top': [0.7,"rem"], 'padding-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___SectionKeyTermsShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___SectionKeyTermsShape_Container, c1: carnival___SectionKeyTermsShape_Table, c2: carnival___SectionKeyTermsShape_TableBodyWrapper, c3: carnival___SectionKeyTermsShape_TableRowWrapper, c4: carnival___SectionKeyTermsShape_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___SectionKeyTermsShape
    

    // START: carnival___GenericEOCShape
    
            class carnival___GenericEOCShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H3LinkTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H3ListTitle extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H4Title extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___GenericEOCShape_H4LinkTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            
    class carnival___GenericEOCShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___GenericEOCShape_Container, c1: carnival___GenericEOCShape_H2Title, c2: carnival___GenericEOCShape_H3Title, c3: carnival___GenericEOCShape_H3LinkTitle, c4: carnival___GenericEOCShape_H3ListTitle, c5: carnival___GenericEOCShape_H4Title, c6: carnival___GenericEOCShape_H4LinkTitle) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6])
        }
    }
    // END: carnival___GenericEOCShape
    

    // START: carnival___EOCDefaultCompoundComposite
    
            class carnival___EOCDefaultCompoundComposite_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCDefaultCompoundComposite_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCDefaultCompoundComposite_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCDefaultCompoundComposite_H3TitleBottomBorder extends Component {
                constructor(config: {
                    'content'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'height'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'position'?: any /* ENUM__ValueSet:::OPTIONAL */, 'bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-right'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCDefaultCompoundComposite_H4LinkTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            
    class carnival___EOCDefaultCompoundComposite extends Shape {
        constructor(config: {
            
        }, c0: carnival___EOCDefaultCompoundComposite_Container, c1: carnival___EOCDefaultCompoundComposite_H2Title, c2: carnival___EOCDefaultCompoundComposite_H3Title, c3: carnival___EOCDefaultCompoundComposite_H3TitleBottomBorder, c4: carnival___EOCDefaultCompoundComposite_H4LinkTitle) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4])
        }
    }
    // END: carnival___EOCDefaultCompoundComposite
    

    // START: carnival___EocKeyTerm
    
            class carnival___EocKeyTerm_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyTerm_TermDL extends Component {
                constructor(config: {
                    'text-indent': any /* ENUM__ValueSet:::REQUIRED */, 'padding-left': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyTerm_Term extends Component {
                constructor(config: {
                    'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'padding-right': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyTerm_TermDD extends Component {
                constructor(config: {
                    'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___EocKeyTerm extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocKeyTerm_Container, c1: carnival___EocKeyTerm_TermDL, c2: carnival___EocKeyTerm_Term, c3: carnival___EocKeyTerm_TermDD) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3])
        }
    }
    // END: carnival___EocKeyTerm
    

    // START: carnival___EocKeyEquations
    
            class carnival___EocKeyEquations_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_Section__MarginBottom extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_KeyEquations extends Component {
                constructor(config: {
                    'padding'?: number
                }) {
                    const defaults = {'padding': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_KeyEquationsTableContainer extends Component {
                constructor(config: {
                    'margin-bottom'?: number, 'margin-left'?: number, 'margin-right'?: number
                }) {
                    const defaults = {'margin-bottom': 0, 'margin-left': 0, 'margin-right': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_UnnumberedUnstyledTable extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_TableHeadWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_TableHeadCell extends Component {
                constructor(config: {
                    'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocKeyEquations_TableData extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___EocKeyEquations extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocKeyEquations_Container, c1: carnival___EocKeyEquations_Section__MarginBottom, c2: carnival___EocKeyEquations_KeyEquations, c3: carnival___EocKeyEquations_KeyEquationsTableContainer, c4: carnival___EocKeyEquations_UnnumberedUnstyledTable, c5: carnival___EocKeyEquations_TableHeadWrapper, c6: carnival___EocKeyEquations_TableRowWrapper, c7: carnival___EocKeyEquations_TableHeadCell, c8: carnival___EocKeyEquations_TableBodyWrapper, c9: carnival___EocKeyEquations_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9])
        }
    }
    // END: carnival___EocKeyEquations
    

    // START: carnival___EocSummary
    
            class carnival___EocSummary_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocSummary_List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocSummary_Nested__List__MarginLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___EocSummary extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocSummary_Container, c1: carnival___EocSummary_List__MarginLeft, c2: carnival___EocSummary_Nested__List__MarginLeft) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2])
        }
    }
    // END: carnival___EocSummary
    

    // START: carnival___EocExercise
    
            class carnival___EocExercise_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExercise_ProblemWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExercise_ProblemNumber extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'text-decoration': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExercise_ProblemDivider extends Component {
                constructor(config: {
                    'margin-right': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExercise_ProblemContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExercise_ProblemParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            
    class carnival___EocExercise extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocExercise_Container, c1: carnival___EocExercise_ProblemWrapper, c2: carnival___EocExercise_ProblemNumber, c3: carnival___EocExercise_ProblemDivider, c4: carnival___EocExercise_ProblemContainer, c5: carnival___EocExercise_ProblemParagraph) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5])
        }
    }
    // END: carnival___EocExercise
    

    // START: carnival___EocExerciseWithoutSubtitle
    
            class carnival___EocExerciseWithoutSubtitle_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ProblemWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ProblemNumber extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'text-decoration': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ProblemDivider extends Component {
                constructor(config: {
                    'margin-right': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ProblemContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ProblemParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ExerciseFigure extends Component {
                constructor(config: {
                    'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ExerciseTable extends Component {
                constructor(config: {
                    'width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'table-layout'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_Nested__List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocExerciseWithoutSubtitle_ExerciseTableRow extends Component {
                constructor(config: {
                    'text-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___EocExerciseWithoutSubtitle extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocExerciseWithoutSubtitle_Container, c1: carnival___EocExerciseWithoutSubtitle_ProblemWrapper, c2: carnival___EocExerciseWithoutSubtitle_ProblemNumber, c3: carnival___EocExerciseWithoutSubtitle_ProblemDivider, c4: carnival___EocExerciseWithoutSubtitle_ProblemContainer, c5: carnival___EocExerciseWithoutSubtitle_ProblemParagraph, c6: carnival___EocExerciseWithoutSubtitle_ExerciseFigure, c7: carnival___EocExerciseWithoutSubtitle_ExerciseTable, c8: carnival___EocExerciseWithoutSubtitle_List__MarginLeftBottom, c9: carnival___EocExerciseWithoutSubtitle_Nested__List__MarginLeftBottom, c10: carnival___EocExerciseWithoutSubtitle_ExerciseTableRow) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10])
        }
    }
    // END: carnival___EocExerciseWithoutSubtitle
    

    // START: carnival___EocCompChapExercises
    
            class carnival___EocCompChapExercises_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH], 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ProblemWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ProblemNumber extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'text-decoration': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ProblemDivider extends Component {
                constructor(config: {
                    'margin-right': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ProblemContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */
                }) {
                    const defaults = {'display': "table-cell"}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ProblemParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_Nested__List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_ExerciseFigure extends Component {
                constructor(config: {
                    'max-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EocCompChapExercises_List__MarginLeftBottomIncreased extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [32,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___EocCompChapExercises extends Shape {
        constructor(config: {
            
        }, c0: carnival___EocCompChapExercises_Container, c1: carnival___EocCompChapExercises_ProblemWrapper, c2: carnival___EocCompChapExercises_ProblemNumber, c3: carnival___EocCompChapExercises_ProblemDivider, c4: carnival___EocCompChapExercises_ProblemContainer, c5: carnival___EocCompChapExercises_ProblemParagraph, c6: carnival___EocCompChapExercises_List__MarginLeftBottom, c7: carnival___EocCompChapExercises_Nested__List__MarginLeftBottom, c8: carnival___EocCompChapExercises_ExerciseFigure, c9: carnival___EocCompChapExercises_List__MarginLeftBottomIncreased) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9])
        }
    }
    // END: carnival___EocCompChapExercises
    

    // START: carnival___AnswerKeyShape
    
            class carnival___AnswerKeyShape_ContainerWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_H1Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-transform': any /* ENUM__ValueSet:::REQUIRED */, 'column-span'?: any /* all */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'border-bottom-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom-style'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-weight': "bold", 'column-span': "all", 'font-size': [3.58318,"rem"], 'line-height': [3,"rem"], 'padding-bottom': [0.7,"rem"], 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_H3Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'overflow'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.44,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_CompositePage extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_H2Title extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'column-span'?: any /* ENUM__ValueSet:::OPTIONAL */, 'text-transform'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'font-size': [1.728,"rem"], 'line-height': [1.5,"rem"], 'margin-bottom': [0.7,"rem"], 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionArea extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_Number extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'text-decoration'?: any /* none */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'display': "table-cell", 'text-decoration': "none", 'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionDivider extends Component {
                constructor(config: {
                    'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_Image extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH]
                }) {
                    const defaults = {'max-width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_AnswerKey__List__MarginBottomLeft extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: number
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___AnswerKeyShape_SolutionContainerSpecific extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            
    class carnival___AnswerKeyShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___AnswerKeyShape_ContainerWrapper, c1: carnival___AnswerKeyShape_H1Title, c2: carnival___AnswerKeyShape_H3Title, c3: carnival___AnswerKeyShape_CompositePage, c4: carnival___AnswerKeyShape_H2Title, c5: carnival___AnswerKeyShape_SolutionArea, c6: carnival___AnswerKeyShape_SolutionWrapper, c7: carnival___AnswerKeyShape_Number, c8: carnival___AnswerKeyShape_SolutionDivider, c9: carnival___AnswerKeyShape_SolutionContainer, c10: carnival___AnswerKeyShape_SolutionParagraph, c11: carnival___AnswerKeyShape_Image, c12: carnival___AnswerKeyShape_AnswerKey__List__MarginBottomLeft, c13: carnival___AnswerKeyShape_SolutionContainerSpecific) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13])
        }
    }
    // END: carnival___AnswerKeyShape
    

    // START: carnival___NoUnitToc
    
            class carnival___NoUnitToc_Container extends Component {
                constructor(config: {
                    'page-break-after'?: any /* always */
                }) {
                    const defaults = {'page-break-after': "always"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TopLevelList extends Component {
                constructor(config: {
                    'list-style'?: any /* none */, 'padding-left'?: number, 'margin-left'?: number, 'display'?: any /* inline */
                }) {
                    const defaults = {'list-style': "none", 'padding-left': 0, 'margin-left': 0, 'display': "inline"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapter extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterNumber extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'text-decoration'?: any /* none */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'letter-spacing'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'text-decoration': "none", 'font-weight': "bolder", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'letter-spacing': [0.1,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterList extends Component {
                constructor(config: {
                    'list-style'?: any /* none */, 'padding-left'?: number, 'margin-left'?: number, 'display'?: any /* block */
                }) {
                    const defaults = {'list-style': "none", 'padding-left': 0, 'margin-left': 0, 'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterPage extends Component {
                constructor(config: {
                    'display'?: any /* block */
                }) {
                    const defaults = {'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterPageLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterPageLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterCompositePage extends Component {
                constructor(config: {
                    'display'?: any /* block */
                }) {
                    const defaults = {'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterCompositePageLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocChapterCompositePageLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocEocCompositeChapter extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocEocCompositeChapterList extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocEocCompositeChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocEocCompositeChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocPreface extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocPrefaceLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocPrefaceLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocAppendix extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocAppendixNumber extends Component {
                constructor(config: {
                    'text-decoration'?: any /* none */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */
                }) {
                    const defaults = {'text-decoration': "none", 'font-weight': "bolder"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocAppendixDivider extends Component {
                constructor(config: {
                    'content'?: any /* ' ' */
                }) {
                    const defaults = {'content': "' '"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocAppendixLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocAppendixLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocReferences extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocReferencesLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocReferencesLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocIndex extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocIndexLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocIndexLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocCompositeChapter extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocCompositeChapterList extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocCompositeChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocCompositeChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___NoUnitToc_TocTitleWord extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* block */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* lighter */, 'border-bottom'?: any /* 0.5rem solid */, 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'margin-bottom'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [4.29982,"rem"], 'line-height': [3,"rem"], 'display': "block", 'font-weight': "lighter", 'border-bottom': "0.5rem solid", 'margin-bottom': [2.8,"rem"], 'padding-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___NoUnitToc extends Shape {
        constructor(config: {
            
        }, c0: carnival___NoUnitToc_Container, c1: carnival___NoUnitToc_TopLevelList, c2: carnival___NoUnitToc_TocChapter, c3: carnival___NoUnitToc_TocChapterNumber, c4: carnival___NoUnitToc_TocChapterLink, c5: carnival___NoUnitToc_TocChapterLinkPage, c6: carnival___NoUnitToc_TocChapterList, c7: carnival___NoUnitToc_TocChapterPage, c8: carnival___NoUnitToc_TocChapterPageLink, c9: carnival___NoUnitToc_TocChapterPageLinkPage, c10: carnival___NoUnitToc_TocChapterCompositePage, c11: carnival___NoUnitToc_TocChapterCompositePageLink, c12: carnival___NoUnitToc_TocChapterCompositePageLinkPage, c13: carnival___NoUnitToc_TocEocCompositeChapter, c14: carnival___NoUnitToc_TocEocCompositeChapterList, c15: carnival___NoUnitToc_TocEocCompositeChapterLink, c16: carnival___NoUnitToc_TocEocCompositeChapterLinkPage, c17: carnival___NoUnitToc_TocPreface, c18: carnival___NoUnitToc_TocPrefaceLink, c19: carnival___NoUnitToc_TocPrefaceLinkPage, c20: carnival___NoUnitToc_TocAppendix, c21: carnival___NoUnitToc_TocAppendixNumber, c22: carnival___NoUnitToc_TocAppendixDivider, c23: carnival___NoUnitToc_TocAppendixLink, c24: carnival___NoUnitToc_TocAppendixLinkPage, c25: carnival___NoUnitToc_TocReferences, c26: carnival___NoUnitToc_TocReferencesLink, c27: carnival___NoUnitToc_TocReferencesLinkPage, c28: carnival___NoUnitToc_TocIndex, c29: carnival___NoUnitToc_TocIndexLink, c30: carnival___NoUnitToc_TocIndexLinkPage, c31: carnival___NoUnitToc_TocCompositeChapter, c32: carnival___NoUnitToc_TocCompositeChapterList, c33: carnival___NoUnitToc_TocCompositeChapterLink, c34: carnival___NoUnitToc_TocCompositeChapterLinkPage, c35: carnival___NoUnitToc_TocTitleWord) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35])
        }
    }
    // END: carnival___NoUnitToc
    

    // START: carnival___UnitToc
    
            class carnival___UnitToc_Container extends Component {
                constructor(config: {
                    'page-break-after'?: any /* always */
                }) {
                    const defaults = {'page-break-after': "always"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TopLevelList extends Component {
                constructor(config: {
                    'list-style'?: any /* none */, 'padding-left'?: number, 'margin-left'?: number, 'display'?: any /* inline */
                }) {
                    const defaults = {'list-style': "none", 'padding-left': 0, 'margin-left': 0, 'display': "inline"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocPreface extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocPrefaceLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocPrefaceLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocAppendix extends Component {
                constructor(config: {
                    'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocAppendixNumber extends Component {
                constructor(config: {
                    'text-decoration'?: any /* none */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */
                }) {
                    const defaults = {'text-decoration': "none", 'font-weight': "bolder"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocAppendixDivider extends Component {
                constructor(config: {
                    'content'?: any /* ' ' */
                }) {
                    const defaults = {'content': "' '"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocAppendixLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocAppendixLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocReferences extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocReferencesLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocReferencesLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocIndex extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocIndexLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocIndexLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocCompositeChapter extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocCompositeChapterList extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocCompositeChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocCompositeChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocUnitWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocUnitLink extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight': any /* ENUM__ValueSet:::REQUIRED */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'border-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'text-transform'?: any /* uppercase */, 'letter-spacing'?: [number, LENGTH], 'text-decoration'?: any /* none */, 'padding-bottom'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'text-transform': "uppercase", 'letter-spacing': [0.1,"rem"], 'text-decoration': "none", 'padding-bottom': [0.7,"rem"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocUnitList extends Component {
                constructor(config: {
                    'list-style'?: any /* none */, 'padding-left'?: number, 'margin-left'?: number, 'display'?: any /* block */
                }) {
                    const defaults = {'list-style': "none", 'padding-left': 0, 'margin-left': 0, 'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapter extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'margin-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterNumber extends Component {
                constructor(config: {
                    'display'?: any /* block */, 'text-decoration'?: any /* none */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bolder */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'text-transform'?: any /* uppercase */, 'letter-spacing'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "block", 'text-decoration': "none", 'font-weight': "bolder", 'font-size': [1.2,"rem"], 'line-height': [1.5,"rem"], 'text-transform': "uppercase", 'letter-spacing': [0.1,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterList extends Component {
                constructor(config: {
                    'list-style'?: any /* none */, 'padding-left'?: number, 'margin-left'?: number, 'display'?: any /* block */
                }) {
                    const defaults = {'list-style': "none", 'padding-left': 0, 'margin-left': 0, 'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterPage extends Component {
                constructor(config: {
                    'display'?: any /* block */
                }) {
                    const defaults = {'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterPageLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterPageLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterCompositePage extends Component {
                constructor(config: {
                    'display'?: any /* block */
                }) {
                    const defaults = {'display': "block"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterCompositePageLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocChapterCompositePageLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocEocCompositeChapter extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocEocCompositeChapterList extends Component {
                constructor(config: {
                    'display'?: any /* none */
                }) {
                    const defaults = {'display': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocEocCompositeChapterLink extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* #000000 */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'color': ["ENUM__ValueSet:::OPTIONAL","#000000"], 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocEocCompositeChapterLinkPage extends Component {
                constructor(config: {
                    'content': any /* ENUM__ValueSet:::REQUIRED */, 'display': any /* ENUM__ValueSet:::REQUIRED */, 'margin-left': any /* ENUM__ValueSet:::REQUIRED */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size': any /* ENUM__ValueSet:::REQUIRED */, 'line-height': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'color'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnitToc_TocTitleWord extends Component {
                constructor(config: {
                    'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'color': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* block */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* lighter */, 'border-bottom'?: any /* 0.5rem solid */, 'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'margin-bottom'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'font-size': [4.29982,"rem"], 'line-height': [3,"rem"], 'display': "block", 'font-weight': "lighter", 'border-bottom': "0.5rem solid", 'margin-bottom': [2.8,"rem"], 'padding-bottom': [1.4,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___UnitToc extends Shape {
        constructor(config: {
            
        }, c0: carnival___UnitToc_Container, c1: carnival___UnitToc_TopLevelList, c2: carnival___UnitToc_TocPreface, c3: carnival___UnitToc_TocPrefaceLink, c4: carnival___UnitToc_TocPrefaceLinkPage, c5: carnival___UnitToc_TocAppendix, c6: carnival___UnitToc_TocAppendixNumber, c7: carnival___UnitToc_TocAppendixDivider, c8: carnival___UnitToc_TocAppendixLink, c9: carnival___UnitToc_TocAppendixLinkPage, c10: carnival___UnitToc_TocReferences, c11: carnival___UnitToc_TocReferencesLink, c12: carnival___UnitToc_TocReferencesLinkPage, c13: carnival___UnitToc_TocIndex, c14: carnival___UnitToc_TocIndexLink, c15: carnival___UnitToc_TocIndexLinkPage, c16: carnival___UnitToc_TocCompositeChapter, c17: carnival___UnitToc_TocCompositeChapterList, c18: carnival___UnitToc_TocCompositeChapterLink, c19: carnival___UnitToc_TocCompositeChapterLinkPage, c20: carnival___UnitToc_TocUnitWrapper, c21: carnival___UnitToc_TocUnitLink, c22: carnival___UnitToc_TocUnitList, c23: carnival___UnitToc_TocChapter, c24: carnival___UnitToc_TocChapterNumber, c25: carnival___UnitToc_TocChapterLink, c26: carnival___UnitToc_TocChapterLinkPage, c27: carnival___UnitToc_TocChapterList, c28: carnival___UnitToc_TocChapterPage, c29: carnival___UnitToc_TocChapterPageLink, c30: carnival___UnitToc_TocChapterPageLinkPage, c31: carnival___UnitToc_TocChapterCompositePage, c32: carnival___UnitToc_TocChapterCompositePageLink, c33: carnival___UnitToc_TocChapterCompositePageLinkPage, c34: carnival___UnitToc_TocEocCompositeChapter, c35: carnival___UnitToc_TocEocCompositeChapterList, c36: carnival___UnitToc_TocEocCompositeChapterLink, c37: carnival___UnitToc_TocEocCompositeChapterLinkPage, c38: carnival___UnitToc_TocTitleWord) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38])
        }
    }
    // END: carnival___UnitToc
    

    // START: carnival___Term
    
            class carnival___Term_Term extends Component {
                constructor(config: {
                    'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            
    class carnival___Term extends Shape {
        constructor(config: {
            
        }, c0: carnival___Term_Term) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: carnival___Term
    

    // START: carnival___EquationShape
    
            class carnival___EquationShape_EquationContainer extends Component {
                constructor(config: {
                    'position'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* flex */, 'flex-direction'?: any /* ENUM__ValueSet:::OPTIONAL */, 'align-items'?: any /* center */, 'justify-content'?: any /* center */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "flex", 'align-items': "center", 'justify-content': "center", 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___EquationShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___EquationShape_EquationContainer) {
            const defaults = {}
            super(defaults, config, [c0])
        }
    }
    // END: carnival___EquationShape
    

    // START: carnival___NumberedEquationShape
    
            class carnival___NumberedEquationShape_EquationContainer extends Component {
                constructor(config: {
                    'position'?: any /* ENUM__ValueSet:::OPTIONAL */, 'display'?: any /* flex */, 'flex-direction'?: any /* ENUM__ValueSet:::OPTIONAL */, 'align-items'?: any /* center */, 'justify-content'?: any /* center */, 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "flex", 'align-items': "center", 'justify-content': "center", 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___NumberedEquationShape_EquationNumber extends Component {
                constructor(config: {
                    'position'?: any /* absolute */, 'right'?: number, 'top'?: [number, LENGTH], 'transform'?: any /* translate(0, -50%) */, 'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-size'?: [number, LENGTH], 'line-height'?: [number, LENGTH], 'font-weight'?: any /* bold */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'position': "absolute", 'right': 0, 'top': [50,"%"], 'transform': "translate(0, -50%)", 'font-size': [1,"rem"], 'line-height': [1.5,"rem"], 'font-weight': "bold", 'margin-right': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            
    class carnival___NumberedEquationShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___NumberedEquationShape_EquationContainer, c1: carnival___NumberedEquationShape_EquationNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1])
        }
    }
    // END: carnival___NumberedEquationShape
    

    // START: carnival___BasicTableShape
    
            class carnival___BasicTableShape_TableContainer extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_Table extends Component {
                constructor(config: {
                    'border-collapse'?: any /* collapse */
                }) {
                    const defaults = {'border-collapse': "collapse"}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableHeadWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableHeadCell extends Component {
                constructor(config: {
                    'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableData extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableDataList extends Component {
                constructor(config: {
                    'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableDataUnstyledList extends Component {
                constructor(config: {
                    'list-style-type'?: any /* none */
                }) {
                    const defaults = {'list-style-type': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_FirstTableData extends Component {
                constructor(config: {
                    'border-left'?: any /* none */, 'border-right': any /* ENUM__ValueSet:::REQUIRED */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'border-left': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableBottomBorderData extends Component {
                constructor(config: {
                    'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_LastTableMergedCellsRowData extends Component {
                constructor(config: {
                    'border-right'?: any /* none */
                }) {
                    const defaults = {'border-right': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_CaptionContainer extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'caption-side'?: any /* ENUM__ValueSet:::OPTIONAL */, 'prince-caption-page'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_CaptionTitle extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___BasicTableShape_TableNumber extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___BasicTableShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___BasicTableShape_TableContainer, c1: carnival___BasicTableShape_Table, c2: carnival___BasicTableShape_TableHeadWrapper, c3: carnival___BasicTableShape_TableRowWrapper, c4: carnival___BasicTableShape_TableHeadCell, c5: carnival___BasicTableShape_TableBodyWrapper, c6: carnival___BasicTableShape_TableData, c7: carnival___BasicTableShape_TableDataList, c8: carnival___BasicTableShape_TableDataUnstyledList, c9: carnival___BasicTableShape_FirstTableData, c10: carnival___BasicTableShape_TableBottomBorderData, c11: carnival___BasicTableShape_LastTableMergedCellsRowData, c12: carnival___BasicTableShape_CaptionContainer, c13: carnival___BasicTableShape_CaptionTitle, c14: carnival___BasicTableShape_TableNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14])
        }
    }
    // END: carnival___BasicTableShape
    

    // START: carnival___ColumnHeaderTableShape
    
            class carnival___ColumnHeaderTableShape_TableContainer extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_ColumnHeaderTable extends Component {
                constructor(config: {
                    'border-collapse'?: any /* collapse */
                }) {
                    const defaults = {'border-collapse': "collapse"}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_TableData extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_FirstTableData extends Component {
                constructor(config: {
                    'border-left'?: any /* none */, 'border-right': any /* ENUM__ValueSet:::REQUIRED */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'border-left': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_FirstTableRow extends Component {
                constructor(config: {
                    'border-top-color'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top-width'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top-style'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ColumnHeaderTableShape_LastTableRowData extends Component {
                constructor(config: {
                    'border-bottom-color': any /* ENUM__ValueSet:::REQUIRED */, 'border-bottom-width'?: [number, LENGTH], 'border-bottom-style'?: SLICE_ENUM
                }) {
                    const defaults = {'border-bottom-width': [0.1,"rem"], 'border-bottom-style': "solid"}
                    super(defaults, config)
                }
            }
            
    class carnival___ColumnHeaderTableShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___ColumnHeaderTableShape_TableContainer, c1: carnival___ColumnHeaderTableShape_ColumnHeaderTable, c2: carnival___ColumnHeaderTableShape_TableBodyWrapper, c3: carnival___ColumnHeaderTableShape_TableRowWrapper, c4: carnival___ColumnHeaderTableShape_TableData, c5: carnival___ColumnHeaderTableShape_FirstTableData, c6: carnival___ColumnHeaderTableShape_FirstTableRow, c7: carnival___ColumnHeaderTableShape_LastTableRowData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7])
        }
    }
    // END: carnival___ColumnHeaderTableShape
    

    // START: carnival___FakeTitleTableShape
    
            class carnival___FakeTitleTableShape_TableContainer extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableTitle extends Component {
                constructor(config: {
                    'color': any /* ENUM__ValueSet:::REQUIRED */, 'padding': any /* ENUM__ValueSet:::REQUIRED */, 'text-align'?: any /* center */, 'page-break-after'?: any /* avoid */
                }) {
                    const defaults = {'text-align': "center", 'page-break-after': "avoid"}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_FakeTitleTable extends Component {
                constructor(config: {
                    'border-collapse'?: any /* collapse */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'border-collapse': "collapse", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableHeadWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableHeadCell extends Component {
                constructor(config: {
                    'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableData extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_FirstTableData extends Component {
                constructor(config: {
                    'border-left'?: any /* none */, 'border-right': any /* ENUM__ValueSet:::REQUIRED */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {'border-left': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_LastTableRow extends Component {
                constructor(config: {
                    'border-bottom': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_CaptionContainer extends Component {
                constructor(config: {
                    'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'caption-side'?: any /* ENUM__ValueSet:::OPTIONAL */, 'prince-caption-page'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_CaptionTitle extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___FakeTitleTableShape_TableNumber extends Component {
                constructor(config: {
                    'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___FakeTitleTableShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___FakeTitleTableShape_TableContainer, c1: carnival___FakeTitleTableShape_TableTitle, c2: carnival___FakeTitleTableShape_FakeTitleTable, c3: carnival___FakeTitleTableShape_TableHeadWrapper, c4: carnival___FakeTitleTableShape_TableRowWrapper, c5: carnival___FakeTitleTableShape_TableHeadCell, c6: carnival___FakeTitleTableShape_TableBodyWrapper, c7: carnival___FakeTitleTableShape_TableData, c8: carnival___FakeTitleTableShape_FirstTableData, c9: carnival___FakeTitleTableShape_LastTableRow, c10: carnival___FakeTitleTableShape_CaptionContainer, c11: carnival___FakeTitleTableShape_CaptionTitle, c12: carnival___FakeTitleTableShape_TableNumber) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12])
        }
    }
    // END: carnival___FakeTitleTableShape
    

    // START: carnival___UnnumberedUnstyledTable
    
            class carnival___UnnumberedUnstyledTable_TableContainer extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */, 'display'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'margin-right'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_UnnumberedUnstyledTable extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_TableHeadWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_TableRowWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_TableHeadCell extends Component {
                constructor(config: {
                    'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'font-weight'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_TableBodyWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___UnnumberedUnstyledTable_TableData extends Component {
                constructor(config: {
                    'font-family'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-left'?: any /* ENUM__ValueSet:::OPTIONAL */, 'border-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            
    class carnival___UnnumberedUnstyledTable extends Shape {
        constructor(config: {
            
        }, c0: carnival___UnnumberedUnstyledTable_TableContainer, c1: carnival___UnnumberedUnstyledTable_UnnumberedUnstyledTable, c2: carnival___UnnumberedUnstyledTable_TableHeadWrapper, c3: carnival___UnnumberedUnstyledTable_TableRowWrapper, c4: carnival___UnnumberedUnstyledTable_TableHeadCell, c5: carnival___UnnumberedUnstyledTable_TableBodyWrapper, c6: carnival___UnnumberedUnstyledTable_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6])
        }
    }
    // END: carnival___UnnumberedUnstyledTable
    

    // START: carnival___ExerciseShape
    
            class carnival___ExerciseShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemNumber extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'display': "table-cell", 'font-weight': "bold", 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemDivider extends Component {
                constructor(config: {
                    'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ExerciseImage extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH]
                }) {
                    const defaults = {'max-width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_Nested__List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_ProblemContainerSpecific extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_SolutionWrapper extends Component {
                constructor(config: {
                    
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___ExerciseShape_SolutionTitle extends Component {
                constructor(config: {
                    'font-family': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */
                }) {
                    const defaults = {'font-weight': "bold"}
                    super(defaults, config)
                }
            }
            
    class carnival___ExerciseShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___ExerciseShape_Container, c1: carnival___ExerciseShape_ProblemWrapper, c2: carnival___ExerciseShape_ProblemNumber, c3: carnival___ExerciseShape_ProblemDivider, c4: carnival___ExerciseShape_ProblemContainer, c5: carnival___ExerciseShape_ProblemParagraph, c6: carnival___ExerciseShape_ExerciseImage, c7: carnival___ExerciseShape_List__MarginLeftBottom, c8: carnival___ExerciseShape_Nested__List__MarginLeftBottom, c9: carnival___ExerciseShape_ProblemContainerSpecific, c10: carnival___ExerciseShape_SolutionWrapper, c11: carnival___ExerciseShape_SolutionTitle) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11])
        }
    }
    // END: carnival___ExerciseShape
    

    // START: carnival___EOCAssesmentsShape
    
            class carnival___EOCAssesmentsShape_Container extends Component {
                constructor(config: {
                    'margin-bottom'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-count'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-gap'?: any /* ENUM__ValueSet:::OPTIONAL */, 'column-width'?: any /* ENUM__ValueSet:::OPTIONAL */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_Section__MarginBottom extends Component {
                constructor(config: {
                    'margin-bottom': any /* ENUM__ValueSet:::REQUIRED */
                }) {
                    const defaults = {}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_List__MarginLeftBottomIncreased extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [32,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [24,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_Nested__List__MarginLeftBottom extends Component {
                constructor(config: {
                    'margin-left'?: [number, LENGTH], 'margin-bottom'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-left': [16,"px"], 'margin-bottom': [0.7,"rem"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemWrapper extends Component {
                constructor(config: {
                    'display'?: any /* table */
                }) {
                    const defaults = {'display': "table"}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemNumber extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'color': any /* ENUM__ValueSet:::REQUIRED */, 'font-weight'?: any /* bold */, 'text-decoration'?: any /* none */
                }) {
                    const defaults = {'display': "table-cell", 'font-weight': "bold", 'text-decoration': "none"}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemDivider extends Component {
                constructor(config: {
                    'margin-right'?: [number, LENGTH]
                }) {
                    const defaults = {'margin-right': [8,"px"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemContainer extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemParagraph extends Component {
                constructor(config: {
                    'margin-bottom'?: number
                }) {
                    const defaults = {'margin-bottom': 0}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ExerciseImage extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH]
                }) {
                    const defaults = {'max-width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_ProblemContainerSpecific extends Component {
                constructor(config: {
                    'display'?: any /* table-cell */, 'vertical-align'?: any /* ENUM__ValueSet:::OPTIONAL */, 'padding-top'?: any /* ENUM__ValueSet:::OPTIONAL */, 'width'?: [number, LENGTH]
                }) {
                    const defaults = {'display': "table-cell", 'width': [100,"%"]}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_Table extends Component {
                constructor(config: {
                    'max-width'?: [number, LENGTH], 'table-layout'?: any /* fixed */
                }) {
                    const defaults = {'max-width': [100,"%"], 'table-layout': "fixed"}
                    super(defaults, config)
                }
            }
            

            class carnival___EOCAssesmentsShape_TableData extends Component {
                constructor(config: {
                    'text-align'?: any /* center */, 'padding-top'?: [number, LENGTH], 'padding-bottom'?: [number, LENGTH], 'padding-right'?: [number, LENGTH], 'padding-left'?: [number, LENGTH]
                }) {
                    const defaults = {'text-align': "center", 'padding-top': [0.7,"rem"], 'padding-bottom': [0.7,"rem"], 'padding-right': [4,"px"], 'padding-left': [4,"px"]}
                    super(defaults, config)
                }
            }
            
    class carnival___EOCAssesmentsShape extends Shape {
        constructor(config: {
            
        }, c0: carnival___EOCAssesmentsShape_Container, c1: carnival___EOCAssesmentsShape_Section__MarginBottom, c2: carnival___EOCAssesmentsShape_List__MarginLeftBottomIncreased, c3: carnival___EOCAssesmentsShape_List__MarginLeftBottom, c4: carnival___EOCAssesmentsShape_Nested__List__MarginLeftBottom, c5: carnival___EOCAssesmentsShape_ProblemWrapper, c6: carnival___EOCAssesmentsShape_ProblemNumber, c7: carnival___EOCAssesmentsShape_ProblemDivider, c8: carnival___EOCAssesmentsShape_ProblemContainer, c9: carnival___EOCAssesmentsShape_ProblemParagraph, c10: carnival___EOCAssesmentsShape_ExerciseImage, c11: carnival___EOCAssesmentsShape_ProblemContainerSpecific, c12: carnival___EOCAssesmentsShape_Table, c13: carnival___EOCAssesmentsShape_TableData) {
            const defaults = {}
            super(defaults, config, [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13])
        }
    }
    // END: carnival___EOCAssesmentsShape
    
const typography___sansFont = [null,"IBM Plex Sans","sans-serif"]
const typography___baseFont = "Alegreya"
const typography___serifFont = [null,"Muli","sans-serif"]
const typography___titleFont = "Muli"
const typography___baseFontSize = [12,"px"]
const typography___baseLineHeight = [1.4,"rem"]
const scheme___O1 = "#F37541"
const scheme___R1 = "#C31427"
const scheme___R2 = "#B10069"
const scheme___BR1 = "#B05E36"
const scheme___B1 = "#0DC0DC"
const scheme___B2 = "#0074BC"
const scheme___B3 = "#00819A"
const scheme___B4 = "#027EB5"
const scheme___G1 = "#78B042"
const scheme___G2 = "#1E9575"
const scheme___Grey1 = "#EEEAE0"
const scheme___black = "#000000"
const scheme___white = "#FFFFFF"
const colorMap___anatomyHeaderColor = scheme___B3
const colorMap___chapterOutlineColor = scheme___B2
const colorMap___chapterOutlineMarginTextColor = scheme___white
const colorMap___chapterSplashCaptionColor = scheme___Grey1
const colorMap___chemistryHeaderColor = scheme___B3
const colorMap___chemistryIntroColor = scheme___B3
const colorMap___chemistryTableColor = scheme___B3
const colorMap___equationNumberColor = scheme___R1
const colorMap___everydayLifeColor = scheme___B3
const colorMap___exampleColor = scheme___R1
const colorMap___figureNumberColor = scheme___R1
const colorMap___fontBodyColor = scheme___black
const colorMap___interconnectedColor = scheme___O1
const colorMap___linkColor = scheme___B4
const colorMap___linkToLearningColor = scheme___G1
const colorMap___pagetitleColor = scheme___black
const colorMap___portraitColor = scheme___G2
const colorMap___tocChapterNumberColor = scheme___B2
const colorMap___tocTitleColor = scheme___B2
const colorMap___tocUnitColor = scheme___B2
/* componentlist...length=1 . entries: ["common___BookRoot_BookRoot"] */

    const BookRoot = new common___BookRoot({}, new common___BookRoot_BookRoot({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': typography___baseFontSize,/*prop*/ 'line-height': typography___baseLineHeight,/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'prince-image-resolution': "auto, 200dpi",/*prop*/ 'prince-background-image-resolution': [200,"dpi"]}))
/* componentlist...length=1 . entries: ["carnival___Link_RegularLink"] */

    const Link = new carnival___Link({}, new carnival___Link_RegularLink({/*prop*/ 'color': colorMap___linkColor}))
/* componentlist...length=8 . entries: ["carnival___Figure_FigureContainer","carnival___Figure_CaptionWrapper","carnival___Figure_FigureLabel","carnival___Figure_FigureNum","carnival___Figure_FigureTitle","carnival___Figure_Caption","carnival___Figure_FigureCaptionDivider","carnival___Figure_PicCaption"] */
// was looking for 'FigureContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'CaptionWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'FigureCaptionDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'PicCaption' but did not find it. assuming that all properties of this object have defaults

    const FigureContainer = new carnival___Figure({}, new carnival___Figure_FigureContainer({}), new carnival___Figure_CaptionWrapper({}), new carnival___Figure_FigureLabel({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___figureNumberColor}), new carnival___Figure_FigureNum({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___figureNumberColor}), new carnival___Figure_FigureTitle({/*prop*/ 'font-family': typography___titleFont}), new carnival___Figure_Caption({/*prop*/ 'font-family': typography___sansFont}), new carnival___Figure_FigureCaptionDivider({}), new carnival___Figure_PicCaption({}))
/* componentlist...length=8 . entries: ["carnival___Preface_PrefaceContainer","carnival___Preface_H1Title","carnival___Preface_H2Title","carnival___Preface_H3Title","carnival___Preface_H4Title","carnival___Preface_H5Title","carnival___Preface_List__MarginLeft","carnival___Preface_Nested__List__MarginLeft"] */
// was looking for 'PrefaceContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeft' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Nested__List__MarginLeft' but did not find it. assuming that all properties of this object have defaults

    const Preface = new carnival___Preface({}, new carnival___Preface_PrefaceContainer({}), new carnival___Preface_H1Title({/*prop*/ 'color': colorMap___pagetitleColor,/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'text-transform': "uppercase",/*prop*/ 'border-bottom-color': colorMap___pagetitleColor,/*prop*/ 'border-bottom-width': [0.1,"rem"],/*prop*/ 'border-bottom-style': "solid"}), new carnival___Preface_H2Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___Preface_H3Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___Preface_H4Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___Preface_H5Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___Preface_List__MarginLeft({}), new carnival___Preface_Nested__List__MarginLeft({}))
/* componentlist...length=12 . entries: ["carnival___ExerciseShape_Container","carnival___ExerciseShape_ProblemWrapper","carnival___ExerciseShape_ProblemNumber","carnival___ExerciseShape_ProblemDivider","carnival___ExerciseShape_ProblemContainer","carnival___ExerciseShape_ProblemParagraph","carnival___ExerciseShape_ExerciseImage","carnival___ExerciseShape_List__MarginLeftBottom","carnival___ExerciseShape_Nested__List__MarginLeftBottom","carnival___ExerciseShape_ProblemContainerSpecific","carnival___ExerciseShape_SolutionWrapper","carnival___ExerciseShape_SolutionTitle"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemParagraph' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ExerciseImage' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Nested__List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionWrapper' but did not find it. assuming that all properties of this object have defaults

    const ContentExercises = new carnival___ExerciseShape({}, new carnival___ExerciseShape_Container({}), new carnival___ExerciseShape_ProblemWrapper({}), new carnival___ExerciseShape_ProblemNumber({/*prop*/ 'color': colorMap___fontBodyColor}), new carnival___ExerciseShape_ProblemDivider({}), new carnival___ExerciseShape_ProblemContainer({}), new carnival___ExerciseShape_ProblemParagraph({}), new carnival___ExerciseShape_ExerciseImage({}), new carnival___ExerciseShape_List__MarginLeftBottom({}), new carnival___ExerciseShape_Nested__List__MarginLeftBottom({}), new carnival___ExerciseShape_ProblemContainerSpecific({/*prop*/ 'vertical-align': "bottom",/*prop*/ 'padding-top': "half-v-grid(1)"}), new carnival___ExerciseShape_SolutionWrapper({}), new carnival___ExerciseShape_SolutionTitle({/*prop*/ 'font-family': typography___sansFont}))
/* componentlist...length=7 . entries: ["carnival___GenericEOCShape_Container","carnival___GenericEOCShape_H2Title","carnival___GenericEOCShape_H3Title","carnival___GenericEOCShape_H3LinkTitle","carnival___GenericEOCShape_H3ListTitle","carnival___GenericEOCShape_H4Title","carnival___GenericEOCShape_H4LinkTitle"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults

    const GenericEOC = new carnival___GenericEOCShape({}, new carnival___GenericEOCShape_Container({}), new carnival___GenericEOCShape_H2Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___serifFont,/*prop*/ 'column-span': "all",/*prop*/ 'text-transform': "uppercase"}), new carnival___GenericEOCShape_H3Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___serifFont,/*prop*/ 'column-span': "all"}), new carnival___GenericEOCShape_H3LinkTitle({/*prop*/ 'font-family': typography___serifFont}), new carnival___GenericEOCShape_H3ListTitle({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___baseFont}), new carnival___GenericEOCShape_H4Title({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'color': colorMap___chemistryHeaderColor}), new carnival___GenericEOCShape_H4LinkTitle({/*prop*/ 'font-family': typography___serifFont,/*prop*/ 'color': colorMap___chemistryHeaderColor}))
/* componentlist...length=4 . entries: ["carnival___EocKeyTerm_Container","carnival___EocKeyTerm_TermDL","carnival___EocKeyTerm_Term","carnival___EocKeyTerm_TermDD"] */

    const KeyTerm = new carnival___EocKeyTerm({/*group*/ 'Container': []}, new carnival___EocKeyTerm_Container({/*prop*/ 'column-count': 2,/*prop*/ 'column-gap': [2.4,"rem"],/*prop*/ 'column-width': "auto"}), new carnival___EocKeyTerm_TermDL({/*prop*/ 'text-indent': [-16,"px"],/*prop*/ 'padding-left': [16,"px"]}), new carnival___EocKeyTerm_Term({/*prop*/ 'font-weight': "bold",/*prop*/ 'padding-right': [8,"px"],/*prop*/ 'display': "inline"}), new carnival___EocKeyTerm_TermDD({/*prop*/ 'display': "inline",/*prop*/ 'margin-left': [0,"px"]}))
/* componentlist...length=10 . entries: ["carnival___EocKeyEquations_Container","carnival___EocKeyEquations_Section__MarginBottom","carnival___EocKeyEquations_KeyEquations","carnival___EocKeyEquations_KeyEquationsTableContainer","carnival___EocKeyEquations_UnnumberedUnstyledTable","carnival___EocKeyEquations_TableHeadWrapper","carnival___EocKeyEquations_TableRowWrapper","carnival___EocKeyEquations_TableHeadCell","carnival___EocKeyEquations_TableBodyWrapper","carnival___EocKeyEquations_TableData"] */
// was looking for 'Section__MarginBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'KeyEquations' but did not find it. assuming that all properties of this object have defaults
// was looking for 'KeyEquationsTableContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableHeadWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableRowWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableBodyWrapper' but did not find it. assuming that all properties of this object have defaults

    const EocKeyEquations = new carnival___EocKeyEquations({}, new carnival___EocKeyEquations_Container({/*prop*/ 'column-count': 2,/*prop*/ 'column-gap': [2.4,"rem"],/*prop*/ 'column-width': "auto"}), new carnival___EocKeyEquations_Section__MarginBottom({}), new carnival___EocKeyEquations_KeyEquations({}), new carnival___EocKeyEquations_KeyEquationsTableContainer({}), new carnival___EocKeyEquations_UnnumberedUnstyledTable({/*prop*/ 'margin-bottom': 0}), new carnival___EocKeyEquations_TableHeadWrapper({}), new carnival___EocKeyEquations_TableRowWrapper({}), new carnival___EocKeyEquations_TableHeadCell({/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]]}), new carnival___EocKeyEquations_TableBodyWrapper({}), new carnival___EocKeyEquations_TableData({/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]]}))
/* componentlist...length=3 . entries: ["carnival___EocSummary_Container","carnival___EocSummary_List__MarginLeft","carnival___EocSummary_Nested__List__MarginLeft"] */
// was looking for 'List__MarginLeft' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Nested__List__MarginLeft' but did not find it. assuming that all properties of this object have defaults

    const EocSummary = new carnival___EocSummary({}, new carnival___EocSummary_Container({/*prop*/ 'column-count': 2,/*prop*/ 'column-gap': [2.4,"rem"],/*prop*/ 'column-width': "auto"}), new carnival___EocSummary_List__MarginLeft({}), new carnival___EocSummary_Nested__List__MarginLeft({}))
/* componentlist...length=14 . entries: ["carnival___EOCAssesmentsShape_Container","carnival___EOCAssesmentsShape_Section__MarginBottom","carnival___EOCAssesmentsShape_List__MarginLeftBottomIncreased","carnival___EOCAssesmentsShape_List__MarginLeftBottom","carnival___EOCAssesmentsShape_Nested__List__MarginLeftBottom","carnival___EOCAssesmentsShape_ProblemWrapper","carnival___EOCAssesmentsShape_ProblemNumber","carnival___EOCAssesmentsShape_ProblemDivider","carnival___EOCAssesmentsShape_ProblemContainer","carnival___EOCAssesmentsShape_ProblemParagraph","carnival___EOCAssesmentsShape_ExerciseImage","carnival___EOCAssesmentsShape_ProblemContainerSpecific","carnival___EOCAssesmentsShape_Table","carnival___EOCAssesmentsShape_TableData"] */
// was looking for 'Section__MarginBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottomIncreased' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Nested__List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemParagraph' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ExerciseImage' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ProblemContainerSpecific' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Table' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableData' but did not find it. assuming that all properties of this object have defaults

    const Exercises = new carnival___EOCAssesmentsShape({}, new carnival___EOCAssesmentsShape_Container({/*prop*/ 'column-count': 2,/*prop*/ 'column-gap': [2.4,"rem"],/*prop*/ 'column-width': "auto"}), new carnival___EOCAssesmentsShape_Section__MarginBottom({}), new carnival___EOCAssesmentsShape_List__MarginLeftBottomIncreased({}), new carnival___EOCAssesmentsShape_List__MarginLeftBottom({}), new carnival___EOCAssesmentsShape_Nested__List__MarginLeftBottom({}), new carnival___EOCAssesmentsShape_ProblemWrapper({}), new carnival___EOCAssesmentsShape_ProblemNumber({/*prop*/ 'color': colorMap___fontBodyColor}), new carnival___EOCAssesmentsShape_ProblemDivider({}), new carnival___EOCAssesmentsShape_ProblemContainer({}), new carnival___EOCAssesmentsShape_ProblemParagraph({}), new carnival___EOCAssesmentsShape_ExerciseImage({}), new carnival___EOCAssesmentsShape_ProblemContainerSpecific({}), new carnival___EOCAssesmentsShape_Table({}), new carnival___EOCAssesmentsShape_TableData({}))
/* componentlist...length=4 . entries: ["carnival___LearningObjectiveAbstractShape_AbstractTitle","carnival___LearningObjectiveAbstractShape_List","carnival___LearningObjectiveAbstractShape_ListItem","carnival___LearningObjectiveAbstractShape_ListDot"] */
// was looking for 'List' but did not find it. assuming that all properties of this object have defaults

    const LearningObjectiveAbstract = new carnival___LearningObjectiveAbstractShape({}, new carnival___LearningObjectiveAbstractShape_AbstractTitle({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___sansFont}), new carnival___LearningObjectiveAbstractShape_List({}), new carnival___LearningObjectiveAbstractShape_ListItem({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___serifFont}), new carnival___LearningObjectiveAbstractShape_ListDot({/*prop*/ 'color': colorMap___chemistryHeaderColor}))
/* componentlist...length=9 . entries: ["carnival___AppendixShape_H1Title","carnival___AppendixShape_TitleDivider","carnival___AppendixShape_TitleText","carnival___AppendixShape_TitleNumber","carnival___AppendixShape_H2Title","carnival___AppendixShape_H3Title","carnival___AppendixShape_AppendixGlossary","carnival___AppendixShape_GlossarySection","carnival___AppendixShape_List__MarginLeft"] */
// was looking for 'TitleDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'AppendixGlossary' but did not find it. assuming that all properties of this object have defaults
// was looking for 'GlossarySection' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeft' but did not find it. assuming that all properties of this object have defaults

    const Appendix = new carnival___AppendixShape({}, new carnival___AppendixShape_H1Title({/*prop*/ 'color': colorMap___tocTitleColor,/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'text-transform': "none"}), new carnival___AppendixShape_TitleDivider({}), new carnival___AppendixShape_TitleText({/*prop*/ 'color': colorMap___tocTitleColor,/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-size': [2.48832,"rem"],/*prop*/ 'line-height': [3,"rem"]}), new carnival___AppendixShape_TitleNumber({/*prop*/ 'padding-bottom': [0.7,"rem"],/*prop*/ 'margin-bottom': [1.4,"rem"],/*prop*/ 'color': colorMap___pagetitleColor,/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [3.58318,"rem"],/*prop*/ 'line-height': [3,"rem"],/*prop*/ 'border-bottom-color': colorMap___pagetitleColor}), new carnival___AppendixShape_H2Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___AppendixShape_H3Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___AppendixShape_AppendixGlossary({}), new carnival___AppendixShape_GlossarySection({}), new carnival___AppendixShape_List__MarginLeft({}))
/* componentlist...length=7 . entries: ["carnival___IndexShape_Container","carnival___IndexShape_H1Title","carnival___IndexShape_Group","carnival___IndexShape_GroupLabel","carnival___IndexShape_TermContainer","carnival___IndexShape_TermText","carnival___IndexShape_PageNumber"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults

    const Index = new carnival___IndexShape({}, new carnival___IndexShape_Container({}), new carnival___IndexShape_H1Title({/*prop*/ 'color': colorMap___pagetitleColor,/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'text-transform': "uppercase",/*prop*/ 'border-bottom-color': colorMap___pagetitleColor,/*prop*/ 'border-bottom-width': [0.1,"rem"],/*prop*/ 'border-bottom-style': "solid"}), new carnival___IndexShape_Group({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___baseFont}), new carnival___IndexShape_GroupLabel({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___IndexShape_TermContainer({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___baseFont}), new carnival___IndexShape_TermText({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'font-family': typography___baseFont}), new carnival___IndexShape_PageNumber({/*prop*/ 'content': "target-counter(attr(href, url), page)"}))
/* componentlist...length=14 . entries: ["carnival___AnswerKeyShape_ContainerWrapper","carnival___AnswerKeyShape_H1Title","carnival___AnswerKeyShape_H3Title","carnival___AnswerKeyShape_CompositePage","carnival___AnswerKeyShape_H2Title","carnival___AnswerKeyShape_SolutionArea","carnival___AnswerKeyShape_SolutionWrapper","carnival___AnswerKeyShape_Number","carnival___AnswerKeyShape_SolutionDivider","carnival___AnswerKeyShape_SolutionContainer","carnival___AnswerKeyShape_SolutionParagraph","carnival___AnswerKeyShape_Image","carnival___AnswerKeyShape_AnswerKey__List__MarginBottomLeft","carnival___AnswerKeyShape_SolutionContainerSpecific"] */
// was looking for 'ContainerWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'CompositePage' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionArea' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionContainer' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SolutionParagraph' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Image' but did not find it. assuming that all properties of this object have defaults
// was looking for 'AnswerKey__List__MarginBottomLeft' but did not find it. assuming that all properties of this object have defaults

    const AnswerKey = new carnival___AnswerKeyShape({}, new carnival___AnswerKeyShape_ContainerWrapper({}), new carnival___AnswerKeyShape_H1Title({/*prop*/ 'color': colorMap___pagetitleColor,/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'text-transform': "uppercase",/*prop*/ 'border-bottom-color': colorMap___pagetitleColor,/*prop*/ 'border-bottom-width': [0.1,"rem"],/*prop*/ 'border-bottom-style': "solid"}), new carnival___AnswerKeyShape_H3Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___serifFont}), new carnival___AnswerKeyShape_CompositePage({}), new carnival___AnswerKeyShape_H2Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___AnswerKeyShape_SolutionArea({}), new carnival___AnswerKeyShape_SolutionWrapper({}), new carnival___AnswerKeyShape_Number({/*prop*/ 'color': colorMap___fontBodyColor}), new carnival___AnswerKeyShape_SolutionDivider({}), new carnival___AnswerKeyShape_SolutionContainer({}), new carnival___AnswerKeyShape_SolutionParagraph({}), new carnival___AnswerKeyShape_Image({}), new carnival___AnswerKeyShape_AnswerKey__List__MarginBottomLeft({}), new carnival___AnswerKeyShape_SolutionContainerSpecific({/*prop*/ 'vertical-align': "bottom",/*prop*/ 'padding-top': [0.7,"rem"]}))
/* componentlist...length=23 . entries: ["carnival___FullWidthChapterIntroShape_SplashFigureWrapper","carnival___FullWidthChapterIntroShape_SplashFigure","carnival___FullWidthChapterIntroShape_SplashFigureBg","carnival___FullWidthChapterIntroShape_SplashImgMedia","carnival___FullWidthChapterIntroShape_SplashImg","carnival___FullWidthChapterIntroShape_SplashCaption","carnival___FullWidthChapterIntroShape_SplashCaptionBg","carnival___FullWidthChapterIntroShape_FigureNum","carnival___FullWidthChapterIntroShape_FigureLabel","carnival___FullWidthChapterIntroShape_FigureTitle","carnival___FullWidthChapterIntroShape_Caption","carnival___FullWidthChapterIntroShape_IntroBodyWrapper","carnival___FullWidthChapterIntroShape_OutlineFullWidth","carnival___FullWidthChapterIntroShape_OutlineTitle","carnival___FullWidthChapterIntroShape_OutlineTitleBottomBorder","carnival___FullWidthChapterIntroShape_ChapterOutlineObjective","carnival___FullWidthChapterIntroShape_OutlineObjectiveLink","carnival___FullWidthChapterIntroShape_ChapterOutlineObjectiveText","carnival___FullWidthChapterIntroShape_OutlineObjectiveLearning","carnival___FullWidthChapterIntroShape_OutlineAbstract","carnival___FullWidthChapterIntroShape_OutlineList","carnival___FullWidthChapterIntroShape_IntroContentWrapper","carnival___FullWidthChapterIntroShape_IntroContentHeader"] */
// was looking for 'SplashFigureWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SplashFigure' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SplashImgMedia' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SplashImg' but did not find it. assuming that all properties of this object have defaults
// was looking for 'SplashCaption' but did not find it. assuming that all properties of this object have defaults
// was looking for 'IntroBodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ChapterOutlineObjective' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ChapterOutlineObjectiveText' but did not find it. assuming that all properties of this object have defaults
// was looking for 'OutlineObjectiveLearning' but did not find it. assuming that all properties of this object have defaults
// was looking for 'OutlineList' but did not find it. assuming that all properties of this object have defaults
// was looking for 'IntroContentWrapper' but did not find it. assuming that all properties of this object have defaults

    const FullWidthChapterIntro = new carnival___FullWidthChapterIntroShape({}, new carnival___FullWidthChapterIntroShape_SplashFigureWrapper({}), new carnival___FullWidthChapterIntroShape_SplashFigure({}), new carnival___FullWidthChapterIntroShape_SplashFigureBg({/*prop*/ 'background-color': colorMap___chemistryIntroColor,/*prop*/ 'width': [8.65,"in"],/*prop*/ 'margin-left': [-1.15,"in"]}), new carnival___FullWidthChapterIntroShape_SplashImgMedia({}), new carnival___FullWidthChapterIntroShape_SplashImg({}), new carnival___FullWidthChapterIntroShape_SplashCaption({}), new carnival___FullWidthChapterIntroShape_SplashCaptionBg({/*prop*/ 'background-color': colorMap___chapterSplashCaptionColor,/*prop*/ 'width': [8.8,"in"],/*prop*/ 'margin-left': [-1.15,"in"]}), new carnival___FullWidthChapterIntroShape_FigureNum({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'color': colorMap___figureNumberColor}), new carnival___FullWidthChapterIntroShape_FigureLabel({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'color': colorMap___figureNumberColor}), new carnival___FullWidthChapterIntroShape_FigureTitle({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'font-size': [1.2,"rem"]}), new carnival___FullWidthChapterIntroShape_Caption({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"]}), new carnival___FullWidthChapterIntroShape_IntroBodyWrapper({}), new carnival___FullWidthChapterIntroShape_OutlineFullWidth({/*prop*/ 'border-bottom-color': colorMap___chemistryIntroColor,/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-weight': 500,/*prop*/ 'font-size': [1,"rem"],/*prop*/ 'line-height': [1.5,"rem"],/*prop*/ 'width': [6.5,"in"],/*prop*/ 'margin': [null,0,0,[1.5,"rem"],0],/*prop*/ 'border-bottom-width': [0.2,"rem"],/*prop*/ 'border-bottom-style': "solid",/*prop*/ 'box-decoration-break': "slice"}), new carnival___FullWidthChapterIntroShape_OutlineTitle({/*prop*/ 'color': colorMap___chemistryIntroColor,/*prop*/ 'margin': [null,0,0,[1.5,"rem"],0],/*prop*/ 'font-family': typography___serifFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.2,"rem"],/*prop*/ 'font-weight': "bold",/*prop*/ 'position': "relative",/*prop*/ 'display': "flex",/*prop*/ 'flex-direction': "row"}), new carnival___FullWidthChapterIntroShape_OutlineTitleBottomBorder({/*prop*/ 'border-bottom-color': colorMap___chemistryIntroColor}), new carnival___FullWidthChapterIntroShape_ChapterOutlineObjective({}), new carnival___FullWidthChapterIntroShape_OutlineObjectiveLink({/*prop*/ 'color': colorMap___linkColor,/*prop*/ 'font-family': typography___serifFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'font-size': [1,"rem"],/*prop*/ 'margin-bottom': [0.5,"rem"],/*prop*/ 'display': "inline-block"}), new carnival___FullWidthChapterIntroShape_ChapterOutlineObjectiveText({}), new carnival___FullWidthChapterIntroShape_OutlineObjectiveLearning({}), new carnival___FullWidthChapterIntroShape_OutlineAbstract({/*prop*/ 'font-family': typography___baseFont}), new carnival___FullWidthChapterIntroShape_OutlineList({}), new carnival___FullWidthChapterIntroShape_IntroContentWrapper({}), new carnival___FullWidthChapterIntroShape_IntroContentHeader({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': typography___baseFontSize,/*prop*/ 'text-transform': "uppercase",/*prop*/ 'margin': [null,0,[0.5,"rem"],0,0],/*prop*/ 'font-weight': 700}))
/* componentlist...length=4 . entries: ["carnival___Chapter_Container","carnival___Chapter_Title","carnival___Chapter_TitleText","carnival___Chapter_TitleNumber"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Title' but did not find it. assuming that all properties of this object have defaults

    const Chapter = new carnival___Chapter({}, new carnival___Chapter_Container({}), new carnival___Chapter_Title({}), new carnival___Chapter_TitleText({/*prop*/ 'font-family': typography___sansFont}), new carnival___Chapter_TitleNumber({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}))
/* componentlist...length=36 . entries: ["carnival___NoUnitToc_Container","carnival___NoUnitToc_TopLevelList","carnival___NoUnitToc_TocChapter","carnival___NoUnitToc_TocChapterNumber","carnival___NoUnitToc_TocChapterLink","carnival___NoUnitToc_TocChapterLinkPage","carnival___NoUnitToc_TocChapterList","carnival___NoUnitToc_TocChapterPage","carnival___NoUnitToc_TocChapterPageLink","carnival___NoUnitToc_TocChapterPageLinkPage","carnival___NoUnitToc_TocChapterCompositePage","carnival___NoUnitToc_TocChapterCompositePageLink","carnival___NoUnitToc_TocChapterCompositePageLinkPage","carnival___NoUnitToc_TocEocCompositeChapter","carnival___NoUnitToc_TocEocCompositeChapterList","carnival___NoUnitToc_TocEocCompositeChapterLink","carnival___NoUnitToc_TocEocCompositeChapterLinkPage","carnival___NoUnitToc_TocPreface","carnival___NoUnitToc_TocPrefaceLink","carnival___NoUnitToc_TocPrefaceLinkPage","carnival___NoUnitToc_TocAppendix","carnival___NoUnitToc_TocAppendixNumber","carnival___NoUnitToc_TocAppendixDivider","carnival___NoUnitToc_TocAppendixLink","carnival___NoUnitToc_TocAppendixLinkPage","carnival___NoUnitToc_TocReferences","carnival___NoUnitToc_TocReferencesLink","carnival___NoUnitToc_TocReferencesLinkPage","carnival___NoUnitToc_TocIndex","carnival___NoUnitToc_TocIndexLink","carnival___NoUnitToc_TocIndexLinkPage","carnival___NoUnitToc_TocCompositeChapter","carnival___NoUnitToc_TocCompositeChapterList","carnival___NoUnitToc_TocCompositeChapterLink","carnival___NoUnitToc_TocCompositeChapterLinkPage","carnival___NoUnitToc_TocTitleWord"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TopLevelList' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocChapter' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocChapterList' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocChapterPage' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocChapterCompositePage' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocEocCompositeChapter' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocEocCompositeChapterList' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocPreface' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocAppendix' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocAppendixDivider' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocReferences' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocIndex' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocCompositeChapter' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TocCompositeChapterList' but did not find it. assuming that all properties of this object have defaults

    const TOC = new carnival___NoUnitToc({}, new carnival___NoUnitToc_Container({}), new carnival___NoUnitToc_TopLevelList({}), new carnival___NoUnitToc_TocChapter({}), new carnival___NoUnitToc_TocChapterNumber({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___NoUnitToc_TocChapterLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.728,"rem"],/*prop*/ 'line-height': [1.5,"rem"],/*prop*/ 'font-weight': "bolder",/*prop*/ 'color': colorMap___fontBodyColor}), new carnival___NoUnitToc_TocChapterLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"],/*prop*/ 'font-weight': "normal",/*prop*/ 'color': colorMap___fontBodyColor}), new carnival___NoUnitToc_TocChapterList({}), new carnival___NoUnitToc_TocChapterPage({}), new carnival___NoUnitToc_TocChapterPageLink({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocChapterPageLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocChapterCompositePage({}), new carnival___NoUnitToc_TocChapterCompositePageLink({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocChapterCompositePageLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocEocCompositeChapter({}), new carnival___NoUnitToc_TocEocCompositeChapterList({}), new carnival___NoUnitToc_TocEocCompositeChapterLink({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocEocCompositeChapterLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocPreface({}), new carnival___NoUnitToc_TocPrefaceLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocPrefaceLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocAppendix({}), new carnival___NoUnitToc_TocAppendixNumber({/*prop*/ 'font-family': typography___titleFont}), new carnival___NoUnitToc_TocAppendixDivider({}), new carnival___NoUnitToc_TocAppendixLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocAppendixLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocReferences({}), new carnival___NoUnitToc_TocReferencesLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocReferencesLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocIndex({}), new carnival___NoUnitToc_TocIndexLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocIndexLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocCompositeChapter({}), new carnival___NoUnitToc_TocCompositeChapterList({}), new carnival___NoUnitToc_TocCompositeChapterLink({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocCompositeChapterLinkPage({/*prop*/ 'content': "target-counter(attr(href), page)",/*prop*/ 'display': "inline-block",/*prop*/ 'margin-left': [3,"rem"],/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-size': [1.2,"rem"],/*prop*/ 'line-height': [1.5,"rem"]}), new carnival___NoUnitToc_TocTitleWord({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'border-bottom-color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___sansFont}))
/* componentlist...length=8 . entries: ["carnival___ModuleShape_ContainerWrapper","carnival___ModuleShape_H2Title","carnival___ModuleShape_List__MarginLeft","carnival___ModuleShape_H3Title","carnival___ModuleShape_H4Title","carnival___ModuleShape_ParagraphTitle","carnival___ModuleShape_Nested__List__MarginLeft","carnival___ModuleShape_TitleOverFigure"] */
// was looking for 'ContainerWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeft' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ParagraphTitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Nested__List__MarginLeft' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleOverFigure' but did not find it. assuming that all properties of this object have defaults

    const Module = new carnival___ModuleShape({}, new carnival___ModuleShape_ContainerWrapper({}), new carnival___ModuleShape_H2Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'border-bottom-color': colorMap___fontBodyColor}), new carnival___ModuleShape_List__MarginLeft({}), new carnival___ModuleShape_H3Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___ModuleShape_H4Title({/*prop*/ 'color': colorMap___chemistryHeaderColor,/*prop*/ 'font-family': typography___titleFont}), new carnival___ModuleShape_ParagraphTitle({}), new carnival___ModuleShape_Nested__List__MarginLeft({}), new carnival___ModuleShape_TitleOverFigure({}))
/* componentlist...length=4 . entries: ["carnival___FootnotesShape_Container","carnival___FootnotesShape_FootnoteCall","carnival___FootnotesShape_FootnoteMarker","carnival___FootnotesShape_FootnoteNumber"] */
// was looking for 'FootnoteNumber' but did not find it. assuming that all properties of this object have defaults

    const Footnotes = new carnival___FootnotesShape({}, new carnival___FootnotesShape_Container({/*prop*/ 'color': colorMap___fontBodyColor,/*prop*/ 'line-height': [1.5,"rem"],/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'font-size': [0.83333,"rem"]}), new carnival___FootnotesShape_FootnoteCall({/*prop*/ 'content': "none"}), new carnival___FootnotesShape_FootnoteMarker({/*prop*/ 'content': "none"}), new carnival___FootnotesShape_FootnoteNumber({}))
/* componentlist...length=1 . entries: ["carnival___FootnotesCallShape_DefaultFootnoteCall"] */

    const FootnoteCall = new carnival___FootnotesCallShape({}, new carnival___FootnotesCallShape_DefaultFootnoteCall({/*prop*/ 'font-family': typography___baseFont}))
/* componentlist...length=1 . entries: ["carnival___Term_Term"] */
// was looking for 'Term' but did not find it. assuming that all properties of this object have defaults

    const Term = new carnival___Term({}, new carnival___Term_Term({}))
/* componentlist...length=15 . entries: ["carnival___BasicTableShape_TableContainer","carnival___BasicTableShape_Table","carnival___BasicTableShape_TableHeadWrapper","carnival___BasicTableShape_TableRowWrapper","carnival___BasicTableShape_TableHeadCell","carnival___BasicTableShape_TableBodyWrapper","carnival___BasicTableShape_TableData","carnival___BasicTableShape_TableDataList","carnival___BasicTableShape_TableDataUnstyledList","carnival___BasicTableShape_FirstTableData","carnival___BasicTableShape_TableBottomBorderData","carnival___BasicTableShape_LastTableMergedCellsRowData","carnival___BasicTableShape_CaptionContainer","carnival___BasicTableShape_CaptionTitle","carnival___BasicTableShape_TableNumber"] */
// was looking for 'Table' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableHeadWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableRowWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableBodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableDataUnstyledList' but did not find it. assuming that all properties of this object have defaults
// was looking for 'LastTableMergedCellsRowData' but did not find it. assuming that all properties of this object have defaults
// was looking for 'CaptionContainer' but did not find it. assuming that all properties of this object have defaults

    const BasicTable = new carnival___BasicTableShape({}, new carnival___BasicTableShape_TableContainer({/*prop*/ 'margin-bottom': [1.4,"rem"]}), new carnival___BasicTableShape_Table({}), new carnival___BasicTableShape_TableHeadWrapper({}), new carnival___BasicTableShape_TableRowWrapper({}), new carnival___BasicTableShape_TableHeadCell({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-weight': 700,/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]],/*prop*/ 'border-bottom': [null,[0.1,"rem"],"solid","black"]}), new carnival___BasicTableShape_TableBodyWrapper({}), new carnival___BasicTableShape_TableData({/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'border-left': [null,[0.025,"rem"],"solid","black"],/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]]}), new carnival___BasicTableShape_TableDataList({/*prop*/ 'margin-left': [0.7,"rem"]}), new carnival___BasicTableShape_TableDataUnstyledList({}), new carnival___BasicTableShape_FirstTableData({/*prop*/ 'border-right': [null,[0.025,"rem"],"solid","black"]}), new carnival___BasicTableShape_TableBottomBorderData({/*prop*/ 'border-bottom': [null,[0.025,"rem"],"solid","black"]}), new carnival___BasicTableShape_LastTableMergedCellsRowData({}), new carnival___BasicTableShape_CaptionContainer({}), new carnival___BasicTableShape_CaptionTitle({/*prop*/ 'font-weight': "bold"}), new carnival___BasicTableShape_TableNumber({/*prop*/ 'font-weight': "bold"}))
/* componentlist...length=13 . entries: ["carnival___FakeTitleTableShape_TableContainer","carnival___FakeTitleTableShape_TableTitle","carnival___FakeTitleTableShape_FakeTitleTable","carnival___FakeTitleTableShape_TableHeadWrapper","carnival___FakeTitleTableShape_TableRowWrapper","carnival___FakeTitleTableShape_TableHeadCell","carnival___FakeTitleTableShape_TableBodyWrapper","carnival___FakeTitleTableShape_TableData","carnival___FakeTitleTableShape_FirstTableData","carnival___FakeTitleTableShape_LastTableRow","carnival___FakeTitleTableShape_CaptionContainer","carnival___FakeTitleTableShape_CaptionTitle","carnival___FakeTitleTableShape_TableNumber"] */
// was looking for 'FakeTitleTable' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableHeadWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableRowWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TableBodyWrapper' but did not find it. assuming that all properties of this object have defaults

    const FakeTitleTable = new carnival___FakeTitleTableShape({}, new carnival___FakeTitleTableShape_TableContainer({/*prop*/ 'margin-bottom': [1.4,"rem"],/*prop*/ 'display': "table",/*prop*/ 'margin-left': "auto",/*prop*/ 'margin-right': "auto"}), new carnival___FakeTitleTableShape_TableTitle({/*prop*/ 'color': colorMap___chemistryTableColor,/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]]}), new carnival___FakeTitleTableShape_FakeTitleTable({}), new carnival___FakeTitleTableShape_TableHeadWrapper({}), new carnival___FakeTitleTableShape_TableRowWrapper({}), new carnival___FakeTitleTableShape_TableHeadCell({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'font-weight': 700,/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]],/*prop*/ 'border-bottom': [null,[0.1,"rem"],"solid","black"],/*prop*/ 'border-top': [null,[0.1,"rem"],"solid","black"]}), new carnival___FakeTitleTableShape_TableBodyWrapper({}), new carnival___FakeTitleTableShape_TableData({/*prop*/ 'border-bottom': [null,[0.025,"rem"],"solid","black"],/*prop*/ 'font-family': typography___baseFont,/*prop*/ 'border-left': [null,[0.025,"rem"],"solid","black"],/*prop*/ 'padding': [null,[0.7,"rem"],[0.7,"rem"]]}), new carnival___FakeTitleTableShape_FirstTableData({/*prop*/ 'border-right': [null,[0.025,"rem"],"solid","black"]}), new carnival___FakeTitleTableShape_LastTableRow({/*prop*/ 'border-bottom': [null,[0.1,"rem"],"solid","black"]}), new carnival___FakeTitleTableShape_CaptionContainer({/*prop*/ 'display': "table-caption",/*prop*/ 'caption-side': "bottom",/*prop*/ 'prince-caption-page': "all"}), new carnival___FakeTitleTableShape_CaptionTitle({/*prop*/ 'font-weight': "bold"}), new carnival___FakeTitleTableShape_TableNumber({/*prop*/ 'font-weight': "bold"}))
/* componentlist...length=5 . entries: ["carnival___BoxedNoteShape_Container","carnival___BoxedNoteShape_Title","carnival___BoxedNoteShape_BodyWrapper","carnival___BoxedNoteShape_Subtitle","carnival___BoxedNoteShape_List__MarginLeftBottom"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'BodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Subtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults

    const EverydayLifeNote = new carnival___BoxedNoteShape({/*group*/ 'group-border-color': colorMap___everydayLifeColor}, new carnival___BoxedNoteShape_Container({}), new carnival___BoxedNoteShape_Title({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___everydayLifeColor}), new carnival___BoxedNoteShape_BodyWrapper({}), new carnival___BoxedNoteShape_Subtitle({}), new carnival___BoxedNoteShape_List__MarginLeftBottom({}))
/* componentlist...length=5 . entries: ["carnival___BoxedNoteShape_Container","carnival___BoxedNoteShape_Title","carnival___BoxedNoteShape_BodyWrapper","carnival___BoxedNoteShape_Subtitle","carnival___BoxedNoteShape_List__MarginLeftBottom"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'BodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Subtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults

    const PortraitNote = new carnival___BoxedNoteShape({/*group*/ 'group-border-color': colorMap___portraitColor}, new carnival___BoxedNoteShape_Container({}), new carnival___BoxedNoteShape_Title({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___portraitColor}), new carnival___BoxedNoteShape_BodyWrapper({}), new carnival___BoxedNoteShape_Subtitle({}), new carnival___BoxedNoteShape_List__MarginLeftBottom({}))
/* componentlist...length=14 . entries: ["carnival___IconNoteShape_Title","carnival___IconNoteShape_TitleIcon","carnival___IconNoteShape_TitleNumber","carnival___IconNoteShape_TitleLabel","carnival___IconNoteShape_TitleText","carnival___IconNoteShape_Container","carnival___IconNoteShape_List__MarginLeftBottom","carnival___IconNoteShape_BodyWrapper","carnival___IconNoteShape_Subtitle","carnival___IconNoteShape_DivSubtitle","carnival___IconNoteShape_FirstParagraphTitle","carnival___IconNoteShape_ParagraphSubtitle","carnival___IconNoteShape_Equation","carnival___IconNoteShape_AnswerTitle"] */
// was looking for 'TitleNumber' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleLabel' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleText' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'BodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Subtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'DivSubtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'FirstParagraphTitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'ParagraphSubtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Equation' but did not find it. assuming that all properties of this object have defaults
// was looking for 'AnswerTitle' but did not find it. assuming that all properties of this object have defaults

    const InterconnectNote = new carnival___IconNoteShape({/*group*/ 'group-border-color': colorMap___interconnectedColor}, new carnival___IconNoteShape_Title({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___interconnectedColor}), new carnival___IconNoteShape_TitleIcon({/*prop*/ 'background': [null,"url(toDataUri(\"svg+xml\", \"designs/carnival/resources/carnival-interconnect.svg\"))","no-repeat","top","left"]}), new carnival___IconNoteShape_TitleNumber({}), new carnival___IconNoteShape_TitleLabel({}), new carnival___IconNoteShape_TitleText({}), new carnival___IconNoteShape_Container({}), new carnival___IconNoteShape_List__MarginLeftBottom({}), new carnival___IconNoteShape_BodyWrapper({}), new carnival___IconNoteShape_Subtitle({}), new carnival___IconNoteShape_DivSubtitle({}), new carnival___IconNoteShape_FirstParagraphTitle({}), new carnival___IconNoteShape_ParagraphSubtitle({}), new carnival___IconNoteShape_Equation({}), new carnival___IconNoteShape_AnswerTitle({}))
/* componentlist...length=14 . entries: ["carnival___IconNoteShape_Title","carnival___IconNoteShape_TitleIcon","carnival___IconNoteShape_TitleNumber","carnival___IconNoteShape_TitleLabel","carnival___IconNoteShape_TitleText","carnival___IconNoteShape_Container","carnival___IconNoteShape_List__MarginLeftBottom","carnival___IconNoteShape_BodyWrapper","carnival___IconNoteShape_Subtitle","carnival___IconNoteShape_DivSubtitle","carnival___IconNoteShape_FirstParagraphTitle","carnival___IconNoteShape_ParagraphSubtitle","carnival___IconNoteShape_Equation","carnival___IconNoteShape_AnswerTitle"] */
// was looking for 'TitleNumber' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleLabel' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleText' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'BodyWrapper' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Subtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'DivSubtitle' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Equation' but did not find it. assuming that all properties of this object have defaults

    const Example = new carnival___IconNoteShape({/*group*/ 'group-border-color': colorMap___exampleColor}, new carnival___IconNoteShape_Title({/*prop*/ 'font-family': typography___titleFont,/*prop*/ 'color': colorMap___exampleColor}), new carnival___IconNoteShape_TitleIcon({/*prop*/ 'background': [null,"url(toDataUri(\"svg+xml\", \"designs/carnival/resources/carnival-example.svg\"))","no-repeat","top","left"]}), new carnival___IconNoteShape_TitleNumber({}), new carnival___IconNoteShape_TitleLabel({}), new carnival___IconNoteShape_TitleText({}), new carnival___IconNoteShape_Container({}), new carnival___IconNoteShape_List__MarginLeftBottom({}), new carnival___IconNoteShape_BodyWrapper({}), new carnival___IconNoteShape_Subtitle({}), new carnival___IconNoteShape_DivSubtitle({}), new carnival___IconNoteShape_FirstParagraphTitle({/*prop*/ 'margin-bottom': [0.2,"rem"]}), new carnival___IconNoteShape_ParagraphSubtitle({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'margin-bottom': [0.2,"rem"]}), new carnival___IconNoteShape_Equation({}), new carnival___IconNoteShape_AnswerTitle({/*prop*/ 'font-family': typography___sansFont,/*prop*/ 'font-weight': "bold",/*prop*/ 'margin-bottom': [0.2,"rem"]}))
/* componentlist...length=8 . entries: ["carnival___IconCondensedShape_Container","carnival___IconCondensedShape_Body","carnival___IconCondensedShape_Paragraph","carnival___IconCondensedShape_List__MarginLeftBottom","carnival___IconCondensedShape_Title","carnival___IconCondensedShape_TitleText","carnival___IconCondensedShape_Icon","carnival___IconCondensedShape_NoteNumber"] */
// was looking for 'Container' but did not find it. assuming that all properties of this object have defaults
// was looking for 'Paragraph' but did not find it. assuming that all properties of this object have defaults
// was looking for 'List__MarginLeftBottom' but did not find it. assuming that all properties of this object have defaults
// was looking for 'TitleText' but did not find it. assuming that all properties of this object have defaults
// was looking for 'NoteNumber' but did not find it. assuming that all properties of this object have defaults

    const LinkToLearningNote = new carnival___IconCondensedShape({}, new carnival___IconCondensedShape_Container({}), new carnival___IconCondensedShape_Body({/*prop*/ 'border-bottom-color': colorMap___linkToLearningColor}), new carnival___IconCondensedShape_Paragraph({}), new carnival___IconCondensedShape_List__MarginLeftBottom({}), new carnival___IconCondensedShape_Title({/*prop*/ 'font-family': typography___titleFont}), new carnival___IconCondensedShape_TitleText({}), new carnival___IconCondensedShape_Icon({/*prop*/ 'background': [null,"url(toDataUri(\"svg+xml\", \"designs/carnival/resources/carnival-linktolearning.svg\"))","no-repeat","top","left"]}), new carnival___IconCondensedShape_NoteNumber({}))
/* componentlist...length=1 . entries: ["carnival___EquationShape_EquationContainer"] */
// was looking for 'EquationContainer' but did not find it. assuming that all properties of this object have defaults

    const Equation = new carnival___EquationShape({}, new carnival___EquationShape_EquationContainer({}))
