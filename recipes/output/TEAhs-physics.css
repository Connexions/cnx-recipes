/*
  Book Page

  A Page is usually a section inside a chapter. It contains:

  - `[data-type='metadata']` The attribution information for this Page
  - `[data-type='document-title']` The title of the Page

  Markup: ./book.page.xhtml-baked.html

  Style guide: book.1-page
*/
/*
  Page Elements

  Everything in here is specific to a Page in a book.
  A Page is usually a section inside a chapter.

  Style guide: page
*/
/*
  Metadata

  This contains attribution information and is sometimes collated to the back of the book.

  Markup:
  <div data-type="page">
    <div data-type="metadata">...</div>
  </div>

  Style guide: page.0-metadata
*/
/*
  Processing Instruction

  These are an artifact of the transforms and will disappear in the future

  Markup:
  <div data-type="page">
    <cnx-pi />
  </div>

  Style guide: page.0-processing
*/
/*
  Term

  A term which is used to make the Book Index. Terms used in a Glossary are defined in the Glossary, not here.

  Markup: ./page.term.xhtml-baked.html

  Style guide: page.term
*/
/*
  Note

  A note or "feature". This is usually separated visually from the rest of the
  content in a book with a border and a separate background color.

  Contains an optional title, and optionally an additional class to help style the note

  Markup: ./page.note.xhtml-baked.html

  Style guide: page.note
*/
/*
  Figure

  A `<figure>` is wrapped in a `<div data-type='figure'>` which contains:
  - optional `[data-type='title']`
  - `figure` element
    - `[data-type='media']` : a wrapper element which may disappear in the future
      - `img[src][alt]` : The image for the Figure

  TODO: Maybe this should use the `<picture>` element instead of the `[data-type='media']` element:
  http://html5rocks.com/en/tutorials/responsive/picture-element/

  # TODO

  - Decide on what the baked markup for a figure with a title and caption should look like.
    - Proposals have mentioned using `<figcaption>` most of the time.
    - Maybe what is in the Raw HTML is _good enough_?

  Markup: ./page.figure.xhtml-baked.html

  Style guide: page.figure
*/
/*
  Paragraph

  A Paragraph of text. Some of the common things it can contain are:

  - `[data-type='term']` : A term that is defined elsewhere (in the glossary)
  - `strong`
  - `em`
  - `[data-type='list']` : an inline list
    - `[data-type='item']` : an item in the list
  - `math` : MathML

  TODO: Move these into a separate "inline" section in the HTML guide

  Markup: ./page.para.xhtml-baked.html

  Style guide: page.para
*/
/*
  Section

  A (sub)section of content which contains a title.

  Markup: ./page.section.xhtml-baked.html

  Style guide: page.section
*/
/*
  Example

  An example which is usually styled to not be part of the flow of normal content
  (similar to a Note).

  Markup: ./page.example.xhtml-baked.html

  Style guide: page.example
*/
/*
  Exercise

  An exercise contains a problem, optional title, and optional solution(s).

  Exercises are usually numbered and contain a link to the solution if it exists.
  Typically, an exercise is collated at the end of chapter.

  Solutions are collated (at the end of section, end of chapter or end of book), they are numbered (the number is the same as the exercise they are associated to) and link back to their exercise.

  Markup: ./page.exercise.xhtml-baked.html

  Style guide: page.exercise
*/
/*
  Equation

  An equation wraps a MathML formula and is usually numbered.

  Markup: ./page.equation.xhtml-baked.html

  Style guide: page.equation
*/
/*
  Glossary

  This element is often referred to as Key Terms in the textbook.
  It is collated as a separate Page at the end of a Chapter or a Book.
  Also, it is collected from individual glossary elements in each raw Page.

  Markup: ./book.glossary.xhtml-baked.html

  Style guide: book.glossary
*/
/*
  Book Index

  The book Index contains terms and links to their occurences in the book.

  Markup: ./book.index.xhtml-baked.html

  Style guide: book.index
*/
/*
  Table

  The `table` element may contain a `caption`, `tbody`, `col`, and other _usual_ elements.

  If the table contains a title, there is an additional element inside `<caption>`

  # TODO

  - Decide on what the baked markup for a table with a title and caption should look like.
    - Proposals have mentioned wrapping the `<table>` element with a `.os-table-container` element.
    - Maybe what is in the Raw HTML is _good enough_?

  Markup: ./page.table.xhtml-baked.html

  Style guide: page.table
*/
/*
  Composite Page

  These are end-of-book or end-of-chapter Pages.

  A Composite Page is one that is automatically generated by moving/copying content from the raw pages.
  Examples include the end-of-chapter exercises, end-of-book solutions, end-of-chapter glossary, index.

  They:

  - must use data-type="composite-page".
  - must have a unique identifier (class) for styling purposes.
  - usually contain content separated by section(pages) or by chapter.
  - now appear in the TOC (currently not the case in the PDF).
  - aren't numbered in the content and in the TOC (the chapters and sections are)
  - follow the same rules as a regular data-type="page" (header hierarchy, metadata, etc.)

  Style guide: book.2-composite
*/
/*
  Book Preface

  A Preface is a Page at the beginning of a book that is not inside a Chapter. It contains:

  - `.preface` A class to identify it as a Preface
  - `[data-type='metadata']` The attribution information for this Page
  - `[data-type='document-title']` The title of the Page

  Markup: ./book.preface.xhtml-baked.html

  Style guide: book.1-preface
*/
/*
  Chapter

  A Chapter contains a title and multiple Pages, one of which may be a `.introduction` Page.

  The introduction page typically contains a splash image, a chapter outline and an introductory paragraph.

  Markup: ./book.chapter.xhtml-baked.html

  Style guide: book.0-chapter
*/
/*
  Unit

  A Unit contains a title and multiple Chapters.

  It does not currently contain an "Introduction" Page.

  Markup: ./book.unit.xhtml-baked.html

  Style guide: book.0-unit
*/
/*
  Unnumbered Content

  Content that has been marked with the class `.unnumbered` by the content team.

  Currently, the recipe supports only tables and figures but
  this may apply to a note, a table, an equation, a figure.

  Markup: ./page.unnumbered.xhtml-baked.html

  Style guide: page.unnumbered

*/
/*
  Lists

  Lists can contain a label or title and can be block content or inline.

  Markup: ./page.list.xhtml-baked.html

  Style guide: page.list

*/
/*
  Iframe

  An iframe can show an embedded simulation or video. Some formats cannot or would
  rather not show the iframe and present a link instead.

  So we wrap the element inside a `[data-type="alternatives"]` element and add
  enough classes to be able to select which alternative to show and which to hide.

  Markup: ./page.iframe.xhtml-baked.html

  Style guide: page.iframe
*/
/*
  Links

  Links to simulations should open in a new tab (ie `<a target="_blank">`)

  Markup: ./page.link.xhtml-baked.html

  Style guide: page.link

*/
/*==========================================================
  HIGH SCHOOL PHYSICS PAGES
==========================================================*/
/*
  Section Summary

  These should be collated at the end of a chapter
  and separated by which section they came from.

  Markup: ./styleguide/book.composite.summary.xhtml-baked.html

  Style guide: book.2-composite.summary
*/
/*
  Key Equations

  These should be collated at the end of a chapter

  **Notes:** Even without the styling you can see a few problems with the recipe code:
  1. the recipes use the class attribute when they should use the `data-type`
  1. the solution is being duplicated
  1. the solution is inside the link text that points back to the problem
  1. new id's are generated rather than using the existing id attributes for the problem and solution

  Markup: ./styleguide/book.composite.key-equations.xhtml-baked.html

  Style guide: book.2-composite.key-equations
*/
/*
  Chapter Review

  These should be collated at the end of a chapter.

  Compound Composite that contains: contains Concept Items, Critical Thinking, Performance Task

  Markup: ./styleguide/book.compoundcomposite.chapterreview.xhtml-baked.html

  Style guide: book.compoundcomposite.chapterreview
*/
/*
  Concept Items

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.concept.xhtml-baked.html

  Style guide: book.2-composite.concept
*/
/*
  Critical Thinking Items

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.critical-thinking.xhtml-baked.html

  Style guide: book.2-composite.critical-thinking
*/
/*
  Problems

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.problems.xhtml-baked.html

  Style guide: book.2-composite.problems
*/
/*
  Performance Task

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.performance.xhtml-baked.html

  Style guide: book.2-composite.performance
*/
/*
  Test Prep

  These should be collated at the end of a chapter.

  Compound Composite that contains: Test Prep Multiple Choice, Test Prep Short Answer, Test Prep Extended Response

  Markup: ./styleguide/book.compoundcomposite.testprep.xhtml-baked.html

  Style guide: book.compoundcomposite.testprep
*/
/*
  Multiple Choice

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.multiplechoice.xhtml-baked.html

  Style guide: book.2-composite.multiplechoice
*/
/*
  Short Answer

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.shortanswer.xhtml-baked.html

  Style guide: book.2-composite.shortanswer
*/
/*
  Extended Response

  These should be collated at the end of a chapter

  Markup: ./styleguide/book.composite.extendedresponse.xhtml-baked.html

  Style guide: book.2-composite.extendedresponse
*/
/*==========================================================
  HIGH SCHOOL PHYSICS TITLING CONTENT
==========================================================*/
/*==========================================================
  HIGH SCHOOL PHYSICS CONFIG
==========================================================*/
/*
  Teacher Support  note

  Contains a title "Teacher Support"

  Markup: ./styleguide/page.note.teacher.xhtml-baked.html

  Style guide: page.note.teacher
*/
/*
  Section Learning Objectives note

  Contains a title "Section Learning Objectives"

  Markup: ./styleguide/page.note.learningobjectives.xhtml-baked.html

  Style guide: page.note.learningobjectives
*/
/*
  Boundless Physics note

  Contains a title "Boundless Physics" and a body containing a title and the contents of the note.

  Markup: ./styleguide/page.note.boundlessphysics.xhtml-baked.html

  Style guide: page.note.boundlessphysics
*/
/*
  Misconception Alert note

  Contains a title "Misconception Alert".

  Markup: ./styleguide/page.note.misconception.xhtml-baked.html

  Style guide: page.note.misconception
*/
/*
  Teacher Demonstration note

  Contains a title "Teacher Demonstration".

  Markup: ./styleguide/page.note.workout.xhtml-baked.html

  Style guide: page.note.workout
*/
/*
  Grasp Check note

  Contains a title "Grasp Check".

  Markup: ./styleguide/page.note.grasp-check.xhtml-baked.html

  Style guide: page.note.grasp-check
*/
/*
  Snap Lab note

  Contains a title "Snap Lab" and wrap the body.

  Markup: ./styleguide/page.note.snap-lab.xhtml-baked.html

  Style guide: page.note.snap-lab
*/
/*
  Worked Example note

  Contains a title "Worked Example" and wraps the body.

  Markup: ./styleguide/page.note.worked-example.xhtml-baked.html

  Style guide: page.note.worked-example
*/
/*
  Tips For Success note

  Contains a title "Tips For Success".

  Markup: ./styleguide/page.note.tips-for-success.xhtml-baked.html

  Style guide: page.note.tips-for-success
*/
/*
  Work In Physics note

  Contains a title "Work In Physics" and wraps body.

  Markup: ./styleguide/page.note.work-in-physics.xhtml-baked.html

  Style guide: page.note.work-in-physics
*/
/*
  Fun In Physics note

  Contains a title "Fun In Physics".

  Markup: ./styleguide/page.note.fun-in-physics.xhtml-baked.html

  Style guide: page.note.fun-in-physics
*/
/*
  Links to Physics note

  Contains a title "Links to Physics" and wraps body.

  Markup: ./styleguide/page.note.links-to-physics.xhtml-baked.html

  Style guide: page.note.links-to-physics
*/
/*
  Watch Physics note

  Contains a title "Watch Physics" and wraps body.

  Markup: ./styleguide/page.note.watch-physics.xhtml-baked.html

  Style guide: page.note.watch-physics
*/
/*
  Virtual Physics note

  Contains a title "Virtual Physics" and wraps the body.

  Markup: ./styleguide/page.note.virtual-physics.xhtml-baked.html

  Style guide: page.note.virtual-physics
*/
/*
  Grasp Check

  This is an exercise that is fetched from exercises.openstax.org.
  It should be rendered with the label "Grasp Check" (from the data-label attribute).

  Markup: ./styleguide/page.exercise.grasp-check.xhtml-baked.html

  Style guide: page.exercise.grasp-check
*/
/*
  Learning Objectives

  These are specific to *some* TEA titles but not all. (those with `$Config_TEAspecificLOHeaders: true;`)

  Markup: ./styleguide/page.learning-objectives.xhtml-baked.html

  Style guide: page.learning-objectives
*/
@namespace xhtml "http://www.w3.org/1999/xhtml";
[data-type='list']:not([data-list-type]),
[data-type='list'][data-list-type='bulleted'],
[data-type='list'][data-list-type='enumerated'] {
  sort-by: 'invalid-namespace-just-to-throw-an-error|element-HACK'; }

[data-type='list'][data-list-type='labeled-item']:not([data-item-sep]) > span[data-type="item"]:not(:last-child)::after,
[data-type='list'][data-list-type='bulleted']:not([data-item-sep]) > span[data-type="item"]:not(:last-child)::after {
  container: span;
  attr-class: "-os-inline-list-separator";
  content: "; "; }

[data-type='list'][data-list-type='labeled-item'][data-item-sep],
[data-type='list'][data-list-type='bulleted'][data-item-sep] {
  string-set: listItemSep attr(data-item-sep); }
  [data-type='list'][data-list-type='labeled-item'][data-item-sep] > [data-type="item"]:not(:last-child)::after,
  [data-type='list'][data-list-type='bulleted'][data-item-sep] > [data-type="item"]:not(:last-child)::after {
    container: span;
    attr-class: "-os-inline-list-separator";
    content: string(listItemSep); }

div.preface > [data-type="document-title"] {
  tag-name-set: h1; }

:not([data-type="metadata"]) > [data-type="document-title"]::inside {
  tag-name-set: span;
  class-add: "os-text"; }

a.os-interactive-link {
  attrs-add: "target" "_blank"; }

[data-type="exercise"][data-label]:not([data-label=""])::outside {
  attrs-add: "data-type" "exercise-container";
  tag-name-set: div; }
  [data-type="exercise"][data-label]:not([data-label=""])::outside::before {
    tag-name-set: div;
    class-add: "os-label";
    content: attr(data-label); }

ol[data-label]:not([data-label=""])::outside,
ul[data-label]:not([data-label=""])::outside {
  attrs-add: "data-type" "list-container";
  tag-name-set: div; }
  ol[data-label]:not([data-label=""])::outside::before,
  ul[data-label]:not([data-label=""])::outside::before {
    tag-name-set: div;
    class-add: "os-label";
    content: attr(data-label); }

:not([data-type="alternatives"]) > iframe {
  class-add: "os-is-iframe"; }
  :not([data-type="alternatives"]) > iframe::outside {
    tag-name-set: div;
    attrs-add: "data-type" "alternatives";
    class-add: "os-has-iframe os-has-link"; }
    :not([data-type="alternatives"]) > iframe::outside::before {
      tag-name-set: a;
      class-add: "os-is-link";
      attrs-add: "target" "_window", "href" attr(src);
      content: "Click to view content"; }

cnx-pi {
  x-display: none; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class])::inside {
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class]) > div[data-type="title"] {
  tag-name-set: span;
  class-add: "os-title-label";
  attrs-add: "data-type" ""; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class])::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title";
  content: move-here('> div[data-type="title"]'); }

[data-type="note"] [data-type="note"]:not([class])::inside {
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"]:not([class]) > div[data-type="title"] {
  tag-name-set: span;
  class-add: "os-title-label";
  attrs-add: "data-type" ""; }

[data-type="note"] [data-type="note"]:not([class])::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title";
  content: move-here('> div[data-type="title"]'); }

[data-type="metadata"] > [data-type="description"] {
  x-display: none; }

[data-type="exercise"]:has(div.missing-exercise) {
  class-add: "missing-exercise"; }

ol[data-number-style="lower-alpha"] {
  attrs-add: "type" "a"; }

[data-type="exercise"].missing-exercise {
  x-display: none; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].os-teacher > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].os-teacher > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].os-teacher::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].os-teacher::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].os-teacher::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Teacher Support"; }

[data-type="note"] [data-type="note"].os-teacher > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].os-teacher > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].os-teacher::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].os-teacher::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].os-teacher::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Teacher Support"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].boundless-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].boundless-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].boundless-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].boundless-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].boundless-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Boundless Physics"; }

[data-type="note"] [data-type="note"].boundless-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].boundless-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].boundless-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].boundless-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].boundless-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Boundless Physics"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives > div[data-type="title"] {
  x-display: none; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives > p:first-of-type > span[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives > p:first-of-type > span[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].learning-objectives::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Section Learning Objectives"; }

[data-type="note"] [data-type="note"].learning-objectives > div[data-type="title"] {
  x-display: none; }

[data-type="note"] [data-type="note"].learning-objectives > p:first-of-type > span[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].learning-objectives > p:first-of-type > span[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].learning-objectives::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].learning-objectives::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].learning-objectives::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Section Learning Objectives"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-teacher-demonstration > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-teacher-demonstration > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-teacher-demonstration::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-teacher-demonstration::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-teacher-demonstration::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Teacher Demonstration"; }

[data-type="note"] [data-type="note"].ost-teacher-demonstration > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].ost-teacher-demonstration > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].ost-teacher-demonstration::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].ost-teacher-demonstration::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].ost-teacher-demonstration::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Teacher Demonstration"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-misconception > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-misconception > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-misconception::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-misconception::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].ost-misconception::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Misconception Alert"; }

[data-type="note"] [data-type="note"].ost-misconception > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].ost-misconception > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].ost-misconception::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].ost-misconception::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].ost-misconception::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Misconception Alert"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].grasp-check > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].grasp-check > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].grasp-check::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].grasp-check::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].grasp-check::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Grasp Check"; }

[data-type="note"] [data-type="note"].grasp-check > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].grasp-check > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].grasp-check::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].grasp-check::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].grasp-check::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Grasp Check"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].snap-lab > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].snap-lab > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].snap-lab::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].snap-lab::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].snap-lab::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Snap Lab"; }

[data-type="note"] [data-type="note"].snap-lab > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].snap-lab > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].snap-lab::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].snap-lab::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].snap-lab::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Snap Lab"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].worked-example > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].worked-example > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].worked-example::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].worked-example::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].worked-example::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Worked Example"; }

[data-type="note"] [data-type="note"].worked-example > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].worked-example > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].worked-example::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].worked-example::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].worked-example::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Worked Example"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].tips-for-success > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].tips-for-success > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].tips-for-success::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].tips-for-success::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].tips-for-success::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Tips For Success"; }

[data-type="note"] [data-type="note"].tips-for-success > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].tips-for-success > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].tips-for-success::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].tips-for-success::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].tips-for-success::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Tips For Success"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].work-in-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].work-in-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].work-in-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].work-in-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].work-in-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Work In Physics"; }

[data-type="note"] [data-type="note"].work-in-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].work-in-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].work-in-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].work-in-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].work-in-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Work In Physics"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].fun-in-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].fun-in-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].fun-in-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].fun-in-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].fun-in-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Fun In Physics"; }

[data-type="note"] [data-type="note"].fun-in-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].fun-in-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].fun-in-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].fun-in-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].fun-in-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Fun In Physics"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].links-to-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].links-to-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].links-to-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].links-to-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].links-to-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Links To Physics"; }

[data-type="note"] [data-type="note"].links-to-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].links-to-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].links-to-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].links-to-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].links-to-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Links To Physics"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].watch-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].watch-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].watch-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].watch-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].watch-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Watch Physics"; }

[data-type="note"] [data-type="note"].watch-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].watch-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].watch-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].watch-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].watch-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Watch Physics"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].virtual-physics > div[data-type="title"] {
  tag-name-set: h4;
  class-add: "os-subtitle"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].virtual-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].virtual-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].virtual-physics::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  :not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"].virtual-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Virtual Physics"; }

[data-type="note"] [data-type="note"].virtual-physics > div[data-type="title"] {
  tag-name-set: h5;
  class-add: "os-subtitle"; }
  [data-type="note"] [data-type="note"].virtual-physics > div[data-type="title"]::inside {
    tag-name-set: span;
    class-add: "os-subtitle-label"; }

[data-type="note"] [data-type="note"].virtual-physics::inside {
  tag-name-set: "div";
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"].virtual-physics::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title"; }
  [data-type="note"] [data-type="note"].virtual-physics::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: "Virtual Physics"; }

div[data-type="chapter"] > [data-type="document-title"] {
  tag-name-set: "h1"; }
  div[data-type="chapter"] > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: ancestor-context("body", count-of-type('[data-type="chapter"]')); }
  div[data-type="chapter"] > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  div[data-type="chapter"] > [data-type="document-title"]::inside {
    tag-name-set: "span";
    class-add: "os-text"; }

div.appendix > [data-type="document-title"] {
  tag-name-set: "h1"; }
  div.appendix > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: number-to-letter(ancestor-context("body", count-of-type('[data-type="page"].appendix, [data-type="chapter"].appendix')), upper-latin); }
  div.appendix > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " | "; }

div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"] {
  tag-name-set: "h2"; }
  div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
  div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }

div[data-type="chapter"] > div[data-type="page"].introduction > [data-type="document-title"] {
  tag-name-set: "h2"; }

li[data-type="footnote-ref"] > a[data-type="footnote-ref-link"] {
  content: ancestor-context('[data-type="chapter"], .appendix', count-of-type('[data-type="footnote-ref"]')); }

sup[data-type="footnote-number"] > a[data-type="footnote-link"] {
  content: ancestor-context('[data-type="chapter"], .appendix', count-of-type('[data-type="footnote-number"]')); }

li > a[data-type="footnote-ref"] {
  content: ancestor-context('[data-type="chapter"], .appendix', count-of-type('[data-type="footnote-ref"]')); }

a[data-type="footnote-number"] > sup {
  content: ancestor-context('[data-type="chapter"], .appendix', count-of-type('[data-type="footnote-number"]')); }

div[data-type="page"],
div[data-type="composite-page"] {
  string-set: pageID attr(id); }

div[data-type="page"] span[data-type="term"] {
  attrs-add: "id" "auto_" ancestor-context('[data-type="page"]', attr(id)) "_term" ancestor-context('[data-type="page"]', count-of-type('[data-type="term"]')); }
  div[data-type="page"] span[data-type="term"]:match("^[a-zA-Z]") {
    attr-group-by: first-letter(content()); }
  div[data-type="page"] span[data-type="term"]:match("^[^a-zA-Z]") {
    attr-group-by: " Symbols"; }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionHeaderNode; }

div[data-type="chapter"] div[data-type="glossary"] {
  /* Discard this Page-specific glossary because it is collated later and the title is added when this is collated */
  x-display: none; }

div[data-type="chapter"] div[data-type="glossary"] dl > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(1) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-glossary-container", "PHILBLAMMO";
  attrs-add: "data-type" "composite-page", "uuid-key" "<glossary>";
  content: move-here('div[data-type="glossary"] dl');
  x-log: "TODO: implement sort-by somehow. xhtml|dl > xhtml|dt"; }

div[data-type="chapter"] section.summary > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(2) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-summary-container", "PHILBLAMMO";
  attrs-add: "data-type" "composite-page", "uuid-key" ".summary";
  content: move-here("section.summary"); }

div[data-type="chapter"] section.key-equations > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(3) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-key-equations-container", "PHILBLAMMO";
  attrs-add: "data-type" "composite-page", "uuid-key" ".key-equations";
  content: move-here("section.key-equations"); }

div[data-type="chapter"] section.chapter-review > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(4) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-chapter-review-container", "PHILBLAMMO";
  attrs-add: "data-type" "composite-page", "uuid-key" ".chapter-review";
  content: move-here("section.chapter-review"); }

div[data-type="chapter"] section.test-prep > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(5) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-test-prep-container", "PHILBLAMMO";
  attrs-add: "data-type" "composite-page", "uuid-key" ".test-prep";
  content: move-here("section.test-prep"); }

.key-equations table:not(.unnumbered) {
  class-add: "unnumbered"; }

.worked-example [data-type="exercise"]:not(.unnumbered) {
  class-add: "unnumbered"; }

[data-type="exercise"].grasp-check:not(.unnumbered) {
  class-add: "unnumbered"; }

.os-practice-problems [data-type="exercise"]:not(.unnumbered) {
  class-add: "unnumbered"; }

[data-type="chapter"]::after(4) {
  class-add: "os-eoc", "os-chapter-review-container", "PHILLLLLLL";
  attrs-add: "data-type" "composite-page", "data-uuid-key" ".chapter-review";
  content: pending(composite-DESTINATION); }
  [data-type="chapter"]::after(4) [data-type="page"] > [data-type="document-title"] {
    node-set: CompoundSectionHeaderNode; }
  [data-type="chapter"]::after(4) section.concept > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(4)::after(1):has(section.concept) {
    class-add: "os-concept-container"; }
    [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Concept Items"; }
    [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(1) {
      class-add: "os-concept"; }
      [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.concept"); }
        [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(4)::after(1):has(section.concept)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }
  [data-type="chapter"]::after(4) section.critical-thinking > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking) {
    class-add: "os-critical-thinking-container"; }
    [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Critical Thinking Items"; }
    [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(1) {
      class-add: "os-critical-thinking"; }
      [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.critical-thinking"); }
        [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(4)::after(2):has(section.critical-thinking)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }
  [data-type="chapter"]::after(4) section.ost-chapter-review.problem > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem) {
    class-add: "os-ost-chapter-review.problem-container"; }
    [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Problems"; }
    [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(1) {
      class-add: "os-ost-chapter-review.problem"; }
      [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.ost-chapter-review.problem"); }
        [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(4)::after(3):has(section.ost-chapter-review.problem)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }
  [data-type="chapter"]::after(4) section.performance > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(4)::after(4):has(section.performance) {
    class-add: "os-performance-container"; }
    [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Performance Task"; }
    [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(1) {
      class-add: "os-performance"; }
      [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.performance"); }
        [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(4)::after(4):has(section.performance)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }

[data-type="chapter"]::after(5) {
  class-add: "os-eoc", "os-test-prep-container", "PHILLLLLLL";
  attrs-add: "data-type" "composite-page", "data-uuid-key" ".test-prep";
  content: pending(composite-DESTINATION); }
  [data-type="chapter"]::after(5) [data-type="page"] > [data-type="document-title"] {
    node-set: CompoundSectionHeaderNode; }
  [data-type="chapter"]::after(5) section.multiple-choice > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice) {
    class-add: "os-multiple-choice-container"; }
    [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Multiple Choice"; }
    [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(1) {
      class-add: "os-multiple-choice"; }
      [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.multiple-choice"); }
        [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(5)::after(1):has(section.multiple-choice)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }
  [data-type="chapter"]::after(5) section.short-answer > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(5)::after(2):has(section.short-answer) {
    class-add: "os-short-answer-container"; }
    [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Short Answer"; }
    [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(1) {
      class-add: "os-short-answer"; }
      [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.short-answer"); }
        [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(5)::after(2):has(section.short-answer)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }
  [data-type="chapter"]::after(5) section.extended-response > [data-type="title"] {
    x-log: "We should remove this but it was buggily causing the ::for-each-descendant to have a detached parent... maybe?"; }
  [data-type="chapter"]::after(5)::after(3):has(section.extended-response) {
    class-add: "os-extended-response-container"; }
    [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(2) {
      tag-name-set: "h3";
      attrs-add: "data-type" "title";
      content: "Extended Response"; }
    [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(1) {
      class-add: "os-extended-response"; }
      [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(1)::for-each-descendant(1, '> [data-type="page"]') {
        class-add: "os-section-area";
        content: move-here("section.extended-response"); }
        [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before {
          tag-name-set: "h4";
          content: descendant-context('> [data-type="document-title"]', text-contents()); }
          [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(501) {
            tag-name-set: "span";
            class-add: os-number;
            content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type('[data-type="page"]:not(.introduction)')); }
          [data-type="chapter"]::after(5)::after(3):has(section.extended-response)::before(1)::for-each-descendant(1, '> [data-type="page"]')::before::before(500) {
            tag-name-set: "span";
            class-add: os-divider;
            content: " "; }

[data-type="chapter"] [data-type="page"]:not(.introduction) > [data-type="document-title"] {
  string-set: outlinePageId attr(id); }
  [data-type="chapter"] [data-type="page"]:not(.introduction) > [data-type="document-title"]::after {
    container: a;
    class: "os-chapter-objective";
    content: content();
    attr-href: "#" string(outlinePageId);
    move-to: chapOutlineLink; }

[data-type="chapter"] [data-type="page"]:not(.introduction)::after {
  class: "os-chapter-objective";
  content: pending(chapOutlineLink) pending(outlineLO);
  move-to: chapOutline; }

[data-type="chapter"]::before {
  container: h3;
  class: "os-title";
  content: "Chapter Outline";
  move-to: chapOutlineTitle; }

[data-type="chapter"]:deferred::before {
  class: "os-chapter-outline";
  content: pending(chapOutlineTitle) pending(chapOutline); }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionHeaderNode; }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  string-set: sectionHeaderString content(); }

div[data-type="page"] span[data-type="term"]::after, div[data-type="composite-page"] span[data-type="term"]::after {
  content: content();
  attr-group-by: attr(group-by);
  container: span;
  class: "os-term";
  move-to: index-term; }

div[data-type="page"] span[data-type="term"]::after, div[data-type="composite-page"] span[data-type="term"]::after {
  content: string(sectionHeaderString);
  container: span;
  class: "os-term-section";
  move-to: index-section; }

div[data-type="page"] span[data-type="term"]::after, div[data-type="composite-page"] span[data-type="term"]::after {
  container: a;
  content: pending(index-section);
  attr-href: "#" attr(id);
  class: "os-term-section-link";
  move-to: index-section-link; }

div[data-type="page"] span[data-type="term"]::after, div[data-type="composite-page"] span[data-type="term"]::after {
  container: span;
  content: ', ';
  class: "os-index-link-separator";
  move-to: index-section-link; }

div[data-type="page"] span[data-type="term"]::after, div[data-type="composite-page"] span[data-type="term"]::after {
  content: pending(index-term) pending(index-section-link);
  class: os-index-item;
  move-to: index-TOCOMPOSITE; }

.os-chapter-outline {
  move-to: ChapterOutline; }

.introduction {
  content: pending(ChapterOutline) content(); }

.os-eoc [data-type="exercise"] [data-type="problem"]::before(501) {
  tag-name-set: "span";
  class-add: os-divider;
  content: ". "; }

.os-eoc [data-type="exercise"] [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exercise); }

.os-eoc [data-type="exercise"] [data-type="solution"]::before(501) {
  tag-name-set: "span";
  class-add: os-divider;
  content: ". "; }

.os-eoc [data-type="exercise"] [data-type="solution"]::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exercise); }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionHeaderNode; }

body::after {
  container: div;
  content: pending(index-TOCOMPOSITE);
  class: "os-eob os-index-container";
  data-type: "composite-page";
  data-uuid-key: "<index>";
  group-by: span, "span::attr(group-by)", nocase; }

.os-index-container > div.group-by:first-of-type > span.group-label:match("^[ ](Symbols|SYMBOLS)") {
  content: "Symbols"; }

.os-eoc [data-type="exercise"] {
  string-set: target-label "Exercise " ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(exercise); }

div[data-type="chapter"] [data-type="example"] {
  string-set: target-label "Example " ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(example); }

div[data-type="chapter"] [data-type="equation"]:not(.unnumbered) {
  string-set: target-label "Equation " ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(equation); }

[data-type="chapter"] :not(table) > table:not(.unnumbered) {
  string-set: target-label "Table " ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(table); }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered) {
  string-set: target-label "Figure " ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(figure); }

.appendix :not(table) > table:not(.unnumbered) {
  string-set: target-label "Table " counter(appendix, upper-alpha) counter(table); }

.appendix :not(figure) > figure:not(.unnumbered) {
  string-set: target-label "Figure " counter(appendix, upper-alpha) counter(figure); }

.appendix > table:not(.unnumbered) {
  string-set: target-label "Table " counter(appendix, upper-alpha) counter(table); }

.appendix > figure:not(.unnumbered) {
  string-set: target-label "Figure " counter(appendix, upper-alpha) counter(figure); }

a.autogenerated-content {
  content: target-string(attr(href), target-label); }

[data-type="chapter"] [data-type="equation"]:not(.unnumbered)::before(500), .appendix [data-type="equation"]:not(.unnumbered)::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(chapter) "." counter(equation); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

[data-type="composite-page"] {
  content: nodes(bookMetadata) content(); }

[data-type="composite-page"].os-eoc.os-glossary-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Key Terms"; }

[data-type="composite-page"].os-eoc.os-glossary-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-summary-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Section Summary"; }

[data-type="composite-page"].os-eoc.os-summary-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-key-equations-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Key Equations"; }

[data-type="composite-page"].os-eoc.os-key-equations-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-chapter-review-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Chapter Review"; }

[data-type="composite-page"].os-eoc.os-chapter-review-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-test-prep-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Test Prep"; }

[data-type="composite-page"].os-eoc.os-test-prep-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eob.os-index-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Index"; }

[data-type="composite-page"].os-eob.os-index-container::outside {
  tag-name-set: h1;
  attrs-add: "data-type" "document-title"; }

div[data-type='chapter'] > h1[data-type='document-title'] {
  counter-increment: chapTitleNum;
  attr-id: "chapTitle" counter(chapTitleNum); }

[data-type="chapter"] [data-type="page"] [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(501) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exerciseMaybeInContent); }

[data-type="chapter"] [data-type="page"] [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-title-label;
  content: "Exercise "; }

.appendix [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(501) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exerciseMaybeInContent); }

.appendix [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-title-label;
  content: "Exercise "; }

[data-type="chapter"] :not(table) > table:not(.unnumbered) caption {
  tag-name-set: "span";
  class-add: "os-caption"; }

[data-type="chapter"] :not(table) > table:not(.unnumbered) caption [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

[data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Table "; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." counter(table); }
  [data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered) caption::outside::before(1) {
    content: parent-context(move-here('caption [data-type="title"]')); }

[data-type="chapter"] :not(table) > table:not(.unnumbered)::outside {
  tag-name-set: "div";
  class-add: os-table; }

[data-type="chapter"] > table.unnumbered caption {
  x-display: none; }

.appendix :not(table) > table:not(.unnumbered) caption,
.appendix > table:not(.unnumbered) caption {
  tag-name-set: "span";
  class-add: "os-caption"; }

.appendix :not(table) > table:not(.unnumbered) caption [data-type="title"],
.appendix > table:not(.unnumbered) caption [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

.appendix :not(table) > table:not(.unnumbered) caption::outside,
.appendix > table:not(.unnumbered) caption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  .appendix :not(table) > table:not(.unnumbered) caption::outside::before(502),
  .appendix > table:not(.unnumbered) caption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Table "; }
  .appendix :not(table) > table:not(.unnumbered) caption::outside::before(501),
  .appendix > table:not(.unnumbered) caption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: counter(appendix, upper-alpha) counter(table); }
  .appendix :not(table) > table:not(.unnumbered) caption::outside::before(500),
  .appendix > table:not(.unnumbered) caption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  .appendix :not(table) > table:not(.unnumbered) caption::outside::before(2),
  .appendix > table:not(.unnumbered) caption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  .appendix :not(table) > table:not(.unnumbered) caption::outside::before(1),
  .appendix > table:not(.unnumbered) caption::outside::before(1) {
    content: parent-context(move-here('caption [data-type="title"]')); }

.appendix :not(table) > table:not(.unnumbered)::outside,
.appendix > table:not(.unnumbered)::outside {
  tag-name-set: "div";
  class-add: os-table; }

.appendix > table.unnumbered caption {
  x-display: none; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption {
  tag-name-set: "span";
  class-add: "os-caption"; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered) [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Figure "; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: ancestor-context("body", count-of-type('[data-type="chapter"]')) "." ancestor-context('[data-type="chapter"]', count-of-type("figure:not(.splash)")); }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered) figcaption::outside::before(1) {
    content: parent-context(move-here('[data-type="title"]')); }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered)::outside {
  tag-name-set: "div";
  class-add: os-figure; }

[data-type="chapter"] > figure.unnumbered figcaption {
  x-display: none; }

.appendix :not(figure) > figure:not(.unnumbered) figcaption,
.appendix > figure:not(.unnumbered) figcaption {
  tag-name-set: "span";
  class-add: "os-caption"; }

.appendix :not(figure) > figure:not(.unnumbered) [data-type="title"],
.appendix > figure:not(.unnumbered) [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

.appendix :not(figure) > figure:not(.unnumbered) figcaption::outside,
.appendix > figure:not(.unnumbered) figcaption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  .appendix :not(figure) > figure:not(.unnumbered) figcaption::outside::before(502),
  .appendix > figure:not(.unnumbered) figcaption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Figure "; }
  .appendix :not(figure) > figure:not(.unnumbered) figcaption::outside::before(501),
  .appendix > figure:not(.unnumbered) figcaption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: number-to-letter(ancestor-context("body", count-of-type('[data-type="page"].appendix, [data-type="chapter"].appendix')), upper-latin) ancestor-context('[data-type="page"].appendix, [data-type="chapter"].appendix', count-of-type("figure:not(.splash)")); }
  .appendix :not(figure) > figure:not(.unnumbered) figcaption::outside::before(500),
  .appendix > figure:not(.unnumbered) figcaption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  .appendix :not(figure) > figure:not(.unnumbered) figcaption::outside::before(2),
  .appendix > figure:not(.unnumbered) figcaption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  .appendix :not(figure) > figure:not(.unnumbered) figcaption::outside::before(1),
  .appendix > figure:not(.unnumbered) figcaption::outside::before(1) {
    content: parent-context(move-here('[data-type="title"]')); }

.appendix :not(figure) > figure:not(.unnumbered)::outside,
.appendix > figure:not(.unnumbered)::outside {
  tag-name-set: "div";
  class-add: os-figure; }

.appendix > figure.unnumbered figcaption {
  x-display: none; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] > .os-title {
  tag-name-set: h3; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] [data-type="solution"] .solution-title {
  tag-name-set: h4; }

[data-type="composite-page"].os-eoc > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-page"].os-eoc > div > div > div > section > [data-type="document-title"] {
  tag-name-set: h4; }

[data-type="composite-page"].os-eob > .os-chapter-area > [data-type="document-title"] {
  tag-name-set: h2; }

[data-type="composite-page"].os-eob > .os-chapter-area > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-chapter"] > section [data-type="document-title"], [data-type="composite-chapter"] > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="title"] {
  tag-name-set: h2; }

[data-type="composite-chapter"] > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="title"] {
  tag-name-set: h3;
  attrs-add: "data-type" title; }

[data-type="composite-chapter"] > section > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="title"] {
  tag-name-set: h4; }

.appendix > section [data-type="title"], .appendix > section [data-type="document-title"] {
  tag-name-set: h2; }

.appendix > section > section [data-type="title"], .appendix > section > section [data-type="document-title"] {
  tag-name-set: h3; }

.os-eoc [data-type="solution"] {
  x-display: none; }

.os-index-link-separator:last-child {
  x-display: none; }

[data-type="composite-page"] > [data-type="document-title"], [data-type="composite-chapter"] > [data-type="document-title"] {
  string-set: doc-title-TOMETADATA content(); }

[data-type="composite-page"] > [data-type="metadata"] > [data-type="document-title"], [data-type="composite-chapter"] > [data-type="metadata"] > [data-type="document-title"] {
  content: string(doc-title-TOMETADATA); }

div.os-eoc [data-type="cnx-archive-uri"],
div.os-eob [data-type="cnx-archive-uri"] {
  x-display: none; }

[data-type="composite-chapter"] > [data-type="metadata"] > [data-type="cnx-archive-uri"] {
  x-display: none; }

body > div[data-type="page"],
body > div[data-type="composite-page"] {
  string-set: page-id attr(id); }
  body > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: pageTitle; }
  body > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="page"]::after,
  body > div[data-type="composite-page"]::after {
    content: nodes(pageTitle);
    attr-href: "#" string(page-id);
    container: a;
    move-to: page-link; }
  body > div[data-type="page"]::after,
  body > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eob-toc;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="chapter"] > [data-type='document-title'], body > div[data-type="composite-chapter"] > [data-type='document-title'] {
  node-set: chapterTitle;
  string-set: chapTitle-id attr(id); }

body > div[data-type="chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="composite-chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: chap-shortid attr(data-value); }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: nodes(chapterTitle);
  attr-href: "#" string(chapTitle-id);
  container: a;
  move-to: eoc-toc; }

body > div[data-type="chapter"] > div[data-type="page"],
body > div[data-type="chapter"] > div[data-type="composite-page"], body > div[data-type="composite-chapter"] > div[data-type="page"],
body > div[data-type="composite-chapter"] > div[data-type="composite-page"] {
  string-set: page-id-chap attr(id); }
  body > div[data-type="chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='document-title'], body > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: PageTitle; }
  body > div[data-type="chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: nodes(PageTitle);
    attr-href: "#" string(page-id-chap);
    container: a;
    move-to: page-link; }
  body > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eoc-toc-pages;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc-pages);
  container: ol;
  class: os-chapter;
  move-to: eoc-toc; }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(chap-shortid);
  container: li;
  move-to: eob-toc; }

body > div[data-type="unit"] > [data-type='document-title'] {
  node-set: unitTitle;
  string-set: uTitle-id attr(id); }

body > div[data-type="unit"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: unit-shortid attr(data-value); }

body > div[data-type="unit"]::after {
  content: nodes(unitTitle);
  attr-href: "#" string(uTitle-id);
  container: a;
  move-to: eou-toc; }

body > div[data-type="unit"] > div[data-type="chapter"] > [data-type='document-title'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > [data-type='document-title'] {
  node-set: chapterTitle;
  string-set: chapTitle-id attr(id); }

body > div[data-type="unit"] > div[data-type="chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: chap-shortid attr(data-value); }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: nodes(chapterTitle);
  attr-href: "#" string(chapTitle-id);
  container: a;
  move-to: eoc-toc; }

body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"],
body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"],
body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] {
  string-set: page-id-chap attr(id); }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='document-title'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: PageTitle; }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: nodes(PageTitle);
    attr-href: "#" string(page-id-chap);
    container: a;
    move-to: page-link; }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eoc-toc-pages;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc-pages);
  container: ol;
  class: os-chapter;
  move-to: eoc-toc; }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(chap-shortid);
  container: li;
  move-to: eou-toc-chapters; }

body > div[data-type="unit"]::after {
  content: pending(eou-toc-chapters);
  container: ol;
  class: os-unit;
  move-to: eou-toc; }

body > div[data-type="unit"]::after {
  content: pending(eou-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(unit-shortid);
  container: li;
  move-to: eob-toc; }

nav#toc {
  content: ''; }
  nav#toc::after {
    content: pending(eob-toc);
    container: ol; }

nav#toc li > a > h1 > span,
nav#toc li > a > h2 > span,
nav#toc li > a > div > span {
  move-to: title-spans; }

nav#toc li > a:deferred {
  content: pending(title-spans); }

body:deferred::after {
  content: clear(trash); }

.learning-objective,
.learning-objectives,
[data-type="page"]:not(.introduction) [data-type="abstract"] {
  container: section;
  data-type: ""; }
  .learning-objective > div[data-type="title"],
  .learning-objectives > div[data-type="title"],
  [data-type="page"]:not(.introduction) [data-type="abstract"] > div[data-type="title"] {
    move-to: trash; }
  .learning-objective::before,
  .learning-objectives::before,
  [data-type="page"]:not(.introduction) [data-type="abstract"]::before {
    container: h3;
    data-type: "title";
    content: "Learning Objectives"; }

body:deferred::after {
  content: clear(trash); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

body .appendix {
  move-to: chapterAppendices; }

body::after {
  container: span;
  class: "os-text";
  content: "Appendices";
  move-to: AppendixTitleSpans; }

body::after {
  container: h1;
  data-type: "document-title";
  content: pending(AppendixTitleSpans);
  move-to: appendicesTitle; }

body::after {
  data-type: composite-chapter;
  data-uuid-key: appendicesChapter;
  content: pending(appendicesTitle) nodes(bookMetadata) pending(chapterAppendices); }

.appendix::inside {
  container: section;
  class: "appendix-container"; }

.appendix .appendix-container > h1[data-type="document-title"] {
  copy-to: appendixTitle; }

.appendix .appendix-container [data-type="metadata"] {
  move-to: metadata; }

.appendix:deferred {
  content: pending(appendixTitle) pending(metadata) content(); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

body .preface::after {
  container: span;
  class: "os-text";
  content: "Preface";
  move-to: prefaceTitleSpans; }

body .preface::after {
  container: h1;
  data-type: "document-title";
  content: pending(prefaceTitleSpans);
  move-to: prefaceTitle; }

body .preface::outside {
  data-type: composite-chapter;
  data-uuid-key: prefaceChapter;
  content: pending(prefaceTitle) nodes(bookMetadata) content(); }

.preface::inside {
  container: section;
  class: "preface-container"; }

.preface .preface-container > h1[data-type="document-title"] {
  copy-to: prefaceTitle; }

.preface .preface-container [data-type="metadata"] {
  move-to: metadata; }

.preface:deferred {
  content: pending(prefaceTitle) pending(metadata) content(); }

.preface-container > h1[data-type="document-title"] {
  container: h2; }

[data-type="composite-chapter"] > [data-type="metadata"] [data-type="document-title"] {
  content: "Preface"; }

[data-type="composite-chapter"] .preface > [data-type="document-title"] {
  container: h2; }

[data-type="composite-chapter"] .preface .preface-container > [data-type="document-title"] {
  container: h3; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > div[data-type="metadata"] {
  node-set: page-meta;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > [data-type="document-title"] {
  node-set: page-doc-title;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.learning-objectives,
:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.learning-objective {
  node-set: page-LO;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener {
  class: "learning-objectives"; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > div[data-type="title"] {
    move-to: trash; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objectives,
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objective {
    move-to: trash; }
    :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objectives > *,
    :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objective > * {
      move-to: newLOContainer; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > *:not(.learning-objectives):not(.learning-objective) {
    move-to: newLOContainer; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener:deferred {
    content: content() pending(newLOContainer); }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction):deferred {
  content: nodes(page-doc-title) nodes(page-meta) nodes(page-LO) content(); }

:pass(1) body:deferred::after {
  content: clear(trash); }

.os-index-container {
  x-display: none; }

.os-solutions-container {
  x-display: none; }

.os-teacher {
  x-display: none; }

body:deferred::after {
  content: clear(trash); }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] > .os-title {
  tag-name-set: h3; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] [data-type="solution"] .solution-title {
  tag-name-set: h4; }

[data-type="composite-page"].os-eoc > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-page"].os-eoc > div > div > div > section > [data-type="document-title"] {
  tag-name-set: h4; }

[data-type="composite-page"].os-eob > .os-chapter-area > [data-type="document-title"] {
  tag-name-set: h2; }

[data-type="composite-page"].os-eob > .os-chapter-area > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-chapter"] > section [data-type="document-title"], [data-type="composite-chapter"] > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="title"] {
  tag-name-set: h2; }

[data-type="composite-chapter"] > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="title"] {
  tag-name-set: h3;
  attrs-add: "data-type" title; }

[data-type="composite-chapter"] > section > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="title"] {
  tag-name-set: h4; }

.appendix > section [data-type="title"], .appendix > section [data-type="document-title"] {
  tag-name-set: h2; }

.appendix > section > section [data-type="title"], .appendix > section > section [data-type="document-title"] {
  tag-name-set: h3; }

/*# sourceMappingURL=TEAhs-physics.css.map */