@charset "UTF-8";
/*
  Book Page

  A Page is usually a section inside a chapter. It contains:

  - `[data-type='metadata']` The attribution information for this Page
  - `[data-type='document-title']` The title of the Page

  Markup: ./book.page.xhtml-baked.html

  Style guide: book.1-page
*/
/*
  Page Elements

  Everything in here is specific to a Page in a book.
  A Page is usually a section inside a chapter.

  Style guide: page
*/
/*
  Metadata

  This contains attribution information and is sometimes collated to the back of the book.

  Markup:
  <div data-type="page">
    <div data-type="metadata">...</div>
  </div>

  Style guide: page.0-metadata
*/
/*
  Processing Instruction

  These are an artifact of the transforms and will disappear in the future

  Markup:
  <div data-type="page">
    <cnx-pi />
  </div>

  Style guide: page.0-processing
*/
/*
  Term

  A term which is used to make the Book Index. Terms used in a Glossary are defined in the Glossary, not here.

  Markup: ./page.term.xhtml-baked.html

  Style guide: page.term
*/
/*
  Note

  A note or "feature". This is usually separated visually from the rest of the
  content in a book with a border and a separate background color.

  Contains an optional title, and optionally an additional class to help style the note

  Markup: ./page.note.xhtml-baked.html

  Style guide: page.note
*/
/*
  Figure

  A `<figure>` is wrapped in a `<div data-type='figure'>` which contains:
  - optional `[data-type='title']`
  - `figure` element
    - `[data-type='media']` : a wrapper element which may disappear in the future
      - `img[src][alt]` : The image for the Figure

  TODO: Maybe this should use the `<picture>` element instead of the `[data-type='media']` element:
  http://html5rocks.com/en/tutorials/responsive/picture-element/

  # TODO

  - Decide on what the baked markup for a figure with a title and caption should look like.
    - Proposals have mentioned using `<figcaption>` most of the time.
    - Maybe what is in the Raw HTML is _good enough_?

  Markup: ./page.figure.xhtml-baked.html

  Style guide: page.figure
*/
/*
  Paragraph

  A Paragraph of text. Some of the common things it can contain are:

  - `[data-type='term']` : A term that is defined elsewhere (in the glossary)
  - `strong`
  - `em`
  - `[data-type='list']` : an inline list
    - `[data-type='item']` : an item in the list
  - `math` : MathML

  TODO: Move these into a separate "inline" section in the HTML guide

  Markup: ./page.para.xhtml-baked.html

  Style guide: page.para
*/
/*
  Section

  A (sub)section of content which contains a title.

  Markup: ./page.section.xhtml-baked.html

  Style guide: page.section
*/
/*
  Example

  An example which is usually styled to not be part of the flow of normal content
  (similar to a Note).

  Markup: ./page.example.xhtml-baked.html

  Style guide: page.example
*/
/*
  Exercise

  An exercise contains a problem, optional title, and optional solution(s).

  Exercises are usually numbered and contain a link to the solution if it exists.
  Typically, an exercise is collated at the end of chapter.

  Solutions are collated (at the end of section, end of chapter or end of book), they are numbered (the number is the same as the exercise they are associated to) and link back to their exercise.

  Markup: ./page.exercise.xhtml-baked.html

  Style guide: page.exercise
*/
/*
  Equation

  An equation wraps a MathML formula and is usually numbered.

  Markup: ./page.equation.xhtml-baked.html

  Style guide: page.equation
*/
/*
  Glossary

  This element is often referred to as Key Terms in the textbook.
  It is collated as a separate Page at the end of a Chapter or a Book.
  Also, it is collected from individual glossary elements in each raw Page.

  Markup: ./book.glossary.xhtml-baked.html

  Style guide: book.glossary
*/
/*
  Book Index

  The book Index contains terms and links to their occurences in the book.

  Markup: ./book.index.xhtml-baked.html

  Style guide: book.index
*/
/*
  Table

  The `table` element may contain a `caption`, `tbody`, `col`, and other _usual_ elements.

  If the table contains a title, there is an additional element inside `<caption>`

  # TODO

  - Decide on what the baked markup for a table with a title and caption should look like.
    - Proposals have mentioned wrapping the `<table>` element with a `.os-table-container` element.
    - Maybe what is in the Raw HTML is _good enough_?

  Markup: ./page.table.xhtml-baked.html

  Style guide: page.table
*/
/*
  Composite Page

  These are end-of-book or end-of-chapter Pages.

  A Composite Page is one that is automatically generated by moving/copying content from the raw pages.
  Examples include the end-of-chapter exercises, end-of-book solutions, end-of-chapter glossary, index.

  They:

  - must use data-type="composite-page".
  - must have a unique identifier (class) for styling purposes.
  - usually contain content separated by section(pages) or by chapter.
  - now appear in the TOC (currently not the case in the PDF).
  - aren't numbered in the content and in the TOC (the chapters and sections are)
  - follow the same rules as a regular data-type="page" (header hierarchy, metadata, etc.)

  Style guide: book.2-composite
*/
/*
  Book Preface

  A Preface is a Page at the beginning of a book that is not inside a Chapter. It contains:

  - `.preface` A class to identify it as a Preface
  - `[data-type='metadata']` The attribution information for this Page
  - `[data-type='document-title']` The title of the Page

  Markup: ./book.preface.xhtml-baked.html

  Style guide: book.1-preface
*/
/*
  Chapter

  A Chapter contains a title and multiple Pages, one of which may be a `.introduction` Page.

  The introduction page typically contains a splash image, a chapter outline and an introductory paragraph.

  Markup: ./book.chapter.xhtml-baked.html

  Style guide: book.0-chapter
*/
/*
  Unit

  A Unit contains a title and multiple Chapters.

  It does not currently contain an "Introduction" Page.

  Markup: ./book.unit.xhtml-baked.html

  Style guide: book.0-unit
*/
/*
  Unnumbered Content

  Content that has been marked with the class `.unnumbered` by the content team.

  Currently, the recipe supports only tables and figures but
  this may apply to a note, a table, an equation, a figure.

  Markup: ./page.unnumbered.xhtml-baked.html

  Style guide: page.unnumbered

*/
/*
  Lists

  Lists can contain a label or title and can be block content or inline.

  Markup: ./page.list.xhtml-baked.html

  Style guide: page.list

*/
/*
  Iframe

  An iframe can show an embedded simulation or video. Some formats cannot or would
  rather not show the iframe and present a link instead.

  So we wrap the element inside a `[data-type="alternatives"]` element and add
  enough classes to be able to select which alternative to show and which to hide.

  Markup: ./page.iframe.xhtml-baked.html

  Style guide: page.iframe
*/
/*
  Links

  Links to simulations should open in a new tab (ie `<a target="_blank">`)

  Markup: ./page.link.xhtml-baked.html

  Style guide: page.link

*/
/*==========================================================
  PHYSICS PAGES
==========================================================*/
/*
  Section Review

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.summary.xhtml-baked.html

  Style guide: book.2-composite.summary
*/
/*
  Conceptual Questions

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.conceptual.xhtml-baked.html

  Style guide: book.2-composite.conceptual
*/
/*
  Problems and Exercises

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.problems.xhtml-baked.html

  Style guide: book.2-composite.problems
*/
/*==========================================================
  PHYSICS TITLING CONTENT
==========================================================*/
/*==========================================================
  PHYSICS CONFIG
==========================================================*/
/*
  Chapter Objectives

  This is a Note that appears in the Introduction page of every chapter.

  Markup: ./styleguide/page.note.chapter-objectives.xhtml-baked.html

  Style guide: page.note.chapter-objectives
*/
/*
  Test Prep for APÂ® Courses
  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.ap-test-prep.xhtml-baked.html

  Style guide: book.composite.ap-test-prep
*/
/*
  Check Your Understanding Exercise

  These should be unnumbered.

  Markup: ./styleguide/page.exercise.understanding.xhtml-baked.html

  Style guide: page.exercise.understanding
 */
@namespace xhtml "http://www.w3.org/1999/xhtml";
@namespace cmlnle "http://katalysteducation.org/cmlnle/1.0";
[data-type='list']:not([data-list-type]),
[data-type='list'][data-list-type='bulleted'],
[data-type='list'][data-list-type='enumerated'] {
  sort-by: 'invalid-namespace-just-to-throw-an-error|element-HACK'; }

[data-type='list'][data-list-type='labeled-item']:not([data-item-sep]) > span[data-type="item"]:not(:last-child)::after,
[data-type='list'][data-list-type='bulleted']:not([data-item-sep]) > span[data-type="item"]:not(:last-child)::after {
  container: span;
  attr-class: "-os-inline-list-separator";
  content: "; "; }

[data-type='list'][data-list-type='labeled-item'][data-item-sep],
[data-type='list'][data-list-type='bulleted'][data-item-sep] {
  string-set: listItemSep attr(data-item-sep); }
  [data-type='list'][data-list-type='labeled-item'][data-item-sep] > [data-type="item"]:not(:last-child)::after,
  [data-type='list'][data-list-type='bulleted'][data-item-sep] > [data-type="item"]:not(:last-child)::after {
    container: span;
    attr-class: "-os-inline-list-separator";
    content: string(listItemSep); }

div.preface > [data-type="document-title"] {
  tag-name-set: h1; }

:not([data-type="metadata"]) > [data-type="document-title"]::inside {
  tag-name-set: span;
  class-add: "os-text"; }

[data-type="exercise"][data-label]:not([data-label=""])::outside {
  attrs-add: "data-type" "exercise-container";
  tag-name-set: div; }
  [data-type="exercise"][data-label]:not([data-label=""])::outside::before {
    tag-name-set: div;
    class-add: "os-label";
    content: attr(data-label); }

ol[data-label]:not([data-label=""])::outside,
ul[data-label]:not([data-label=""])::outside {
  attrs-add: "data-type" "list-container";
  tag-name-set: div; }
  ol[data-label]:not([data-label=""])::outside::before,
  ul[data-label]:not([data-label=""])::outside::before {
    tag-name-set: div;
    class-add: "os-label";
    content: attr(data-label); }

cnx-pi {
  x-display: none; }

div[data-element-type="check-understanding"]::before {
  tag-name-set: div;
  class-add: "os-title"; }
  div[data-element-type="check-understanding"]::before::before {
    tag-name-set: span;
    class-add: "os-title-label";
    content: move-here('> div[data-type="title"]'); }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class])::inside {
  class-add: "os-note-body"; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class]) > div[data-type="title"] {
  tag-name-set: span;
  class-add: "os-title-label";
  attrs-add: "data-type" ""; }

:not([data-type="note"]) > :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"]:not([class])::before {
  tag-name-set: h3;
  class-add: "os-title";
  attrs-add: "data-type" "title";
  content: move-here('> div[data-type="title"]'); }

[data-type="note"] [data-type="note"]:not([class])::inside {
  class-add: "os-note-body"; }

[data-type="note"] [data-type="note"]:not([class]) > div[data-type="title"] {
  tag-name-set: span;
  class-add: "os-title-label";
  attrs-add: "data-type" ""; }

[data-type="note"] [data-type="note"]:not([class])::before {
  tag-name-set: h4;
  class-add: "os-title";
  attrs-add: "data-type" "title";
  content: move-here('> div[data-type="title"]'); }

section.section-summary [data-type="equation"]:not(.unnumbered) {
  class-add: "unnumbered"; }

[data-type="metadata"] > [data-type="description"] {
  x-display: none; }

div[data-type="chapter"] > [data-type="document-title"] {
  tag-name-set: "h1"; }
  div[data-type="chapter"] > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: counter(chapter); }
  div[data-type="chapter"] > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  div[data-type="chapter"] > [data-type="document-title"]::inside {
    tag-name-set: "span";
    class-add: "os-text"; }

div.appendix > [data-type="document-title"] {
  tag-name-set: "h1"; }
  div.appendix > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: number-to-letter(count-of-type("body", '[data-type="page"].appendix, [data-type="chapter"].appendix'), upper-latin); }
  div.appendix > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " | "; }

div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"] {
  tag-name-set: "h2"; }
  div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"]::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: counter(chapter) "." counter(section); }
  div[data-type="chapter"] > div[data-type="page"]:not(.introduction) > [data-type="document-title"]::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }

div[data-type="chapter"] > div[data-type="page"].introduction > [data-type="document-title"] {
  tag-name-set: "h2"; }

li[data-type="footnote-ref"] > a[data-type="footnote-ref-link"] {
  content: count-of-type('[data-type="chapter"], .appendix', '[data-type="footnote-ref"]'); }

sup[data-type="footnote-number"] > a[data-type="footnote-link"] {
  content: count-of-type('[data-type="chapter"], .appendix', '[data-type="footnote-number"]'); }

li > a[data-type="footnote-ref"] {
  content: count-of-type('[data-type="chapter"], .appendix', '[data-type="footnote-ref"]'); }

a[data-type="footnote-number"] > sup {
  content: count-of-type('[data-type="chapter"], .appendix', '[data-type="footnote-number"]'); }

[data-type="example"] > [data-type="title"] {
  tag-name-set: "div";
  class-add: "os-title"; }
  [data-type="example"] > [data-type="title"]::inside {
    tag-name-set: "span";
    class-add: "os-text"; }

[data-type="example"] [data-type="solution"]::before(501) {
  tag-name-set: "span";
  class-add: os-title-label;
  content: "Solution "; }

[data-type="example"] [data-type="solution"]::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(chapter) "." counter(example); }

[data-type="example"] [data-type="solution"]::outside {
  tag-name-set: div;
  attrs-add: "data-type" "solution-title"; }

div[data-type="page"],
div[data-type="composite-page"] {
  string-set: pageID attr(id); }

div[data-type="page"] span[data-type="term"] {
  attrs-add: "id" "auto_" ancestor-context('[data-type="page"]', x-attr-ensure-id()) "_term" count-of-type('[data-type="page"]', '[data-type="term"]'); }
  div[data-type="page"] span[data-type="term"]:match("^[a-zA-Z]") {
    attr-group-by: first-letter(content()); }
  div[data-type="page"] span[data-type="term"]:match("^[^a-zA-Z]") {
    attr-group-by: " Symbols"; }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionHeaderNode; }

div[data-type="chapter"] div[data-type="glossary"] {
  /* Discard this Page-specific glossary because it is collated later and the title is added when this is collated */
  x-display: none; }

div[data-type="chapter"] div[data-type="glossary"] dl > [data-type="title"] {
  /* Discard this Page-specific title because a chapter title is added when collated */
  x-display: none; }

div[data-type="chapter"]::after(1) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-glossary-container";
  attrs-add: "data-type" "composite-page", "uuid-key" "<glossary>";
  content: move-here('div[data-type="glossary"] dl');
  x-log: "TODO: implement sort-by somehow. xhtml|dl > xhtml|dt"; }

div[data-type="chapter"] section.section-summary {
  /* TODO: Is this used? because it looks like there is a typo here. `sectionHeaderNode` is not defined */
  x-log: "Should be unused";
  content: nodes(sectionHeaderNode) content(); }
  div[data-type="chapter"] section.section-summary > [data-type="title"] {
    /* Discard this Page-specific title because a chapter title is added when collated */
    x-display: none; }

div[data-type="chapter"]::after(2) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-section-summary-container";
  attrs-add: "data-type" "composite-page", "uuid-key" ".section-summary";
  content: move-here("section.section-summary"); }

div[data-type="chapter"] section.conceptual-questions {
  /* TODO: Is this used? because it looks like there is a typo here. `sectionHeaderNode` is not defined */
  x-log: "Should be unused";
  content: nodes(sectionHeaderNode) content(); }
  div[data-type="chapter"] section.conceptual-questions > [data-type="title"] {
    /* Discard this Page-specific title because a chapter title is added when collated */
    x-display: none; }

div[data-type="chapter"]::after(3) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-conceptual-questions-container";
  attrs-add: "data-type" "composite-page", "uuid-key" ".conceptual-questions";
  content: move-here("section.conceptual-questions"); }

div[data-type="chapter"] section.problems-exercises {
  /* TODO: Is this used? because it looks like there is a typo here. `sectionHeaderNode` is not defined */
  x-log: "Should be unused";
  content: nodes(sectionHeaderNode) content(); }
  div[data-type="chapter"] section.problems-exercises > [data-type="title"] {
    /* Discard this Page-specific title because a chapter title is added when collated */
    x-display: none; }

div[data-type="chapter"]::after(4) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-problems-exercises-container";
  attrs-add: "data-type" "composite-page", "uuid-key" ".problems-exercises";
  content: move-here("section.problems-exercises"); }

div[data-type="chapter"] section.ap-test-prep {
  /* TODO: Is this used? because it looks like there is a typo here. `sectionHeaderNode` is not defined */
  x-log: "Should be unused";
  content: nodes(sectionHeaderNode) content(); }
  div[data-type="chapter"] section.ap-test-prep > [data-type="title"] {
    /* Discard this Page-specific title because a chapter title is added when collated */
    x-display: none; }

div[data-type="chapter"]::after(5) {
  tag-name-set: "div";
  class-add: "os-eoc", "os-ap-test-prep-container";
  attrs-add: "data-type" "composite-page", "uuid-key" ".ap-test-prep";
  content: move-here("section.ap-test-prep"); }

[data-type="example"] [data-type="exercise"]:not(.unnumbered) {
  class-add: "unnumbered"; }

[data-type="exercise"][data-element-type="check-understanding"]:not(.unnumbered) {
  class-add: "unnumbered"; }

[data-type="chapter"] [data-type="page"].introduction::before(1) {
  tag-name-set: "div";
  class-add: "os-chapter-outline"; }
  [data-type="chapter"] [data-type="page"].introduction::before(1)::before(2) {
    tag-name-set: "h3";
    class-add: "os-title";
    content: "Chapter Outline"; }
  [data-type="chapter"] [data-type="page"].introduction::before(1)::for-each(1, following-sibling, '[data-type="page"]:not(.introduction)') {
    tag-name-set: "div";
    class-add: "os-chapter-objective"; }
    [data-type="chapter"] [data-type="page"].introduction::before(1)::for-each(1, following-sibling, '[data-type="page"]:not(.introduction)')::before(1) {
      tag-name-set: "a";
      class-add: "os-chapter-objective";
      attrs-add: "href" "#" x-attr-ensure-id(); }
      [data-type="chapter"] [data-type="page"].introduction::before(1)::for-each(1, following-sibling, '[data-type="page"]:not(.introduction)')::before(1)::before(501) {
        tag-name-set: "span";
        class-add: os-number;
        content: counter(chapter) "." counter(section); }
      [data-type="chapter"] [data-type="page"].introduction::before(1)::for-each(1, following-sibling, '[data-type="page"]:not(.introduction)')::before(1)::before(500) {
        tag-name-set: "span";
        class-add: os-divider;
        content: " "; }
      [data-type="chapter"] [data-type="page"].introduction::before(1)::for-each(1, following-sibling, '[data-type="page"]:not(.introduction)')::before(1)::before(1) {
        tag-name-set: "span";
        class-add: "os-text";
        content: descendant-context('> [data-type="document-title"]', text-contents()); }

.os-eoc [data-type="exercise"] [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exercise); }

.os-eoc [data-type="exercise"] [data-type="solution"]::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exercise); }

div[data-type="page"] > [data-type="document-title"],
div[data-type="composite-page"] > [data-type="document-title"] {
  node-set: sectionHeaderNode; }

[data-element-type="check-understanding"] [data-type="solution"] > [data-type="title"] {
  x-display: none; }

[data-element-type="check-understanding"] [data-type="solution"]::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Solution"; }

[data-element-type="check-understanding"] [data-type="solution"]::before {
  content: pending(bSolutionHeader);
  attrs-add: "data-type" "title";
  class-add: "solution-title";
  tag-name-set: h4; }

[data-type="chapter"] .os-eoc.os-conceptual-questions-container [data-type="solution"] {
  move-to: solutions-GETCHAPTER; }

[data-type="chapter"] .os-eoc.os-problems-exercises-container [data-type="solution"] {
  move-to: solutions-GETCHAPTER; }

[data-type="chapter"] .os-eoc.os-ap-test-prep-container [data-type="solution"] {
  move-to: solutions-GETCHAPTER; }

[data-type="chapter"] > h1[data-type="document-title"] .os-number {
  string-set: ChapNum content(); }

[data-type="chapter"]::after {
  container: h2;
  class: "os-title";
  content: "Chapter " string(ChapNum);
  move-to: chaptTitleEOB; }

[data-type="chapter"]::after {
  class: os-chapter-area;
  content: pending(chaptTitleEOB) pending(note-solutions-GETCHAPTER) pending(solutions-GETCHAPTER);
  move-to: solutions-TOCOMPOSITE; }

body::after {
  container: div;
  content: pending(solutions-TOCOMPOSITE);
  class: "os-eob os-solutions-container";
  data-type: "composite-page";
  data-uuid-key: ".solutions";
  /* TODO: Is this the correct key? We'll be stuck with it because it is used for generating the collated page uuid's */ }

body::after {
  container: div;
  content: pending(solutions-TOCOMPOSITE);
  class: "os-eob os-solutions-container";
  data-type: "composite-page";
  data-uuid-key: ".solutions"; }

body::after {
  container: div;
  content: pending(index-TOCOMPOSITE);
  class: "os-eob os-index-container";
  data-type: "composite-page";
  data-uuid-key: "<index>";
  group-by: span, "span::attr(group-by)", nocase; }

.os-index-container > div.group-by:first-of-type > span.group-label:match("^[ ](Symbols|SYMBOLS)") {
  content: "Symbols"; }

.os-eoc [data-type="exercise"] {
  string-set: target-label "Exercise " count-of-type("body", '[data-type="chapter"]') "." counter(exercise);
  string-set: target-label-nominative "Exercise " count-of-type("body", '[data-type="chapter"]') "." counter(exercise); }

div[data-type="chapter"] [data-type="example"] {
  string-set: target-label "Example " count-of-type("body", '[data-type="chapter"]') "." counter(example);
  string-set: target-label-nominative "Example " count-of-type("body", '[data-type="chapter"]') "." counter(example); }

div[data-type="chapter"] [data-type="equation"]:not(.unnumbered) {
  string-set: target-label "Equation " count-of-type("body", '[data-type="chapter"]') "." counter(equation);
  string-set: target-label-nominative "Equation " count-of-type("body", '[data-type="chapter"]') "." counter(equation); }

[data-type="chapter"] :not(table) > table:not(.unnumbered) {
  string-set: target-label "Table " count-of-type("body", '[data-type="chapter"]') "." counter(table);
  string-set: target-label-nominative "Table " count-of-type("body", '[data-type="chapter"]') "." counter(table); }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered) {
  string-set: target-label "Figure " count-of-type("body", '[data-type="chapter"]') "." counter(figure);
  string-set: target-label-nominative "Figure " count-of-type("body", '[data-type="chapter"]') "." counter(figure); }

.appendix :not(table) > table:not(.unnumbered) {
  string-set: target-label "Table " counter(appendix, upper-alpha) counter(table);
  string-set: target-label-nominative "Table " counter(appendix, upper-alpha) counter(table); }

.appendix :not(figure) > figure:not(.unnumbered) {
  string-set: target-label "Figure " counter(appendix, upper-alpha) counter(figure);
  string-set: target-label-nominative "Figure " counter(appendix, upper-alpha) counter(figure); }

.appendix > table:not(.unnumbered) {
  string-set: target-label "Table " counter(appendix, upper-alpha) counter(table);
  string-set: target-label-nominative "Table " counter(appendix, upper-alpha) counter(table); }

.appendix > figure:not(.unnumbered) {
  string-set: target-label "Figure " counter(appendix, upper-alpha) counter(figure);
  string-set: target-label-nominative "Figure " counter(appendix, upper-alpha) counter(figure); }

a.autogenerated-content {
  content: target-string(attr(href), target-label); }
  a.autogenerated-content[cmlnle|case="nominative"] {
    content: target-string(attr(href), target-label-nominative); }

[data-type="chapter"] [data-type="equation"]:not(.unnumbered)::before(501), .appendix [data-type="equation"]:not(.unnumbered)::before(501) {
  tag-name-set: "span";
  class-add: os-divider;
  content: " "; }

[data-type="chapter"] [data-type="equation"]:not(.unnumbered)::before(500), .appendix [data-type="equation"]:not(.unnumbered)::before(500) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(chapter) "." counter(equation); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

[data-type="composite-page"] {
  content: nodes(bookMetadata) content(); }

[data-type="composite-page"].os-eoc.os-glossary-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Glossary"; }

[data-type="composite-page"].os-eoc.os-glossary-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-section-summary-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Section Summary"; }

[data-type="composite-page"].os-eoc.os-section-summary-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-conceptual-questions-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Conceptual Questions"; }

[data-type="composite-page"].os-eoc.os-conceptual-questions-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-problems-exercises-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Problems & Exercises"; }

[data-type="composite-page"].os-eoc.os-problems-exercises-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eoc.os-ap-test-prep-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Test Prep for APÂ® Courses"; }

[data-type="composite-page"].os-eoc.os-ap-test-prep-container::outside {
  tag-name-set: h2;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eob.os-solutions-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Answer Key"; }

[data-type="composite-page"].os-eob.os-solutions-container::outside {
  tag-name-set: h1;
  attrs-add: "data-type" "document-title"; }

[data-type="composite-page"].os-eob.os-index-container::before(500) {
  tag-name-set: "span";
  class-add: os-text;
  content: "Index"; }

[data-type="composite-page"].os-eob.os-index-container::outside {
  tag-name-set: h1;
  attrs-add: "data-type" "document-title"; }

div[data-type='chapter'] > h1[data-type='document-title'] {
  counter-increment: chapTitleNum;
  attr-id: "chapTitle" counter(chapTitleNum); }

[data-type="chapter"] [data-type="page"] [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(501) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exerciseMaybeInContent); }

[data-type="chapter"] [data-type="page"] [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-title-label;
  content: "Exercise "; }

.appendix [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(501) {
  tag-name-set: "span";
  class-add: os-number;
  content: counter(exerciseMaybeInContent); }

.appendix [data-type="exercise"]:not(.unnumbered) [data-type="problem"]::before(500) {
  tag-name-set: "span";
  class-add: os-title-label;
  content: "Exercise "; }

[data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

[data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Table "; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: count-of-type("body", '[data-type="chapter"]') "." counter(table); }
  [data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  [data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(1) {
    content: parent-context(move-here('caption [data-type="title"]')); }

[data-type="chapter"] :not(table) > table:not(.unnumbered):not(.splash)::outside {
  tag-name-set: "div";
  class-add: os-table; }

[data-type="chapter"] > table.unnumbered caption {
  x-display: none; }

.appendix :not(table) > table:not(.unnumbered):not(.splash) caption [data-type="title"],
.appendix > table:not(.unnumbered):not(.splash) caption [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

.appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside,
.appendix > table:not(.unnumbered):not(.splash) caption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  .appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(502),
  .appendix > table:not(.unnumbered):not(.splash) caption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Table "; }
  .appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(501),
  .appendix > table:not(.unnumbered):not(.splash) caption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: counter(appendix, upper-alpha) counter(table); }
  .appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(500),
  .appendix > table:not(.unnumbered):not(.splash) caption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }
  .appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(2),
  .appendix > table:not(.unnumbered):not(.splash) caption::outside::before(2) {
    tag-name-set: "span";
    class-add: 'os-divider';
    content: ' ';
    move-to: bCaptionDivider; }
  .appendix :not(table) > table:not(.unnumbered):not(.splash) caption::outside::before(1),
  .appendix > table:not(.unnumbered):not(.splash) caption::outside::before(1) {
    content: parent-context(move-here('caption [data-type="title"]')); }

.appendix :not(table) > table:not(.unnumbered):not(.splash)::outside,
.appendix > table:not(.unnumbered):not(.splash)::outside {
  tag-name-set: "div";
  class-add: os-table; }

.appendix > table.unnumbered caption {
  x-display: none; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) figcaption {
  tag-name-set: "span";
  class-add: "os-caption"; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Figure "; }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: count-of-type("body", '[data-type="chapter"]') "." count-of-type('[data-type="chapter"]', "figure:not(.splash)"); }
  [data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }

[data-type="chapter"] :not(figure) > figure:not(.unnumbered):not(.splash)::outside {
  tag-name-set: "div";
  class-add: os-figure; }

[data-type="chapter"] > figure.unnumbered figcaption {
  x-display: none; }

.appendix :not(figure) > figure:not(.unnumbered):not(.splash) figcaption,
.appendix > figure:not(.unnumbered):not(.splash) figcaption {
  tag-name-set: "span";
  class-add: "os-caption"; }

.appendix :not(figure) > figure:not(.unnumbered):not(.splash) [data-type="title"],
.appendix > figure:not(.unnumbered):not(.splash) [data-type="title"] {
  tag-name-set: "span";
  class-add: "os-title"; }

.appendix :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside,
.appendix > figure:not(.unnumbered):not(.splash) figcaption::outside {
  tag-name-set: "div";
  class-add: "os-caption-container"; }
  .appendix :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(502),
  .appendix > figure:not(.unnumbered):not(.splash) figcaption::outside::before(502) {
    tag-name-set: "span";
    class-add: os-title-label;
    content: "Figure "; }
  .appendix :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(501),
  .appendix > figure:not(.unnumbered):not(.splash) figcaption::outside::before(501) {
    tag-name-set: "span";
    class-add: os-number;
    content: number-to-letter(count-of-type("body", '[data-type="page"].appendix, [data-type="chapter"].appendix'), upper-latin) count-of-type('[data-type="page"].appendix, [data-type="chapter"].appendix', "figure:not(.splash)"); }
  .appendix :not(figure) > figure:not(.unnumbered):not(.splash) figcaption::outside::before(500),
  .appendix > figure:not(.unnumbered):not(.splash) figcaption::outside::before(500) {
    tag-name-set: "span";
    class-add: os-divider;
    content: " "; }

.appendix :not(figure) > figure:not(.unnumbered):not(.splash)::outside,
.appendix > figure:not(.unnumbered):not(.splash)::outside {
  tag-name-set: "div";
  class-add: os-figure; }

.appendix > figure.unnumbered figcaption {
  x-display: none; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] > .os-title {
  tag-name-set: h3; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] [data-type="solution"] .solution-title {
  tag-name-set: h4; }

[data-type="composite-page"].os-eoc > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-page"].os-eoc > div > div > div > section > [data-type="document-title"] {
  tag-name-set: h4; }

[data-type="composite-page"].os-eob > .os-chapter-area > [data-type="document-title"] {
  tag-name-set: h2; }

[data-type="composite-page"].os-eob > .os-chapter-area > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-chapter"] > section [data-type="document-title"], [data-type="composite-chapter"] > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="title"] {
  tag-name-set: h2; }

[data-type="composite-chapter"] > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="title"] {
  tag-name-set: h3;
  attrs-add: "data-type" title; }

[data-type="composite-chapter"] > section > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="title"] {
  tag-name-set: h4; }

.appendix > section [data-type="title"], .appendix > section [data-type="document-title"] {
  tag-name-set: h2; }

.appendix > section > section [data-type="title"], .appendix > section > section [data-type="document-title"] {
  tag-name-set: h3; }

.os-eoc [data-type="solution"] {
  x-display: none; }

.os-index-link-separator:last-child {
  x-display: none; }

[data-type="composite-page"] > [data-type="document-title"], [data-type="composite-chapter"] > [data-type="document-title"] {
  string-set: doc-title-TOMETADATA content(); }

[data-type="composite-page"] > [data-type="metadata"] > [data-type="document-title"], [data-type="composite-chapter"] > [data-type="metadata"] > [data-type="document-title"] {
  content: string(doc-title-TOMETADATA); }

div.os-eoc [data-type="cnx-archive-uri"],
div.os-eob [data-type="cnx-archive-uri"] {
  x-display: none; }

[data-type="composite-chapter"] > [data-type="metadata"] > [data-type="cnx-archive-uri"] {
  x-display: none; }

body > div[data-type="page"],
body > div[data-type="composite-page"] {
  string-set: page-id attr(id); }
  body > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: pageTitle; }
  body > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="page"]::after,
  body > div[data-type="composite-page"]::after {
    content: nodes(pageTitle);
    attr-href: "#" string(page-id);
    container: a;
    move-to: page-link; }
  body > div[data-type="page"]::after,
  body > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eob-toc;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="chapter"] > [data-type='document-title'], body > div[data-type="composite-chapter"] > [data-type='document-title'] {
  node-set: chapterTitle;
  string-set: chapTitle-id attr(id); }

body > div[data-type="chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="composite-chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: chap-shortid attr(data-value); }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: nodes(chapterTitle);
  attr-href: "#" string(chapTitle-id);
  container: a;
  move-to: eoc-toc; }

body > div[data-type="chapter"] > div[data-type="page"],
body > div[data-type="chapter"] > div[data-type="composite-page"], body > div[data-type="composite-chapter"] > div[data-type="page"],
body > div[data-type="composite-chapter"] > div[data-type="composite-page"] {
  string-set: page-id-chap attr(id); }
  body > div[data-type="chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='document-title'], body > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: PageTitle; }
  body > div[data-type="chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: nodes(PageTitle);
    attr-href: "#" string(page-id-chap);
    container: a;
    move-to: page-link; }
  body > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eoc-toc-pages;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc-pages);
  container: ol;
  class: os-chapter;
  move-to: eoc-toc; }

body > div[data-type="chapter"]::after, body > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(chap-shortid);
  container: li;
  move-to: eob-toc; }

body > div[data-type="unit"] > [data-type='document-title'] {
  node-set: unitTitle;
  string-set: uTitle-id attr(id); }

body > div[data-type="unit"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: unit-shortid attr(data-value); }

body > div[data-type="unit"]::after {
  content: nodes(unitTitle);
  attr-href: "#" string(uTitle-id);
  container: a;
  move-to: eou-toc; }

body > div[data-type="unit"] > div[data-type="chapter"] > [data-type='document-title'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > [data-type='document-title'] {
  node-set: chapterTitle;
  string-set: chapTitle-id attr(id); }

body > div[data-type="unit"] > div[data-type="chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
  string-set: chap-shortid attr(data-value); }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: nodes(chapterTitle);
  attr-href: "#" string(chapTitle-id);
  container: a;
  move-to: eoc-toc; }

body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"],
body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"],
body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] {
  string-set: page-id-chap attr(id); }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='document-title'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='document-title'],
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='document-title'] {
    node-set: PageTitle; }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'], body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'],
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"] > [data-type='metadata']
> [data-type='cnx-archive-shortid'] {
    string-set: page-shortid attr(data-value); }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: nodes(PageTitle);
    attr-href: "#" string(page-id-chap);
    container: a;
    move-to: page-link; }
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="chapter"] > div[data-type="composite-page"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="page"]::after,
  body > div[data-type="unit"] > div[data-type="composite-chapter"] > div[data-type="composite-page"]::after {
    content: pending(page-link);
    move-to: eoc-toc-pages;
    attr-cnx-archive-uri: attr(id);
    attr-cnx-archive-shortid: string(page-shortid);
    container: li; }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc-pages);
  container: ol;
  class: os-chapter;
  move-to: eoc-toc; }

body > div[data-type="unit"] > div[data-type="chapter"]::after, body > div[data-type="unit"] > div[data-type="composite-chapter"]::after {
  content: pending(eoc-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(chap-shortid);
  container: li;
  move-to: eou-toc-chapters; }

body > div[data-type="unit"]::after {
  content: pending(eou-toc-chapters);
  container: ol;
  class: os-unit;
  move-to: eou-toc; }

body > div[data-type="unit"]::after {
  content: pending(eou-toc);
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(unit-shortid);
  container: li;
  move-to: eob-toc; }

nav#toc {
  content: ''; }
  nav#toc::after {
    content: pending(eob-toc);
    container: ol; }

nav#toc li > a > h1 > span,
nav#toc li > a > h2 > span,
nav#toc li > a > div > span {
  move-to: title-spans; }

nav#toc li > a:deferred {
  content: pending(title-spans); }

body:deferred::after {
  content: clear(trash); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

body .appendix {
  move-to: chapterAppendices; }

body::after {
  container: span;
  class: "os-text";
  content: "Appendices";
  move-to: AppendixTitleSpans; }

body::after {
  container: h1;
  data-type: "document-title";
  content: pending(AppendixTitleSpans);
  move-to: appendicesTitle; }

body::after {
  data-type: composite-chapter;
  data-uuid-key: appendicesChapter;
  content: pending(appendicesTitle) nodes(bookMetadata) pending(chapterAppendices); }

.appendix::inside {
  container: section;
  class: "appendix-container"; }

.appendix .appendix-container > h1[data-type="document-title"] {
  copy-to: appendixTitle; }

.appendix .appendix-container [data-type="metadata"] {
  move-to: metadata; }

.appendix:deferred {
  content: pending(appendixTitle) pending(metadata) content(); }

body > [data-type="metadata"] {
  node-set: bookMetadata; }

body .preface::after {
  container: span;
  class: "os-text";
  content: "Preface";
  move-to: prefaceTitleSpans; }

body .preface::after {
  container: h1;
  data-type: "document-title";
  content: pending(prefaceTitleSpans);
  move-to: prefaceTitle; }

body .preface::outside {
  data-type: composite-chapter;
  data-uuid-key: prefaceChapter;
  content: pending(prefaceTitle) nodes(bookMetadata) content(); }

.preface::inside {
  container: section;
  class: "preface-container"; }

.preface .preface-container > h1[data-type="document-title"] {
  copy-to: prefaceTitle; }

.preface .preface-container [data-type="metadata"] {
  move-to: metadata; }

.preface:deferred {
  content: pending(prefaceTitle) pending(metadata) content(); }

.preface-container > h1[data-type="document-title"] {
  container: h2; }

[data-type="composite-chapter"] > [data-type="metadata"] [data-type="document-title"] {
  content: "Preface"; }

[data-type="composite-chapter"] .preface > [data-type="document-title"] {
  container: h2; }

[data-type="composite-chapter"] .preface .preface-container > [data-type="document-title"] {
  container: h3; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > div[data-type="metadata"] {
  node-set: page-meta;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > [data-type="document-title"] {
  node-set: page-doc-title;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.learning-objectives,
:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.learning-objective {
  node-set: page-LO;
  move-to: trash; }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener {
  class: "learning-objectives"; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > div[data-type="title"] {
    move-to: trash; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objectives,
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objective {
    move-to: trash; }
    :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objectives > *,
    :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > .learning-objective > * {
      move-to: newLOContainer; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener > *:not(.learning-objectives):not(.learning-objective) {
    move-to: newLOContainer; }
  :pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction) > section.section-opener:deferred {
    content: content() pending(newLOContainer); }

:pass(1) [data-type="page"]:not(.preface):not(.appendix):not(.introduction):deferred {
  content: nodes(page-doc-title) nodes(page-meta) nodes(page-LO) content(); }

:pass(1) body:deferred::after {
  content: clear(trash); }

.os-index-container {
  x-display: none; }

.os-solutions-container {
  x-display: none; }

.os-teacher {
  x-display: none; }

body:deferred::after {
  content: clear(trash); }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] > .os-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] > .os-title {
  tag-name-set: h3; }

[data-type="chapter"] [data-type="page"] :not([data-type="note"]) > :not([data-type="note"]) > [data-type="note"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="example"] [data-type="solution"] .solution-title,
[data-type="chapter"] [data-type="page"] [data-type="exercise"] [data-type="solution"] .solution-title {
  tag-name-set: h4; }

[data-type="composite-page"].os-eoc > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-page"].os-eoc > div > div > div > section > [data-type="document-title"] {
  tag-name-set: h4; }

[data-type="composite-page"].os-eob > .os-chapter-area > [data-type="document-title"] {
  tag-name-set: h2; }

[data-type="composite-page"].os-eob > .os-chapter-area > section > [data-type="document-title"] {
  tag-name-set: h3; }

[data-type="composite-chapter"] > section [data-type="document-title"], [data-type="composite-chapter"] > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] [data-type="title"] {
  tag-name-set: h2; }

[data-type="composite-chapter"] > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section [data-type="title"] {
  tag-name-set: h3;
  attrs-add: "data-type" title; }

[data-type="composite-chapter"] > section > section > section [data-type="document-title"], [data-type="composite-chapter"] > section > section > section [data-type="title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="document-title"],
[data-type="composite-chapter"] > [data-type="page"] > section > section [data-type="title"] {
  tag-name-set: h4; }

.appendix > section [data-type="title"], .appendix > section [data-type="document-title"] {
  tag-name-set: h2; }

.appendix > section > section [data-type="title"], .appendix > section > section [data-type="document-title"] {
  tag-name-set: h3; }

/*# sourceMappingURL=TEAap-physics.css.map */