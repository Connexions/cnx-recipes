#!/bin/sh
set -e

# This fetches the raw HTML for a book (or all books if using the --all argument) from ${HOST}

HOST='cte-cnx-dev.cnx.org'

ARG1=$1


# Check command line args

if [ -z "${ARG1}" ]
then
  >&2 echo 'ERROR: Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
  exit 1
fi

if [ "${ARG1}" == "--all" ]
then
  source ./books.txt
else
  BOOK_LIST="${ARG1}"
fi

>&2 echo "Preparing to fetch book(s): ${BOOK_LIST}"

for bookName in ${BOOK_LIST}
do

  rulesetNameAndUuid=($(./scripts/_convert-bookname-to-ruleset-name-and-uuid ${bookName}))
  BOOK_UUID_AND_VER=${rulesetNameAndUuid[1]}

  rawFile="./data/${bookName}-raw.html"

  if [ -z "${BOOK_UUID_AND_VER}" ]
  then
    >&2 echo "ERROR: Could not find Book UUID for book named ${bookName}"
    exit 1
  fi

  >&2 echo "==> Generating an EPUB from the database and converting to a single HTML file (may take a minute)"
  >&2 echo "Book name: ${bookName} ${BOOK_UUID_AND_VER}"

  TEMP_EPUB_PATH="~/temp.intenral.epub"
  TEMP_HTML_PATH="~/temp.html"

  RM_TEMP_EPUB_CMD="[ -e ${TEMP_EPUB_PATH} ] && rm ${TEMP_EPUB_PATH}"
  RM_TEMP_HTML_CMD="[ -e ${TEMP_HTML_PATH} ] && rm ${TEMP_HTML_PATH}"
  GENERATE_EPUB_CMD="/var/cnx/venvs/publishing/bin/cnx-archive-export_epub /etc/cnx/publishing/app.ini ${BOOK_UUID_AND_VER} ${TEMP_EPUB_PATH}"
  GENERATE_HTML_CMD="/var/cnx/venvs/publishing/bin/cnx-epub-single_html ${TEMP_EPUB_PATH} > ${TEMP_HTML_PATH}"

  CMD="${RM_TEMP_EPUB_CMD}; ${RM_TEMP_HTML_CMD}; ${GENERATE_EPUB_CMD} && ${GENERATE_HTML_CMD}"

  ssh ${USER}@${HOST} ${CMD}

  >&2 echo "==> Copying HTML file from server to local machine"
  scp ${USER}@${HOST}:${TEMP_HTML_PATH} ${rawFile}

  >&2 echo "Fetch is Done. File is available at ${rawFile}"

done
