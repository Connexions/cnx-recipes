#!/bin/sh
set -e

# This fetches the raw HTML for a book (or all books if using the --all argument) from ${HOST}

HOST='cte-cnx-dev.cnx.org'

arg1=$1


# Check command line args

if [ -z "${arg1}" ]
then
  >&2 echo 'ERROR: Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
  exit 1
fi

if [ "${arg1}" == "--all" ]
then
  source ./books.txt
else
  BOOK_LIST="${arg1}"
fi

>&2 echo "Preparing to fetch book(s): ${BOOK_LIST}"

for bookName in ${BOOK_LIST}
do

  rulesetNameAndUuid=($(./scripts/_convert-bookname-to-ruleset-name-and-uuid ${bookName}))
  bookUuidAndVer=${rulesetNameAndUuid[1]}
  rawFile="./data/${bookName}-raw.html"

  if [ -z "${bookUuidAndVer}" ]
  then
    >&2 echo "ERROR: Could not find Book UUID for book named ${bookName}"
    exit 1
  fi

  >&2 echo "==> Generating an EPUB from the database and converting to a single HTML file (may take a minute)"
  >&2 echo "Book name: ${bookName} ${bookUuidAndVer}"

  tempEpubFile="~/temp.intenral.epub"
  tempHtmlFile="~/temp.html"

  rmTempEpubCmd="[ -e ${tempEpubFile} ] && rm ${tempEpubFile}"
  rmTempHtmlCmd="[ -e ${tempHtmlFile} ] && rm ${tempHtmlFile}"
  generateEpubCmd="/var/cnx/venvs/publishing/bin/cnx-archive-export_epub /etc/cnx/publishing/app.ini ${bookUuidAndVer} ${tempEpubFile}"
  generateHtmlCmd="/var/cnx/venvs/publishing/bin/cnx-epub-single_html ${tempEpubFile} > ${tempHtmlFile}"

  commands="${rmTempEpubCmd}; ${rmTempHtmlCmd}; ${generateEpubCmd} && ${generateHtmlCmd}"

  ssh ${USER}@${HOST} ${commands}

  >&2 echo "==> Copying HTML file from server to local machine"
  scp ${USER}@${HOST}:${tempHtmlFile} ${rawFile}

  >&2 echo "Fetch is Done. File is available at ${rawFile}"

done
