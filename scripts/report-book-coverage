#!/bin/sh
set -e


ARG1=$1
DEBUG_FLAG1=$2 # could be --debug or --verbose (or both)
DEBUG_FLAG2=$3

# Check command line args

if [ -z "${ARG1}" ]
then
  >&2 echo 'ERROR: Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
  exit 1
fi

if [ "${ARG1}" == "--all" ]
then
  source ./books.txt
else
  BOOK_LIST="${ARG1}"
fi

for BOOK_NAME in ${BOOK_LIST}
do

  RAW_PATH="./data/${BOOK_NAME}-raw.html"
  LCOV_PATH="./data/${BOOK_NAME}.lcov"

  if [ ! -f "${RAW_PATH}" ]
  then
    >&2 echo "ERROR: HTML File missing at ${RAW_PATH}"
    exit 1
  fi

  RULESET_NAME_AND_UUID=($(./scripts/_convert-bookname-to-ruleset-name-and-uuid ${BOOK_NAME}))
  RULESET_NAME=${RULESET_NAME_AND_UUID[0]}

  CSS_PATH="./books/rulesets/output/${RULESET_NAME}.css"

  if [ ! -f "${CSS_PATH}" ]
  then
    >&2 echo "ERROR: CSS File missing at ${CSS_PATH}"
    exit 1
  fi

  # Print out the message first because css-coverage will set
  # a non-zero exit status if there are unused selectors
  # and the `set -e` at the top of this script will exit at that point

  >&2 echo "Coverage is being generated. To see an HTML version, run the following:"
  >&2 echo "genhtml ${LCOV_PATH} --output-directory ./coverage"
  >&2 echo "Note: to run this you may need to install genhtml. In OSX it is 'brew install lcov'"

  ./node_modules/.bin/css-coverage --css ${CSS_PATH} --html ${RAW_PATH} --lcov ${LCOV_PATH} ${DEBUG_FLAG1} ${DEBUG_FLAG2}

done
